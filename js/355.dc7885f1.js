(self["webpackChunkimage_online_tools"]=self["webpackChunkimage_online_tools"]||[]).push([[355],{9448:function(t,e,n){"use strict";n.d(e,{Z:function(){return c}});var i=function(){var t=this,e=t._self._c;return e("svg",{staticStyle:{"margin-top":"-2px"},attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"white",width:"20px",height:"20px"}},[e("path",{attrs:{d:"M0 0h24v24H0z",fill:"none"}}),e("path",{attrs:{fill:t.color,d:"M3 10h18v4h-18Z"}}),e("path",{attrs:{fill:t.color,d:"M10 3v18h4v-18Z"}})])},r=[],a={name:"IconAdd",props:{color:{type:String,default:"#ffffff"}}},s=a,o=n(1001),l=(0,o.Z)(s,i,r,!1,null,"432b4300",null),c=l.exports},4604:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return hp}});var i=function(){var t=this,e=t._self._c;return e("div",[e("HeaderOnlineTools"),e("Breadcrumb",{attrs:{pageId:"3d-text-generator"}}),t._m(0),e("br"),e("div",{staticClass:"imageGridLayout"},[e("div"),e("div",{staticClass:"div_options"},[t._m(1),t._m(2),e("div",{staticClass:"optionsLayout"},[e("div",{staticClass:"div_option"},[t._v("text")]),e("div",[e("textarea",{directives:[{name:"model",rawName:"v-model",value:t.options.text,expression:"options.text"}],staticStyle:{width:"100%"},domProps:{value:t.options.text},on:{keyup:function(e){return t.updateTextGeometry()},input:function(e){e.target.composing||t.$set(t.options,"text",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v("font")]),e("div",[e("select",{directives:[{name:"model",rawName:"v-model",value:t.options.fontFileName,expression:"options.fontFileName"}],on:{change:[function(e){var n=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){var e="_value"in t?t._value:t.value;return e}));t.$set(t.options,"fontFileName",e.target.multiple?n:n[0])},function(e){return t.loadSelectedFont()}]}},t._l(t.fonts,(function(n){return e("option",{key:n.fileName,domProps:{value:n.fileName}},[t._v(t._s(n.name))])})),0)]),e("div",{staticClass:"div_option"},[t._v("color")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textColor,expression:"options.textColor"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.textColor},on:{keyup:function(e){return t.updateTextMaterial()},input:function(e){e.target.composing||t.$set(t.options,"textColor",e.target.value)}}}),e("span",{staticClass:"colorSquare",style:"backgroundColor:"+t.options.textColor,on:{click:function(e){return t.openColorPicker("textColor")}}})]),e("div",{staticClass:"div_option"},[t._v("size")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.size,expression:"options.size"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.size},on:{keyup:function(e){return t.updateTextSize()},input:function(e){e.target.composing||t.$set(t.options,"size",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseTextSize()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseTextSize()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetTextSize()}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.size,expression:"options.size"}],staticClass:"slider_big",attrs:{type:"range",min:t.rangeTextSizeMin,max:t.rangeTextSizeMax,step:"0.01",id:"rangeTextSize"},domProps:{value:t.options.size},on:{input:function(e){return t.updateTextSize()},mouseup:function(e){return t.updateRangeTextSize()},__r:function(e){return t.$set(t.options,"size",e.target.value)}}})])]),t._m(3),e("div",{staticClass:"optionsLayout"},[e("div",{staticClass:"div_option"},[t._v("height")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.height,expression:"options.height"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.height},on:{keyup:function(e){return t.updateTextGeometry()},input:function(e){e.target.composing||t.$set(t.options,"height",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseTextHeight()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseTextHeight()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetTextHeight()}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.height,expression:"options.height"}],staticClass:"slider_big",attrs:{type:"range",min:"0",max:"1",step:"0.01"},domProps:{value:t.options.height},on:{input:function(e){return t.updateTextGeometry()},__r:function(e){return t.$set(t.options,"height",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v("curve segments")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.curveSegments,expression:"options.curveSegments"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.curveSegments},on:{keyup:function(e){return t.updateTextGeometry()},input:function(e){e.target.composing||t.$set(t.options,"curveSegments",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCurveSegments()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCurveSegments()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCurveSegments()}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.curveSegments,expression:"options.curveSegments"}],staticClass:"slider_big",attrs:{type:"range",min:"1",max:"32",step:"1"},domProps:{value:t.options.curveSegments},on:{input:function(e){return t.updateTextGeometry()},__r:function(e){return t.$set(t.options,"curveSegments",e.target.value)}}})])]),t._m(4),e("div",{staticClass:"optionsLayout"},[e("div",{staticClass:"div_option"},[t._v("x")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textPosition.x,expression:"options.textPosition.x"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.textPosition.x},on:{keyup:function(e){return t.updateTextPosition()},input:function(e){e.target.composing||t.$set(t.options.textPosition,"x",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseTextPosition("x")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseTextPosition("x")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetTextPosition("x")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textPosition.x,expression:"options.textPosition.x"}],staticClass:"slider_big",attrs:{type:"range",min:"-5",max:"5",step:"0.01",id:"rangeTextSize"},domProps:{value:t.options.textPosition.x},on:{input:function(e){return t.updateTextPosition()},__r:function(e){return t.$set(t.options.textPosition,"x",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v("y")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textPosition.y,expression:"options.textPosition.y"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.textPosition.y},on:{keyup:function(e){return t.updateTextPosition()},input:function(e){e.target.composing||t.$set(t.options.textPosition,"y",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseTextPosition("y")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseTextPosition("y")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetTextPosition("y")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textPosition.y,expression:"options.textPosition.y"}],staticClass:"slider_big",attrs:{type:"range",min:"-5",max:"5",step:"0.01",id:"rangeTextSize"},domProps:{value:t.options.textPosition.y},on:{input:function(e){return t.updateTextPosition()},__r:function(e){return t.$set(t.options.textPosition,"y",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v("z")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textPosition.z,expression:"options.textPosition.z"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.textPosition.z},on:{keyup:function(e){return t.updateTextPosition()},input:function(e){e.target.composing||t.$set(t.options.textPosition,"z",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseTextPosition("z")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseTextPosition("z")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetTextPosition("z")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textPosition.z,expression:"options.textPosition.z"}],staticClass:"slider_big",attrs:{type:"range",min:"-5",max:"5",step:"0.01",id:"rangeTextSize"},domProps:{value:t.options.textPosition.z},on:{input:function(e){return t.updateTextPosition()},__r:function(e){return t.$set(t.options.textPosition,"z",e.target.value)}}})])]),t._m(5),e("div",[e("div",{staticClass:"div_option"},[t._v(" x "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textRotation.x,expression:"options.textRotation.x"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.textRotation.x},on:{keyup:function(e){return t.updateTextRotation()},input:function(e){e.target.composing||t.$set(t.options.textRotation,"x",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseTextRotationX()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseTextRotationX()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetTextRotationX()}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textRotation.x,expression:"options.textRotation.x"}],staticClass:"slider_big",attrs:{type:"range",min:"-6.28",max:"6.28",step:"0.01",id:"myRange"},domProps:{value:t.options.textRotation.x},on:{input:function(e){return t.updateTextRotation()},__r:function(e){return t.$set(t.options.textRotation,"x",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v(" y "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textRotation.y,expression:"options.textRotation.y"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.textRotation.y},on:{keyup:function(e){return t.updateTextRotation()},input:function(e){e.target.composing||t.$set(t.options.textRotation,"y",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseTextRotationY()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseTextRotationY()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetTextRotationY()}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textRotation.y,expression:"options.textRotation.y"}],staticClass:"slider_big",attrs:{type:"range",min:"-6.28",max:"6.28",step:"0.01",id:"myRange"},domProps:{value:t.options.textRotation.y},on:{input:function(e){return t.updateTextRotation()},__r:function(e){return t.$set(t.options.textRotation,"y",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v(" z "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textRotation.z,expression:"options.textRotation.z"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.textRotation.z},on:{keyup:function(e){return t.updateTextRotation()},input:function(e){e.target.composing||t.$set(t.options.textRotation,"z",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseTextRotationZ()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseTextRotationZ()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetTextRotationZ()}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.textRotation.z,expression:"options.textRotation.z"}],staticClass:"slider_big",attrs:{type:"range",min:"-6.28",max:"6.28",step:"0.01",id:"myRange"},domProps:{value:t.options.textRotation.z},on:{input:function(e){return t.updateTextRotation()},__r:function(e){return t.$set(t.options.textRotation,"z",e.target.value)}}})])]),t._m(6),e("div",{staticClass:"optionsLayout"},[e("div",{staticClass:"div_option"},[t._v("bevel size")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.bevelSize,expression:"options.bevelSize"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.bevelSize},on:{keyup:function(e){return t.updateTextGeometry()},input:function(e){e.target.composing||t.$set(t.options,"bevelSize",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseBevelAttribute("bevelSize")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseBevelAttribute("bevelSize")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetBevelAttribute("bevelSize")}}},[t._v("reset")])]),e("div",{staticClass:"div_option"},[t._v("bevel segments")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.bevelSegments,expression:"options.bevelSegments"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.bevelSegments},on:{keyup:function(e){return t.updateTextGeometry()},input:function(e){e.target.composing||t.$set(t.options,"bevelSegments",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseBevelAttribute("bevelSegments")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseBevelAttribute("bevelSegments")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetBevelAttribute("bevelSegments")}}},[t._v("reset")])]),e("div",{staticClass:"div_option"},[t._v("bevel thickness")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.bevelThickness,expression:"options.bevelThickness"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.bevelThickness},on:{keyup:function(e){return t.updateTextGeometry()},input:function(e){e.target.composing||t.$set(t.options,"bevelThickness",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseBevelAttribute("bevelThickness")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseBevelAttribute("bevelThickness")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetBevelAttribute("bevelThickness")}}},[t._v("reset")])]),e("div",{staticClass:"div_option"},[t._v("bevel offset")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.bevelOffset,expression:"options.bevelOffset"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.bevelOffset},on:{keyup:function(e){return t.updateTextGeometry()},input:function(e){e.target.composing||t.$set(t.options,"bevelOffset",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseBevelAttribute("bevelOffset")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseBevelAttribute("bevelOffset")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetBevelAttribute("bevelOffset")}}},[t._v("reset")])])]),t._m(7),e("div",{staticClass:"optionsLayout"},[t._m(8),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.castShadow,expression:"options.castShadow"}],attrs:{type:"checkbox",id:"checkbox_castShadow"},domProps:{checked:Array.isArray(t.options.castShadow)?t._i(t.options.castShadow,null)>-1:t.options.castShadow},on:{change:[function(e){var n=t.options.castShadow,i=e.target,r=!!i.checked;if(Array.isArray(n)){var a=null,s=t._i(n,a);i.checked?s<0&&t.$set(t.options,"castShadow",n.concat([a])):s>-1&&t.$set(t.options,"castShadow",n.slice(0,s).concat(n.slice(s+1)))}else t.$set(t.options,"castShadow",r)},function(e){return t.updateTextShadow()}]}})]),t._m(9),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.receiveShadow,expression:"options.receiveShadow"}],attrs:{type:"checkbox",id:"checkbox_receiveShadow"},domProps:{checked:Array.isArray(t.options.receiveShadow)?t._i(t.options.receiveShadow,null)>-1:t.options.receiveShadow},on:{change:[function(e){var n=t.options.receiveShadow,i=e.target,r=!!i.checked;if(Array.isArray(n)){var a=null,s=t._i(n,a);i.checked?s<0&&t.$set(t.options,"receiveShadow",n.concat([a])):s>-1&&t.$set(t.options,"receiveShadow",n.slice(0,s).concat(n.slice(s+1)))}else t.$set(t.options,"receiveShadow",r)},function(e){return t.updateTextShadow()}]}})])]),t._m(10),e("div",{staticClass:"optionsLayout"},[e("div",{staticClass:"div_option"},[t._v("camera type")]),e("div",[e("select",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraType,expression:"options.cameraType"}],on:{change:[function(e){var n=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){var e="_value"in t?t._value:t.value;return e}));t.$set(t.options,"cameraType",e.target.multiple?n:n[0])},function(e){return t.updateCameraType()}]}},[e("option",{attrs:{value:"PerspectiveCamera"}},[t._v("Perspective")]),e("option",{attrs:{value:"OrthographicCamera"}},[t._v("Orthographic")])])]),"PerspectiveCamera"==t.options.cameraType?e("div",{staticClass:"div_option"},[t._v("field of view")]):t._e(),"PerspectiveCamera"==t.options.cameraType?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.fov,expression:"options.camera.fov"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.camera.fov},on:{keyup:function(e){return t.updateCameraFov()},input:function(e){e.target.composing||t.$set(t.options.camera,"fov",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraFov()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraFov()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraFov()}}},[t._v("reset")])]):t._e(),"PerspectiveCamera"==t.options.cameraType?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.fov,expression:"options.camera.fov"}],staticClass:"slider_big",attrs:{type:"range",min:"0",max:"180",step:"1"},domProps:{value:t.options.camera.fov},on:{input:function(e){return t.updateCameraFov()},__r:function(e){return t.$set(t.options.camera,"fov",e.target.value)}}})]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",{staticClass:"div_option"},[t._v("left")]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.left,expression:"options.camera.left"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.camera.left},on:{keyup:function(e){return t.updateCameraFrustum()},input:function(e){e.target.composing||t.$set(t.options.camera,"left",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraLeft()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraLeft()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraLeft()}}},[t._v("reset")])]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.left,expression:"options.camera.left"}],staticClass:"slider_big",attrs:{type:"range",min:"-10",max:"10",step:"0.01"},domProps:{value:t.options.camera.left},on:{input:function(e){return t.updateCameraFrustum()},__r:function(e){return t.$set(t.options.camera,"left",e.target.value)}}})]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",{staticClass:"div_option"},[t._v("right")]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.right,expression:"options.camera.right"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.camera.right},on:{keyup:function(e){return t.updateCameraFrustum()},input:function(e){e.target.composing||t.$set(t.options.camera,"right",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraRight()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraRight()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraRight()}}},[t._v("reset")])]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.right,expression:"options.camera.right"}],staticClass:"slider_big",attrs:{type:"range",min:"-10",max:"10",step:"0.01"},domProps:{value:t.options.camera.right},on:{input:function(e){return t.updateCameraFrustum()},__r:function(e){return t.$set(t.options.camera,"right",e.target.value)}}})]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",{staticClass:"div_option"},[t._v("top")]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.top,expression:"options.camera.top"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.camera.top},on:{keyup:function(e){return t.updateCameraFrustum()},input:function(e){e.target.composing||t.$set(t.options.camera,"top",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraTop()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraTop()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraTop()}}},[t._v("reset")])]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.top,expression:"options.camera.top"}],staticClass:"slider_big",attrs:{type:"range",min:"-10",max:"10",step:"0.01"},domProps:{value:t.options.camera.top},on:{input:function(e){return t.updateCameraFrustum()},__r:function(e){return t.$set(t.options.camera,"top",e.target.value)}}})]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",{staticClass:"div_option"},[t._v("bottom")]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.bottom,expression:"options.camera.bottom"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.camera.bottom},on:{keyup:function(e){return t.updateCameraFrustum()},input:function(e){e.target.composing||t.$set(t.options.camera,"bottom",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraBottom()}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraBottom()}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraBottom()}}},[t._v("reset")])]):t._e(),"OrthographicCamera"==t.options.cameraType?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.camera.bottom,expression:"options.camera.bottom"}],staticClass:"slider_big",attrs:{type:"range",min:"-10",max:"10",step:"0.01"},domProps:{value:t.options.camera.bottom},on:{input:function(e){return t.updateCameraFrustum()},__r:function(e){return t.$set(t.options.camera,"bottom",e.target.value)}}})]):t._e()]),t._m(11),e("div",[e("div",{staticClass:"div_option"},[t._v(" position x "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraPosition.x,expression:"options.cameraPosition.x"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.cameraPosition.x},on:{keyup:function(e){return t.updateCameraPosition()},input:function(e){e.target.composing||t.$set(t.options.cameraPosition,"x",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraPosition("x")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraPosition("x")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraPosition("x")}}},[t._v("reset")])]),e("div",{staticClass:"div_option"},[t._v(" position y "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraPosition.y,expression:"options.cameraPosition.y"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.cameraPosition.y},on:{keyup:function(e){return t.updateCameraPosition()},input:function(e){e.target.composing||t.$set(t.options.cameraPosition,"y",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraPosition("y")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraPosition("y")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraPosition("y")}}},[t._v("reset")])]),e("div",{staticClass:"div_option"},[t._v(" position z "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraPosition.z,expression:"options.cameraPosition.z"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.cameraPosition.z},on:{keyup:function(e){return t.updateCameraPosition()},input:function(e){e.target.composing||t.$set(t.options.cameraPosition,"z",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraPosition("z")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraPosition("z")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraPosition("z")}}},[t._v("reset")])]),e("div",{staticClass:"div_option"},[e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{"margin-top":"2px"},attrs:{type:"button"},on:{click:function(e){return t.moveCameraForward(.3)}}},[e("IconForward"),t._v(" Move forward")],1)]),e("div",{staticClass:"div_option"},[e("button",{staticClass:"btn btn-sm btn-primary",staticStyle:{"margin-top":"2px"},attrs:{type:"button"},on:{click:function(e){return t.moveCameraForward(-.3)}}},[e("IconBackward"),t._v(" Move backward")],1)])]),t._m(12),e("div",[e("div",{staticClass:"div_option"},[t._v(" rotation x "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraRotation.x,expression:"options.cameraRotation.x"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.cameraRotation.x},on:{input:[function(e){e.target.composing||t.$set(t.options.cameraRotation,"x",e.target.value)},function(e){return t.triggerUpdateCameraRotation()}]}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraRotation("x")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraRotation("x")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraRotation("x")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraRotation.x,expression:"options.cameraRotation.x"}],staticClass:"slider_big",attrs:{type:"range",min:"-6.28",max:"6.28",step:"0.01",id:"myRange"},domProps:{value:t.options.cameraRotation.x},on:{input:function(e){return t.triggerUpdateCameraRotation()},__r:function(e){return t.$set(t.options.cameraRotation,"x",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v(" rotation y "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraRotation.y,expression:"options.cameraRotation.y"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.cameraRotation.y},on:{input:[function(e){e.target.composing||t.$set(t.options.cameraRotation,"y",e.target.value)},function(e){return t.triggerUpdateCameraRotation()}]}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraRotation("y")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraRotation("y")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraRotation("y")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraRotation.y,expression:"options.cameraRotation.y"}],staticClass:"slider_big",attrs:{type:"range",min:"-6.28",max:"6.28",step:"0.01",id:"myRange"},domProps:{value:t.options.cameraRotation.y},on:{input:function(e){return t.triggerUpdateCameraRotation()},__r:function(e){return t.$set(t.options.cameraRotation,"y",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v(" rotation z "),e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraRotation.z,expression:"options.cameraRotation.z"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.cameraRotation.z},on:{input:[function(e){e.target.composing||t.$set(t.options.cameraRotation,"z",e.target.value)},function(e){return t.triggerUpdateCameraRotation()}]}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseCameraRotation("z")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseCameraRotation("z")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetCameraRotation("z")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.cameraRotation.z,expression:"options.cameraRotation.z"}],staticClass:"slider_big",attrs:{type:"range",min:"-6.28",max:"6.28",step:"0.01",id:"myRange"},domProps:{value:t.options.cameraRotation.z},on:{input:function(e){return t.triggerUpdateCameraRotation()},__r:function(e){return t.$set(t.options.cameraRotation,"z",e.target.value)}}})]),e("div",[e("button",{staticClass:"btn btn-sm btn-primary",attrs:{type:"button"},on:{click:function(e){return t.lookAtTextCenter()}}},[e("IconEye"),t._v(" Look at text (center)")],1)])]),t._m(13),e("div",[t._l(t.options.lights,(function(n,i){return e("div",{key:n.id,staticClass:"optionsLayout",staticStyle:{"margin-bottom":"5px"}},[e("div",[e("b",[t._v("Light #"+t._s(i+1))])]),e("div"),e("div",{staticClass:"div_option"},[t._v("type")]),e("div",[e("select",{directives:[{name:"model",rawName:"v-model",value:n.type,expression:"light.type"}],on:{change:[function(e){var i=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){var e="_value"in t?t._value:t.value;return e}));t.$set(n,"type",e.target.multiple?i:i[0])},function(e){return t.updateLightType(n)}]}},[e("option",{attrs:{value:"DirectionalLight"}},[t._v("Directional light")]),e("option",{attrs:{value:"PointLight"}},[t._v("Point light")]),e("option",{attrs:{value:"AmbientLight"}},[t._v("Ambient light")])])]),e("div",{staticClass:"div_option"},[t._v("color")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.color,expression:"light.color"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.color},on:{keyup:function(e){return t.updateLightColor()},input:function(e){e.target.composing||t.$set(n,"color",e.target.value)}}}),e("span",{staticClass:"colorSquare",style:"backgroundColor:"+n.color,on:{click:function(e){return t.openColorPicker("lightColor",n)}}})]),e("div",{staticClass:"div_option"},[t._v("intensity")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.intensity,expression:"light.intensity"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.intensity},on:{keyup:function(e){return t.updateLightIntensity(n)},input:function(e){e.target.composing||t.$set(n,"intensity",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseLightIntensity(n)}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseLightIntensity(n)}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetLightIntensity(n)}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.intensity,expression:"light.intensity"}],staticClass:"slider_big",attrs:{type:"range",min:"0",max:"2",step:"0.01",id:"rangeTextSize"},domProps:{value:n.intensity},on:{input:function(e){return t.updateLightIntensity(n)},__r:function(e){return t.$set(n,"intensity",e.target.value)}}})]),"AmbientLight"!=n.type?e("div",{staticClass:"div_option"},[t._v("position x")]):t._e(),"AmbientLight"!=n.type?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.position.x,expression:"light.position.x"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.position.x},on:{keyup:function(e){return t.updateLightPosition(n)},input:function(e){e.target.composing||t.$set(n.position,"x",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseLightPosition(n,"x")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseLightPosition(n,"x")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetLightPosition(n,"x")}}},[t._v("reset")])]):t._e(),"AmbientLight"!=n.type?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.position.x,expression:"light.position.x"}],staticClass:"slider_big",attrs:{type:"range",min:"-5",max:"5",step:"0.01",id:"rangeTextSize"},domProps:{value:n.position.x},on:{input:function(e){return t.updateLightPosition(n)},__r:function(e){return t.$set(n.position,"x",e.target.value)}}})]):t._e(),"AmbientLight"!=n.type?e("div",{staticClass:"div_option"},[t._v("position y")]):t._e(),"AmbientLight"!=n.type?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.position.y,expression:"light.position.y"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.position.y},on:{keyup:function(e){return t.updateLightPosition(n)},input:function(e){e.target.composing||t.$set(n.position,"y",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseLightPosition(n,"y")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseLightPosition(n,"y")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetLightPosition(n,"y")}}},[t._v("reset")])]):t._e(),"AmbientLight"!=n.type?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.position.y,expression:"light.position.y"}],staticClass:"slider_big",attrs:{type:"range",min:"-5",max:"5",step:"0.01",id:"rangeTextSize"},domProps:{value:n.position.y},on:{input:function(e){return t.updateLightPosition(n)},__r:function(e){return t.$set(n.position,"y",e.target.value)}}})]):t._e(),"AmbientLight"!=n.type?e("div",{staticClass:"div_option"},[t._v("position z")]):t._e(),"AmbientLight"!=n.type?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.position.z,expression:"light.position.z"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.position.z},on:{keyup:function(e){return t.updateLightPosition(n)},input:function(e){e.target.composing||t.$set(n.position,"z",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseLightPosition(n,"z")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseLightPosition(n,"z")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetLightPosition(n,"z")}}},[t._v("reset")])]):t._e(),"AmbientLight"!=n.type?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.position.z,expression:"light.position.z"}],staticClass:"slider_big",attrs:{type:"range",min:"-5",max:"5",step:"0.01",id:"rangeTextSize"},domProps:{value:n.position.z},on:{input:function(e){return t.updateLightPosition(n)},__r:function(e){return t.$set(n.position,"z",e.target.value)}}})]):t._e(),"AmbientLight"!=n.type?e("div",{staticClass:"div_option"},[e("label",{attrs:{for:"checkbox_castShadow"+n.id}},[t._v("cast shadow")])]):t._e(),"AmbientLight"!=n.type?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.castShadow,expression:"light.castShadow"}],attrs:{type:"checkbox",id:"checkbox_castShadow"+n.id},domProps:{checked:Array.isArray(n.castShadow)?t._i(n.castShadow,null)>-1:n.castShadow},on:{change:[function(e){var i=n.castShadow,r=e.target,a=!!r.checked;if(Array.isArray(i)){var s=null,o=t._i(i,s);r.checked?o<0&&t.$set(n,"castShadow",i.concat([s])):o>-1&&t.$set(n,"castShadow",i.slice(0,o).concat(i.slice(o+1)))}else t.$set(n,"castShadow",a)},function(e){return t.updateLightShadow(n)}]}})]):t._e(),e("div",{staticClass:"span2"},[e("button",{staticClass:"btn btn-sm btn-danger",attrs:{type:"button"},on:{click:function(e){return t.removeLight(n)}}},[e("IconDelete"),t._v(" Remove light")],1)]),i>=0?e("div",{staticClass:"span2"},[e("hr")]):t._e()])})),e("div",[e("div",[t._v("Number of lights: "+t._s(t.options.lights.length))]),e("div",{staticStyle:{"margin-top":"5px"}},[e("button",{staticClass:"btn btn-sm btn-primary",attrs:{type:"button"},on:{click:function(e){return t.addLight()}}},[e("IconAdd"),t._v(" Add light")],1)])])],2),t._m(14),e("div",[t._l(t.options.additionalObjects,(function(n,i){return e("div",{key:n.id,staticClass:"optionsLayout"},[e("div",[e("b",[t._v("Object #"+t._s(i+1))])]),e("div"),e("div",{staticClass:"div_option"},[t._v("type")]),e("div",[e("select",{directives:[{name:"model",rawName:"v-model",value:n.type,expression:"additionalObject.type"}],on:{change:[function(e){var i=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){var e="_value"in t?t._value:t.value;return e}));t.$set(n,"type",e.target.multiple?i:i[0])},function(e){return t.updateAdditionalObjectType()}]}},[e("option",{attrs:{value:"box"}},[t._v("box")]),e("option",{attrs:{value:"sphere"}},[t._v("sphere")])])]),e("div",{staticClass:"div_option"},[t._v("color")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.color,expression:"additionalObject.color"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.color},on:{keyup:function(e){return t.updateAdditionalObjectMaterial()},input:function(e){e.target.composing||t.$set(n,"color",e.target.value)}}}),e("span",{staticClass:"colorSquare",style:"backgroundColor:"+n.color,on:{click:function(e){return t.openColorPicker("additionalObjectColor",n)}}})]),e("div",{staticClass:"div_option"},[t._v("x")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.x,expression:"additionalObject.x"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.x},on:{keyup:function(e){return t.updateAdditionalObjectPosition()},input:function(e){e.target.composing||t.$set(n,"x",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseAdditionalObjectPosition(n,"x")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseAdditionalObjectPosition(n,"x")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetAdditionalObjectPosition(n,"x")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.x,expression:"additionalObject.x"}],staticClass:"slider_big",attrs:{type:"range",min:"-10",max:"10",step:"0.01"},domProps:{value:n.x},on:{input:function(e){return t.updateAdditionalObjectPosition()},__r:function(e){return t.$set(n,"x",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v("y")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.y,expression:"additionalObject.y"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.y},on:{keyup:function(e){return t.updateAdditionalObjectPosition()},input:function(e){e.target.composing||t.$set(n,"y",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseAdditionalObjectPosition(n,"y")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseAdditionalObjectPosition(n,"y")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetAdditionalObjectPosition(n,"y")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.y,expression:"additionalObject.y"}],staticClass:"slider_big",attrs:{type:"range",min:"-10",max:"10",step:"0.01"},domProps:{value:n.y},on:{input:function(e){return t.updateAdditionalObjectPosition()},__r:function(e){return t.$set(n,"y",e.target.value)}}})]),e("div",{staticClass:"div_option"},[t._v("z")]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.z,expression:"additionalObject.z"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.z},on:{keyup:function(e){return t.updateAdditionalObjectPosition()},input:function(e){e.target.composing||t.$set(n,"z",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseAdditionalObjectPosition(n,"z")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseAdditionalObjectPosition(n,"z")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetAdditionalObjectPosition(n,"z")}}},[t._v("reset")])]),e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.z,expression:"additionalObject.z"}],staticClass:"slider_big",attrs:{type:"range",min:"-10",max:"10",step:"0.01"},domProps:{value:n.z},on:{input:function(e){return t.updateAdditionalObjectPosition()},__r:function(e){return t.$set(n,"z",e.target.value)}}})]),"box"==n.type?e("div",{staticClass:"div_option"},[t._v("width")]):t._e(),"box"==n.type?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.width,expression:"additionalObject.width"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.width},on:{keyup:function(e){return t.updateAdditionalObjectGeometry()},input:function(e){e.target.composing||t.$set(n,"width",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseAdditionalObjectSize(n,"width")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseAdditionalObjectSize(n,"width")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetAdditionalObjectSize(n,"width")}}},[t._v("reset")])]):t._e(),"box"==n.type?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.width,expression:"additionalObject.width"}],staticClass:"slider_big",attrs:{type:"range",min:"0",max:"20",step:"0.01"},domProps:{value:n.width},on:{input:function(e){return t.updateAdditionalObjectGeometry()},__r:function(e){return t.$set(n,"width",e.target.value)}}})]):t._e(),"box"==n.type?e("div",{staticClass:"div_option"},[t._v("height")]):t._e(),"box"==n.type?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.height,expression:"additionalObject.height"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.height},on:{keyup:function(e){return t.updateAdditionalObjectGeometry()},input:function(e){e.target.composing||t.$set(n,"height",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseAdditionalObjectSize(n,"height")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseAdditionalObjectSize(n,"height")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetAdditionalObjectSize(n,"height")}}},[t._v("reset")])]):t._e(),"box"==n.type?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.height,expression:"additionalObject.height"}],staticClass:"slider_big",attrs:{type:"range",min:"0",max:"20",step:"0.01"},domProps:{value:n.height},on:{input:function(e){return t.updateAdditionalObjectGeometry()},__r:function(e){return t.$set(n,"height",e.target.value)}}})]):t._e(),"box"==n.type?e("div",{staticClass:"div_option"},[t._v("depth")]):t._e(),"box"==n.type?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.depth,expression:"additionalObject.depth"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.depth},on:{keyup:function(e){return t.updateAdditionalObjectGeometry()},input:function(e){e.target.composing||t.$set(n,"depth",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseAdditionalObjectSize(n,"depth")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseAdditionalObjectSize(n,"depth")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetAdditionalObjectSize(n,"depth")}}},[t._v("reset")])]):t._e(),"box"==n.type?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.depth,expression:"additionalObject.depth"}],staticClass:"slider_big",attrs:{type:"range",min:"0",max:"20",step:"0.01"},domProps:{value:n.depth},on:{input:function(e){return t.updateAdditionalObjectGeometry()},__r:function(e){return t.$set(n,"depth",e.target.value)}}})]):t._e(),"sphere"==n.type?e("div",{staticClass:"div_option"},[t._v("radius")]):t._e(),"sphere"==n.type?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.radius,expression:"additionalObject.radius"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:n.radius},on:{keyup:function(e){return t.updateAdditionalObjectGeometry()},input:function(e){e.target.composing||t.$set(n,"radius",e.target.value)}}}),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.decreaseAdditionalObjectSize(n,"radius")}}},[t._v(" - ")]),e("button",{staticClass:"btn btn-sm btn-outline-primary controlButton",attrs:{type:"button"},on:{click:function(e){return t.increaseAdditionalObjectSize(n,"radius")}}},[t._v(" + ")]),e("a",{staticClass:"controlLink",attrs:{href:""},on:{click:function(e){return e.preventDefault(),t.resetAdditionalObjectSize(n,"radius")}}},[t._v("reset")])]):t._e(),"sphere"==n.type?e("div",{staticClass:"slidecontainer span2"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.radius,expression:"additionalObject.radius"}],staticClass:"slider_big",attrs:{type:"range",min:"0",max:"5",step:"0.01"},domProps:{value:n.radius},on:{input:function(e){return t.updateAdditionalObjectGeometry()},__r:function(e){return t.$set(n,"radius",e.target.value)}}})]):t._e(),e("div",{staticClass:"div_option"},[e("label",{attrs:{for:"checkbox_receiveShadow"+n.id}},[t._v("receive shadow")])]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.receiveShadow,expression:"additionalObject.receiveShadow"}],attrs:{type:"checkbox",id:"checkbox_receiveShadow"+n.id},domProps:{checked:Array.isArray(n.receiveShadow)?t._i(n.receiveShadow,null)>-1:n.receiveShadow},on:{change:[function(e){var i=n.receiveShadow,r=e.target,a=!!r.checked;if(Array.isArray(i)){var s=null,o=t._i(i,s);r.checked?o<0&&t.$set(n,"receiveShadow",i.concat([s])):o>-1&&t.$set(n,"receiveShadow",i.slice(0,o).concat(i.slice(o+1)))}else t.$set(n,"receiveShadow",a)},function(e){return t.updateAdditionalObjectShadow(n)}]}})]),e("div",{staticClass:"div_option"},[e("label",{attrs:{for:"checkbox_castShadow"+n.id}},[t._v("cast shadow")])]),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:n.castShadow,expression:"additionalObject.castShadow"}],attrs:{type:"checkbox",id:"checkbox_castShadow"+n.id},domProps:{checked:Array.isArray(n.castShadow)?t._i(n.castShadow,null)>-1:n.castShadow},on:{change:[function(e){var i=n.castShadow,r=e.target,a=!!r.checked;if(Array.isArray(i)){var s=null,o=t._i(i,s);r.checked?o<0&&t.$set(n,"castShadow",i.concat([s])):o>-1&&t.$set(n,"castShadow",i.slice(0,o).concat(i.slice(o+1)))}else t.$set(n,"castShadow",a)},function(e){return t.updateAdditionalObjectShadow(n)}]}})]),e("div",{staticClass:"span2"},[e("button",{staticClass:"btn btn-sm btn-danger",attrs:{type:"button"},on:{click:function(e){return t.removeAdditionalObject(n.id)}}},[e("IconDelete"),t._v(" Remove object")],1)]),i>=0?e("div",{staticClass:"span2"},[e("hr")]):t._e()])})),e("div",[e("div",[t._v("Number of objects: "+t._s(t.options.additionalObjects.length))]),e("div",{staticStyle:{"margin-top":"5px"}},[e("button",{staticClass:"btn btn-sm btn-primary",attrs:{type:"button"},on:{click:function(e){return t.addAdditionalObject()}}},[e("IconAdd"),t._v(" Add object")],1)])])],2),t._m(15),e("div",{staticClass:"optionsLayout"},[t._m(16),e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.transparentBackground,expression:"options.transparentBackground"}],attrs:{type:"checkbox",id:"checkbox_transparentBackground"},domProps:{checked:Array.isArray(t.options.transparentBackground)?t._i(t.options.transparentBackground,null)>-1:t.options.transparentBackground},on:{change:[function(e){var n=t.options.transparentBackground,i=e.target,r=!!i.checked;if(Array.isArray(n)){var a=null,s=t._i(n,a);i.checked?s<0&&t.$set(t.options,"transparentBackground",n.concat([a])):s>-1&&t.$set(t.options,"transparentBackground",n.slice(0,s).concat(n.slice(s+1)))}else t.$set(t.options,"transparentBackground",r)},function(e){return t.updateBackground()}]}})]),0==t.options.transparentBackground?e("div",{staticClass:"div_option"},[t._v("color")]):t._e(),0==t.options.transparentBackground?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.options.backgroundColor,expression:"options.backgroundColor"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.options.backgroundColor},on:{keyup:function(e){return t.updateBackground()},input:function(e){e.target.composing||t.$set(t.options,"backgroundColor",e.target.value)}}}),e("span",{staticClass:"colorSquare",style:"backgroundColor:"+t.options.backgroundColor,on:{click:function(e){return t.openColorPicker("backgroundColor")}}})]):t._e()]),t._m(17),e("div",{staticClass:"optionsLayout"},[e("div",{staticClass:"div_option"},[t._v("image size")]),e("div",[e("select",{directives:[{name:"model",rawName:"v-model",value:t.canvasSizeId,expression:"canvasSizeId"}],on:{change:[function(e){var n=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){var e="_value"in t?t._value:t.value;return e}));t.canvasSizeId=e.target.multiple?n:n[0]},function(e){return t.updateCanvasSize()}]}},t._l(t.canvasSizeOptions,(function(n){return e("option",{key:n.id,domProps:{value:n.id}},[e("span",[t._v(t._s(n.id))])])})),0)]),"custom"==t.canvasSizeId?e("div",{staticClass:"div_option"},[t._v("canvas width")]):t._e(),"custom"==t.canvasSizeId?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.width,expression:"width"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.width},on:{keyup:function(e){return t.updateCanvasSize()},input:function(e){e.target.composing||(t.width=e.target.value)}}})]):t._e(),"custom"==t.canvasSizeId?e("div",{staticClass:"div_option"},[t._v("canvas height")]):t._e(),"custom"==t.canvasSizeId?e("div",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.height,expression:"height"}],staticClass:"input_option",attrs:{type:"text"},domProps:{value:t.height},on:{keyup:function(e){return t.updateCanvasSize()},input:function(e){e.target.composing||(t.height=e.target.value)}}})]):t._e()]),t._m(18),e("div",[t._v("Download image as PNG.")]),e("div",{staticStyle:{"margin-top":"10px"}},[e("button",{staticClass:"btn btn-lg btn-success",attrs:{type:"button"},on:{click:function(e){return t.downloadImage()}}},[e("IconDownload",{attrs:{size:24}}),t._v(" Download image")],1)])]),e("div",{staticClass:"div_image"},[e("div",{staticStyle:{position:"sticky",top:"0"}},[e("div",[e("h3",[t._v("Generated image "),e("button",{staticClass:"btn btn-sm btn-success",attrs:{type:"button"},on:{click:function(e){return t.downloadImage()}}},[e("IconDownload",{attrs:{size:20}}),t._v(" Download")],1)]),e("div",{attrs:{id:"renderDiv"}}),e("canvas",{staticStyle:{border:"1px solid black"},attrs:{id:"canvas_3d_text"},on:{wheel:function(e){return e.preventDefault(),t.canvasMouseWheel(e)},mousemove:function(e){return e.preventDefault(),t.canvasMouseMove(e)},mouseup:function(e){return e.preventDefault(),t.canvasMouseUp(e)},mousedown:function(e){return e.preventDefault(),t.canvasMouseDown(e)},contextmenu:function(t){return t.preventDefault()}}})]),e("br"),e("div",[e("button",{staticClass:"btn btn-lg btn-success",attrs:{type:"button"},on:{click:function(e){return t.downloadImage()}}},[e("IconDownload",{attrs:{size:24}}),t._v(" Download image")],1)])])]),e("div")]),e("br"),e("br"),t._m(19),e("br"),e("br"),e("FooterComponent"),e("ModalColorPicker",{ref:"modalColorPicker"})],1)},r=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"documentationContent"},[e("h1",[t._v("3D Text Generator")]),e("h4",[t._v("What is 3D text generator?")]),e("p",[t._v("3D text generator is a free online tool to generate 3D texts and export to PNG. You can use it to generate 3D logos or 3D texts for advertisements, games, apps or anything you want.")]),e("p",[t._v("Sometimes you want to generate a simple 3D text image but don't want to spend time learning how to use complex 3D software. In this case, this online tool can be very helpful. You can create 3D texts quickly and easily.")]),e("h4",[t._v("How to generate a 3D text online?")]),e("p",[t._v("With this online tool you can easily generate 3D texts by following these steps:")]),e("ol",[e("li",[t._v("Enter the text that you want in the text field.")]),e("li",[t._v("Choose the font, color and size of the 3D text you want to generate.")]),e("li",[t._v("Configure the "),e("a",{attrs:{href:"#configuration_parameters"}},[t._v("additional properties")]),t._v(", like the text position, text rotation, text geometry, bevel, shadows, camera position, camera rotation, field of view, lights, background and other.")]),e("li",[t._v("Choose the canvas size (the width and height of the image in pixels).")]),e("li",[t._v('Download the image as PNG, by clicking button "download image".')])]),e("h4",[t._v("Controls")]),e("p",[t._v("With the mouse over the canvas, you can use the mouse wheel to move camera forward or backward. This will change the camera position attributes (position x, position y and position z). The result will be similar to zoom in and zoom out.")]),e("p",[t._v("You can also drag with the left mouse button to change camera rotation. Dragging horizontally will change camera rotation y, while dragging vertically will change camera rotation x.")]),e("p",[t._v("Finally, you can drag with the right mouse button to change camera position. Dragging horizontally will change camera position x, while dragging vertically will change camera position y.")]),e("h4",[t._v("Examples")]),e("p",[t._v("Below you can find some examples of 3D texts generated with this tool.")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Image")]),e("th",[t._v("Description")])]),e("tr",[e("td",[e("img",{staticStyle:{width:"300px"},attrs:{src:n(1002)}})]),e("td",[t._v("3D text with perspective camera and directional light.")])]),e("tr",[e("td",[e("img",{staticStyle:{width:"300px"},attrs:{src:n(6292)}})]),e("td",[t._v("3D text with perspective camera and point light.")])]),e("tr",[e("td",[e("img",{staticStyle:{width:"300px"},attrs:{src:n(2271)}})]),e("td",[t._v("3D text with orthographic camera and point light, with a rotation on X-axis and Y-axis.")])])]),e("h4",[t._v("Learn more")]),e("p",[t._v("For more information, check the "),e("a",{attrs:{href:"/learn/how-to-create-3d-texts-online"}},[t._v("tutorial")]),t._v(" and the "),e("a",{attrs:{href:"#configuration_parameters"}},[t._v("documentation of parameters")]),t._v(".")])])},function(){var t=this,e=t._self._c;return e("div",[e("h3",[t._v("Options:")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Text")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Text geometry")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Text position")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Text rotation")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Bevel")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Text shadow")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"div_option"},[e("label",{attrs:{for:"checkbox_castShadow"}},[t._v("cast shadow")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"div_option"},[e("label",{attrs:{for:"checkbox_receiveShadow"}},[t._v("receive shadow")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Camera")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Camera position")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Camera rotation")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Lights")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Objects")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Background")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"div_option"},[e("label",{attrs:{for:"checkbox_transparentBackground"}},[t._v("transparent")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Canvas")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"optionsGroupTitle"},[e("b",[t._v("Download")])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"documentationContent"},[e("h4",{attrs:{id:"configuration_parameters"}},[t._v("3D text configuration parameters")]),e("p",[t._v("There are many parameters you can configure when creating a 3D text. They are divided in sections.")]),e("p",[t._v("Many text fields have a slider below them. In this cases, you can always set the parameters using the text field or using the slider. Although the sliders have a minimum and maximum value, you can always type in the text field a value outside the range of the slider if you need. The sliders are useful if you want to experiment with different values for the attribute, because the image preview will automatically update while you are moving the slider. But if you need to use a value outside the range of the slider, you will have to use the text field.")]),e("h5",[t._v("Text")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("text")]),e("td",[t._v("In the text field, you type the text you want to generate. You can use line break to have multi-line text.")])]),e("tr",[e("td",[t._v("font")]),e("td",[t._v("In the font field, you can select the text font to be used. At the moment, there are 7 different fonts: Helvetiker Bold, Roboto Regular, Roboto Bold, Nunito Regular, Nunito Bold, Lora Regular and Lora Bold.")])]),e("tr",[e("td",[t._v("color")]),e("td",[t._v("In the color field, you can type the text color, in hexadecimal format. You can also click the square to select a color from the color picker.")])]),e("tr",[e("td",[t._v("size")]),e("td",[t._v("The size of the text. In the size field, you can type the size of the text you want to generate. You can also use the slider to change the 3D text size. Although the slider has a minimum and maximum value, you can type a value outside the range of the slider if you need.")])])]),e("h5",[t._v("Text geometry")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("height")]),e("td",[t._v("Thickness of the text.")])]),e("tr",[e("td",[t._v("curve segments")]),e("td",[t._v("The number of points on the text curves. Greater number means smoother curves.")])])]),e("h5",[t._v("Text position")]),e("p",[t._v("The text has a position in 3D space. This position is represented by 3 components (x, y and z).")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("x")]),e("td",[t._v("The position of the 3D text, in the X-axis.")])]),e("tr",[e("td",[t._v("y")]),e("td",[t._v("The position of the 3D text, in the Y-axis.")])]),e("tr",[e("td",[t._v("z")]),e("td",[t._v("The position of the 3D text, in the Z-axis.")])])]),e("h5",[t._v("Text rotation")]),e("p",[t._v("You can rotate the 3D text around the X, Y and Z axis.")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("x")]),e("td",[t._v("The rotation of the 3D text around the X-axis.")])]),e("tr",[e("td",[t._v("y")]),e("td",[t._v("The rotation of the 3D text around the Y-axis.")])]),e("tr",[e("td",[t._v("z")]),e("td",[t._v("The rotation of the 3D text around the Z-axis.")])])]),e("h5",[t._v("Bevel")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("bevel size")]),e("td",[t._v("How far from text outline is bevel.")])]),e("tr",[e("td",[t._v("bevel segments")]),e("td",[t._v("Number of bevel segments. Must be an integer.")])]),e("tr",[e("td",[t._v("bevel thickness")]),e("td",[t._v("How deep into text bevel goes.")])]),e("tr",[e("td",[t._v("bevel offset")]),e("td",[t._v("How far from text outline bevel starts.")])])]),e("h5",[t._v("Text shadow")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("cast shadow")]),e("td",[t._v("If this option is checked, the text will cast shadows on another objects (and on itself).")])]),e("tr",[e("td",[t._v("receive shadow")]),e("td",[t._v("If this option is checked, the text will receive shadows from other objects (and from itself).")])])]),e("h5",[t._v("Camera")]),e("p",[t._v("There are two types of camera that you can use: perspective and orthographic.")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("camera type")]),e("td",[t._v("The type of the camera. Can be perspective and orthographic.")])]),e("tr",[e("td",[t._v("field of view")]),e("td",[t._v("The camera frustum vertical field of view, from bottom to top of view, in degrees. Must be a number between 0 and 180. This field is enabled only for the perspective camera type.")])]),e("tr",[e("td",[t._v("left")]),e("td",[t._v("Camera frustum left plane. This field is enabled only for the orthographic camera type.")])]),e("tr",[e("td",[t._v("right")]),e("td",[t._v("Camera frustum right plane. This field is enabled only for the orthographic camera type.")])]),e("tr",[e("td",[t._v("top")]),e("td",[t._v("Camera frustum top plane. This field is enabled only for the orthographic camera type.")])]),e("tr",[e("td",[t._v("bottom")]),e("td",[t._v("Camera frustum bottom plane. This field is enabled only for the orthographic camera type.")])])]),e("h5",[t._v("Camera position")]),e("p",[t._v('You can click the "move forward" button to move a step in the direction the camera is facing, and also click "move backward" to move a little in the opposite direction.')]),e("p",[t._v('You can also move the camera with the mouse wheel. With the mouse on the image canvas, use the mouse wheel to move camera forward or backward (the result is similar to using the "move forward" and "move backward" buttons).')]),e("p",[t._v("If the camera is facing at the center of the text, moving forward will have an effect similar to increasing the size of the text.")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("position x")]),e("td",[t._v("The position of the camera, in the X-axis.")])]),e("tr",[e("td",[t._v("position y")]),e("td",[t._v("The position of the camera, in the Y-axis.")])]),e("tr",[e("td",[t._v("position z")]),e("td",[t._v("The position of the camera, in the Z-axis.")])])]),e("h5",[t._v("Camera rotation")]),e("p",[t._v("With the mouse on the image canvas, drag with the left mouse button to change camera angle and with the right mouse button to change camera position.")]),e("p",[t._v('You can also click the button "Look at text (center)" to make the camera point towards the center of the text.')]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("rotation x")]),e("td",[t._v("The rotation of the camera around the X-axis.")])]),e("tr",[e("td",[t._v("rotation y")]),e("td",[t._v("The rotation of the camera around the Y-axis.")])]),e("tr",[e("td",[t._v("rotation z")]),e("td",[t._v("The rotation of the camera around the Z-axis.")])])]),e("h5",[t._v("Lights")]),e("p",[t._v("There are 3 types of light: directional light, point light and ambient light.")]),e("p",[t._v("Directional light is a type of light that gets emitted in a specific direction. This light will behave as though it is infinitely far away and the rays produced from it are all parallel. The common use case for this is to simulate daylight; the sun is far enough away that its position can be considered to be infinite, and all light rays coming from it are parallel.")]),e("p",[t._v("You can set the directional light position (x, y and z coordinates). The directional light will point from it's position towards the origin position (0,0,0). If you want he directional light to shine from the top down, you can set it's position to (0,1,0). If you want he directional light to shine from right to left, you can set it's position to (1,0,0). ")]),e("p",[t._v("Point light is a type of light that gets emitted from a single point in all directions. A common use case for this is to replicate the light emitted from a bare lightbulb.")]),e("p",[t._v("Ambient light is a type of light that globally illuminates all objects in the scene equally. This type of light cannot be used to cast shadows because it does not have a direction.")]),e("p",[t._v("Directional light and point light can cast shadows, while ambient light can't.")]),e("p",[t._v("Each light have a color and an intensity. Directional and point light have also a position (x, y and z coordinates).")]),e("p",[t._v('When you open the 3D text generator, it will have one default light. You can add additional lights by clicking "add light" and can remove lights by clicking "remove light".')]),e("p",[t._v("You need to have at least one light, otherwise the text will be completely dark.")]),e("p",[t._v('Lights can produce shadows. To make a 3D text produce shadows, you need to check the option "cast shadow" in the "Text shadow" section. You also need to check the option "receive shadow" in the object you want to receive the shadow.')]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("type")]),e("td",[t._v("The light type. Can be directional light, point light or ambient light.")])]),e("tr",[e("td",[t._v("color")]),e("td",[t._v("The color of the light in hexadecimal format.")])]),e("tr",[e("td",[t._v("intensity")]),e("td",[t._v("The light's strength (intensity).")])]),e("tr",[e("td",[t._v("position x")]),e("td",[t._v("The light position (x coordinate).")])]),e("tr",[e("td",[t._v("position y")]),e("td",[t._v("The light position (y coordinate).")])]),e("tr",[e("td",[t._v("position z")]),e("td",[t._v("The light position (z coordinate).")])]),e("tr",[e("td",[t._v("cast shadow")]),e("td",[t._v('If set to true, the light will cast shadows. You also need to enable "receive shadows" at all objects that you want to receive shadows.')])])]),e("h5",[t._v("Objects")]),e("p",[t._v("In addition to the 3D text itself, you can also include other 3D objects. These objects can be boxes or spheres.")]),e("p",[t._v("For example, you can include a floor above to receive the the shadows of the 3D text.")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("type")]),e("td",[t._v("The type of 3D object. Can be box or sphere.")])]),e("tr",[e("td",[t._v("color")]),e("td",[t._v("The color of the 3D object, in hexadecimal format.")])]),e("tr",[e("td",[t._v("x")]),e("td",[t._v("The position of the 3D object, in the X-axis.")])]),e("tr",[e("td",[t._v("y")]),e("td",[t._v("The position of the 3D object, in the Y-axis.")])]),e("tr",[e("td",[t._v("z")]),e("td",[t._v("The position of the 3D object, in the Z-axis.")])]),e("tr",[e("td",[t._v("width")]),e("td",[t._v("The width of the 3D object.")])]),e("tr",[e("td",[t._v("height")]),e("td",[t._v("The height of the 3D object.")])]),e("tr",[e("td",[t._v("depth")]),e("td",[t._v("The depth of the 3D object.")])]),e("tr",[e("td",[t._v("radius")]),e("td",[t._v("The radius of the sphere.")])]),e("tr",[e("td",[t._v("receive shadow")]),e("td",[t._v("If this option is checked, the 3D object will receive shadows from other objects.")])]),e("tr",[e("td",[t._v("cast shadow")]),e("td",[t._v("If this option is checked, the 3D object will cast shadows on another objects.")])])]),e("h5",[t._v("Background")]),e("p",[t._v("The background can be a solid color or transparent.")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("transparent")]),e("td",[t._v("Select this option if you want transparent background.")])]),e("tr",[e("td",[t._v("color")]),e("td",[t._v("The color of the background, in hex format. This option is only enabled if the background is not transparent.")])])]),e("h5",[t._v("Canvas")]),e("table",{staticClass:"documentation_table"},[e("tr",[e("th",[t._v("Field")]),e("th",[t._v("Description")])]),e("tr",[e("td",[t._v("image size")]),e("td",[t._v("The image size (width x height) in pixels.")])]),e("tr",[e("td",[t._v("canvas width")]),e("td",[t._v("The width of the image, in pixels.")])]),e("tr",[e("td",[t._v("canvas height")]),e("td",[t._v("The height of the image, in pixels.")])])]),e("h5",[t._v("Download")]),e("p",[t._v("After you finished configuring the parameters, you can download the result image as PNG.")])])}],a=(n(7658),n(8528)),s=n(8405),o=n(4138),l=n(9448),c=n(7e3),u=function(){var t=this,e=t._self._c;t._self._setupProxy;return e("svg",{staticStyle:{"margin-top":"-3px"},attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"white",width:"20px",height:"20px"}},[e("path",{attrs:{d:"M0 0h24v24H0z",fill:"none"}}),e("path",{attrs:{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}})])},h=[],d=n(6739),p=n.n(d),m=p(),f=n(1001),g=(0,f.Z)(m,u,h,!1,null,"b8772bc6",null),v=g.exports,_=function(){var t=this,e=t._self._c;return e("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:"20px",width:"20px",fill:"#FFFFFF"}},[e("path",{attrs:{d:"M0 0h24v24H0z",fill:"none"}}),e("path",{attrs:{fill:t.color,d:"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"}})])},x=[],y={name:"IconEye",props:{color:{type:String,default:"#ffffff"}}},b=y,S=(0,f.Z)(b,_,x,!1,null,"13d92a58",null),w=S.exports,M=function(){var t=this,e=t._self._c;return e("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:"20px",width:"20px",fill:"#FFFFFF"}},[e("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e("path",{attrs:{fill:t.color,d:"M9 16h6v-6h4l-7-7-7 7h4"}})])},T=[],C={name:"IconForward",props:{color:{type:String,default:"#ffffff"}}},E=C,A=(0,f.Z)(E,M,T,!1,null,"ef411b42",null),P=A.exports,L=function(){var t=this,e=t._self._c;return e("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:"20px",width:"20px",fill:"#FFFFFF"}},[e("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e("path",{attrs:{fill:t.color,d:"M19 9h-4V3H9v6H5l7 7"}})])},R=[],D={name:"IconBackward",props:{color:{type:String,default:"#ffffff"}}},N=D,z=(0,f.Z)(N,L,R,!1,null,"fd807270",null),I=z.exports,O=n(3162),k=n(9314);
/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const U="147",F=0,B=1,G=2,V=1,H=2,W=3,j=0,q=1,X=2,Y=0,Z=1,J=2,$=3,K=4,Q=5,tt=100,et=101,nt=102,it=103,rt=104,at=200,st=201,ot=202,lt=203,ct=204,ut=205,ht=206,dt=207,pt=208,mt=209,ft=210,gt=0,vt=1,_t=2,xt=3,yt=4,bt=5,St=6,wt=7,Mt=0,Tt=1,Ct=2,Et=0,At=1,Pt=2,Lt=3,Rt=4,Dt=5,Nt=300,zt=301,It=302,Ot=303,kt=304,Ut=306,Ft=1e3,Bt=1001,Gt=1002,Vt=1003,Ht=1004,Wt=1005,jt=1006,qt=1007,Xt=1008,Yt=1009,Zt=1010,Jt=1011,$t=1012,Kt=1013,Qt=1014,te=1015,ee=1016,ne=1017,ie=1018,re=1020,ae=1021,se=1022,oe=1023,le=1024,ce=1025,ue=1026,he=1027,de=1028,pe=1029,me=1030,fe=1031,ge=1033,ve=33776,_e=33777,xe=33778,ye=33779,be=35840,Se=35841,we=35842,Me=35843,Te=36196,Ce=37492,Ee=37496,Ae=37808,Pe=37809,Le=37810,Re=37811,De=37812,Ne=37813,ze=37814,Ie=37815,Oe=37816,ke=37817,Ue=37818,Fe=37819,Be=37820,Ge=37821,Ve=36492,He=2300,We=2301,je=2302,qe=2400,Xe=2401,Ye=2402,Ze=3e3,Je=3001,$e=3200,Ke=3201,Qe=0,tn=1,en="srgb",nn="srgb-linear",rn=7680,an=519,sn=35044,on="300 es",ln=1035;class cn{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners,i=n[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners,n=e[t.type];if(void 0!==n){t.target=this;const e=n.slice(0);for(let n=0,i=e.length;n<i;n++)e[n].call(this,t);t.target=null}}}const un=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];const hn=Math.PI/180,dn=180/Math.PI;function pn(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=un[255&t]+un[t>>8&255]+un[t>>16&255]+un[t>>24&255]+"-"+un[255&e]+un[e>>8&255]+"-"+un[e>>16&15|64]+un[e>>24&255]+"-"+un[63&n|128]+un[n>>8&255]+"-"+un[n>>16&255]+un[n>>24&255]+un[255&i]+un[i>>8&255]+un[i>>16&255]+un[i>>24&255];return r.toLowerCase()}function mn(t,e,n){return Math.max(e,Math.min(n,t))}function fn(t,e){return(t%e+e)%e}function gn(t,e,n){return(1-n)*t+n*e}function vn(t){return 0===(t&t-1)&&0!==t}function _n(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function xn(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function yn(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}class bn{constructor(t=0,e=0){bn.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const t=Math.atan2(-this.y,-this.x)+Math.PI;return t}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Sn{constructor(){Sn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,i,r,a,s,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=s,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],u=n[7],h=n[2],d=n[5],p=n[8],m=i[0],f=i[3],g=i[6],v=i[1],_=i[4],x=i[7],y=i[2],b=i[5],S=i[8];return r[0]=a*m+s*v+o*y,r[3]=a*f+s*_+o*b,r[6]=a*g+s*x+o*S,r[1]=l*m+c*v+u*y,r[4]=l*f+c*_+u*b,r[7]=l*g+c*x+u*S,r[2]=h*m+d*v+p*y,r[5]=h*f+d*_+p*b,r[8]=h*g+d*x+p*S,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-n*r*c+n*s*o+i*r*l-i*a*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],u=c*a-s*l,h=s*o-c*r,d=l*r-a*o,p=e*u+n*h+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=u*m,t[1]=(i*l-c*n)*m,t[2]=(s*n-i*a)*m,t[3]=h*m,t[4]=(c*e-i*o)*m,t[5]=(i*r-s*e)*m,t[6]=d*m,t[7]=(n*o-l*e)*m,t[8]=(a*e-n*r)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,a,s){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*a+l*s)+a+t,-i*l,i*o,-i*(-l*a+o*s)+s+e,0,0,1),this}scale(t,e){return this.premultiply(wn.makeScale(t,e)),this}rotate(t){return this.premultiply(wn.makeRotation(-t)),this}translate(t,e){return this.premultiply(wn.makeTranslation(t,e)),this}makeTranslation(t,e){return this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const wn=new Sn;function Mn(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function Tn(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Cn(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function En(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const An={[en]:{[nn]:Cn},[nn]:{[en]:En}},Pn={legacyMode:!0,get workingColorSpace(){return nn},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,n){if(this.legacyMode||e===n||!e||!n)return t;if(An[e]&&void 0!==An[e][n]){const i=An[e][n];return t.r=i(t.r),t.g=i(t.g),t.b=i(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},Ln={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Rn={r:0,g:0,b:0},Dn={h:0,s:0,l:0},Nn={h:0,s:0,l:0};function zn(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function In(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class On{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"===typeof t?this.setHex(t):"string"===typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=en){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Pn.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Pn.workingColorSpace){return this.r=t,this.g=e,this.b=n,Pn.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Pn.workingColorSpace){if(t=fn(t,1),e=mn(e,0,1),n=mn(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=zn(r,i,t+1/3),this.g=zn(r,i,t),this.b=zn(r,i,t-1/3)}return Pn.toWorkingColorSpace(this,i),this}setStyle(t,e=en){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,Pn.toWorkingColorSpace(this,e),n(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,Pn.toWorkingColorSpace(this,e),n(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const i=parseFloat(t[1])/360,r=parseFloat(t[2])/100,a=parseFloat(t[3])/100;return n(t[4]),this.setHSL(i,r,a,e)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=i[1],n=t.length;if(3===n)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,Pn.toWorkingColorSpace(this,e),this;if(6===n)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,Pn.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=en){const n=Ln[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Cn(t.r),this.g=Cn(t.g),this.b=Cn(t.b),this}copyLinearToSRGB(t){return this.r=En(t.r),this.g=En(t.g),this.b=En(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=en){return Pn.fromWorkingColorSpace(In(this,Rn),t),mn(255*Rn.r,0,255)<<16^mn(255*Rn.g,0,255)<<8^mn(255*Rn.b,0,255)<<0}getHexString(t=en){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Pn.workingColorSpace){Pn.fromWorkingColorSpace(In(this,Rn),e);const n=Rn.r,i=Rn.g,r=Rn.b,a=Math.max(n,i,r),s=Math.min(n,i,r);let o,l;const c=(s+a)/2;if(s===a)o=0,l=0;else{const t=a-s;switch(l=c<=.5?t/(a+s):t/(2-a-s),a){case n:o=(i-r)/t+(i<r?6:0);break;case i:o=(r-n)/t+2;break;case r:o=(n-i)/t+4;break}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e=Pn.workingColorSpace){return Pn.fromWorkingColorSpace(In(this,Rn),e),t.r=Rn.r,t.g=Rn.g,t.b=Rn.b,t}getStyle(t=en){return Pn.fromWorkingColorSpace(In(this,Rn),t),t!==en?`color(${t} ${Rn.r} ${Rn.g} ${Rn.b})`:`rgb(${255*Rn.r|0},${255*Rn.g|0},${255*Rn.b|0})`}offsetHSL(t,e,n){return this.getHSL(Dn),Dn.h+=t,Dn.s+=e,Dn.l+=n,this.setHSL(Dn.h,Dn.s,Dn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Dn),t.getHSL(Nn);const n=gn(Dn.h,Nn.h,e),i=gn(Dn.s,Nn.s,e),r=gn(Dn.l,Nn.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let kn;On.NAMES=Ln;class Un{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===kn&&(kn=Tn("canvas")),kn.width=t.width,kn.height=t.height;const n=kn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=kn}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap){const e=Tn("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let t=0;t<r.length;t++)r[t]=255*Cn(r[t]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Cn(e[t]/255)):e[t]=Cn(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Fn{constructor(t=null){this.isSource=!0,this.uuid=pn(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"===typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(Bn(i[e].image)):t.push(Bn(i[e]))}else t=Bn(i);n.url=t}return e||(t.images[this.uuid]=n),n}}function Bn(t){return"undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap?Un.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Gn=0;class Vn extends cn{constructor(t=Vn.DEFAULT_IMAGE,e=Vn.DEFAULT_MAPPING,n=Bt,i=Bt,r=jt,a=Xt,s=oe,o=Yt,l=Vn.DEFAULT_ANISOTROPY,c=Ze){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Gn++}),this.uuid=pn(),this.name="",this.source=new Fn(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new bn(0,0),this.repeat=new bn(1,1),this.center=new bn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Sn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"===typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Nt)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ft:t.x=t.x-Math.floor(t.x);break;case Bt:t.x=t.x<0?0:1;break;case Gt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Ft:t.y=t.y-Math.floor(t.y);break;case Bt:t.y=t.y<0?0:1;break;case Gt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}Vn.DEFAULT_IMAGE=null,Vn.DEFAULT_MAPPING=Nt,Vn.DEFAULT_ANISOTROPY=1;class Hn{constructor(t=0,e=0,n=0,i=1){Hn.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const a=.01,s=.1,o=t.elements,l=o[0],c=o[4],u=o[8],h=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(c-h)<a&&Math.abs(u-m)<a&&Math.abs(p-f)<a){if(Math.abs(c+h)<s&&Math.abs(u+m)<s&&Math.abs(p+f)<s&&Math.abs(l+d+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,v=(g+1)/2,_=(c+h)/4,x=(u+m)/4,y=(p+f)/4;return t>o&&t>v?t<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=_/n,r=x/n):o>v?o<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=_/i,r=y/i):v<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(v),n=x/r,i=y/r),this.set(n,i,r,e),this}let v=Math.sqrt((f-p)*(f-p)+(u-m)*(u-m)+(h-c)*(h-c));return Math.abs(v)<.001&&(v=1),this.x=(f-p)/v,this.y=(u-m)/v,this.z=(h-c)/v,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Wn extends cn{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Hn(0,0,t,e),this.scissorTest=!1,this.viewport=new Hn(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new Vn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:jt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Fn(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class jn extends Vn{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Vt,this.minFilter=Vt,this.wrapR=Bt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class qn extends Vn{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Vt,this.minFilter=Vt,this.wrapR=Bt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Xn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,a,s){let o=n[i+0],l=n[i+1],c=n[i+2],u=n[i+3];const h=r[a+0],d=r[a+1],p=r[a+2],m=r[a+3];if(0===s)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=u);if(1===s)return t[e+0]=h,t[e+1]=d,t[e+2]=p,void(t[e+3]=m);if(u!==m||o!==h||l!==d||c!==p){let t=1-s;const e=o*h+l*d+c*p+u*m,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,e*n);t=Math.sin(t*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(o=o*t+h*r,l=l*t+d*r,c=c*t+p*r,u=u*t+m*r,t===1-s){const t=1/Math.sqrt(o*o+l*l+c*c+u*u);o*=t,l*=t,c*=t,u*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,i,r,a){const s=n[i],o=n[i+1],l=n[i+2],c=n[i+3],u=r[a],h=r[a+1],d=r[a+2],p=r[a+3];return t[e]=s*p+c*u+o*d-l*h,t[e+1]=o*p+c*h+l*u-s*d,t[e+2]=l*p+c*d+s*h-o*u,t[e+3]=c*p-s*u-o*h-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,r=t._z,a=t._order,s=Math.cos,o=Math.sin,l=s(n/2),c=s(i/2),u=s(r/2),h=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"YXZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"ZXY":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"ZYX":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"YZX":this._x=h*c*u+l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u-h*d*p;break;case"XZY":this._x=h*c*u-l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],u=e[10],h=n+s+u;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(a-i)*t}else if(n>s&&n>u){const t=2*Math.sqrt(1+n-s-u);this._w=(c-o)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(r+l)/t}else if(s>u){const t=2*Math.sqrt(1+s-n-u);this._w=(r-l)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+u-n-s);this._w=(a-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(mn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+a*s+i*l-r*o,this._y=i*c+a*o+r*s-n*l,this._z=r*c+a*l+n*o-i*s,this._w=a*c-n*s-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,s),u=Math.sin((1-e)*c)/l,h=Math.sin(e*c)/l;return this._w=a*u+this._w*h,this._x=n*u+this._x*h,this._y=i*u+this._y*h,this._z=r*u+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Yn{constructor(t=0,e=0,n=0){Yn.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Jn.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Jn.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,l=o*e+a*i-s*n,c=o*n+s*e-r*i,u=o*i+r*n-a*e,h=-r*e-a*n-s*i;return this.x=l*o+h*-r+c*-s-u*-a,this.y=c*o+h*-a+u*-r-l*-s,this.z=u*o+h*-s+l*-a-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Zn.copy(this).projectOnVector(t),this.sub(Zn)}reflect(t){return this.sub(Zn.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(mn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Zn=new Yn,Jn=new Xn;class $n{constructor(t=new Yn(1/0,1/0,1/0),e=new Yn(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],c=t[o+1],u=t[o+2];l<e&&(e=l),c<n&&(n=c),u<i&&(i=u),l>r&&(r=l),c>a&&(a=c),u>s&&(s=u)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),c=t.getY(o),u=t.getZ(o);l<e&&(e=l),c<n&&(n=c),u<i&&(i=u),l>r&&(r=l),c>a&&(a=c),u>s&&(s=u)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Qn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n)if(e&&void 0!=n.attributes&&void 0!==n.attributes.position){const e=n.attributes.position;for(let n=0,i=e.count;n<i;n++)Qn.fromBufferAttribute(e,n).applyMatrix4(t.matrixWorld),this.expandByPoint(Qn)}else null===n.boundingBox&&n.computeBoundingBox(),ti.copy(n.boundingBox),ti.applyMatrix4(t.matrixWorld),this.union(ti);const i=t.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Qn),Qn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(oi),li.subVectors(this.max,oi),ei.subVectors(t.a,oi),ni.subVectors(t.b,oi),ii.subVectors(t.c,oi),ri.subVectors(ni,ei),ai.subVectors(ii,ni),si.subVectors(ei,ii);let e=[0,-ri.z,ri.y,0,-ai.z,ai.y,0,-si.z,si.y,ri.z,0,-ri.x,ai.z,0,-ai.x,si.z,0,-si.x,-ri.y,ri.x,0,-ai.y,ai.x,0,-si.y,si.x,0];return!!hi(e,ei,ni,ii,li)&&(e=[1,0,0,0,1,0,0,0,1],!!hi(e,ei,ni,ii,li)&&(ci.crossVectors(ri,ai),e=[ci.x,ci.y,ci.z],hi(e,ei,ni,ii,li)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){const e=Qn.copy(t).clamp(this.min,this.max);return e.sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(Qn).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Kn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Kn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Kn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Kn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Kn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Kn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Kn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Kn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Kn)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Kn=[new Yn,new Yn,new Yn,new Yn,new Yn,new Yn,new Yn,new Yn],Qn=new Yn,ti=new $n,ei=new Yn,ni=new Yn,ii=new Yn,ri=new Yn,ai=new Yn,si=new Yn,oi=new Yn,li=new Yn,ci=new Yn,ui=new Yn;function hi(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){ui.fromArray(t,a);const s=r.x*Math.abs(ui.x)+r.y*Math.abs(ui.y)+r.z*Math.abs(ui.z),o=e.dot(ui),l=n.dot(ui),c=i.dot(ui);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>s)return!1}return!0}const di=new $n,pi=new Yn,mi=new Yn;class fi{constructor(t=new Yn,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):di.setFromPoints(t).getCenter(n);let i=0;for(let r=0,a=t.length;r<a;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;pi.subVectors(t,this.center);const e=pi.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(pi,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(mi.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(pi.copy(t.center).add(mi)),this.expandByPoint(pi.copy(t.center).sub(mi))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const gi=new Yn,vi=new Yn,_i=new Yn,xi=new Yn,yi=new Yn,bi=new Yn,Si=new Yn;class wi{constructor(t=new Yn,e=new Yn(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,gi)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=gi.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(gi.copy(this.direction).multiplyScalar(e).add(this.origin),gi.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){vi.copy(t).add(e).multiplyScalar(.5),_i.copy(e).sub(t).normalize(),xi.copy(this.origin).sub(vi);const r=.5*t.distanceTo(e),a=-this.direction.dot(_i),s=xi.dot(this.direction),o=-xi.dot(_i),l=xi.lengthSq(),c=Math.abs(1-a*a);let u,h,d,p;if(c>0)if(u=a*o-s,h=a*s-o,p=r*c,u>=0)if(h>=-p)if(h<=p){const t=1/c;u*=t,h*=t,d=u*(u+a*h+2*s)+h*(a*u+h+2*o)+l}else h=r,u=Math.max(0,-(a*h+s)),d=-u*u+h*(h+2*o)+l;else h=-r,u=Math.max(0,-(a*h+s)),d=-u*u+h*(h+2*o)+l;else h<=-p?(u=Math.max(0,-(-a*r+s)),h=u>0?-r:Math.min(Math.max(-r,-o),r),d=-u*u+h*(h+2*o)+l):h<=p?(u=0,h=Math.min(Math.max(-r,-o),r),d=h*(h+2*o)+l):(u=Math.max(0,-(a*r+s)),h=u>0?r:Math.min(Math.max(-r,-o),r),d=-u*u+h*(h+2*o)+l);else h=a>0?-r:r,u=Math.max(0,-(a*h+s)),d=-u*u+h*(h+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),i&&i.copy(_i).multiplyScalar(h).add(vi),d}intersectSphere(t,e){gi.subVectors(t.center,this.origin);const n=gi.dot(this.direction),i=gi.dot(gi)-n*n,r=t.radius*t.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;const n=t.normal.dot(this.direction);return n*e<0}intersectBox(t,e){let n,i,r,a,s,o;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,i=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,i=(t.min.x-h.x)*l),c>=0?(r=(t.min.y-h.y)*c,a=(t.max.y-h.y)*c):(r=(t.max.y-h.y)*c,a=(t.min.y-h.y)*c),n>a||r>i?null:((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),u>=0?(s=(t.min.z-h.z)*u,o=(t.max.z-h.z)*u):(s=(t.max.z-h.z)*u,o=(t.min.z-h.z)*u),n>o||s>i?null:((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,gi)}intersectTriangle(t,e,n,i,r){yi.subVectors(e,t),bi.subVectors(n,t),Si.crossVectors(yi,bi);let a,s=this.direction.dot(Si);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}xi.subVectors(this.origin,t);const o=a*this.direction.dot(bi.crossVectors(xi,bi));if(o<0)return null;const l=a*this.direction.dot(yi.cross(xi));if(l<0)return null;if(o+l>s)return null;const c=-a*xi.dot(Si);return c<0?null:this.at(c/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Mi{constructor(){Mi.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,i,r,a,s,o,l,c,u,h,d,p,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=u,g[14]=h,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Mi).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Ti.setFromMatrixColumn(t,0).length(),r=1/Ti.setFromMatrixColumn(t,1).length(),a=1/Ti.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),u=Math.sin(r);if("XYZ"===t.order){const t=a*c,n=a*u,i=s*c,r=s*u;e[0]=o*c,e[4]=-o*u,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-s*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=a*o}else if("YXZ"===t.order){const t=o*c,n=o*u,i=l*c,r=l*u;e[0]=t+r*s,e[4]=i*s-n,e[8]=a*l,e[1]=a*u,e[5]=a*c,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*c,n=o*u,i=l*c,r=l*u;e[0]=t-r*s,e[4]=-a*u,e[8]=i+n*s,e[1]=n+i*s,e[5]=a*c,e[9]=r-t*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*c,n=a*u,i=s*c,r=s*u;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*u,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=r-t*u,e[8]=i*u+n,e[1]=u,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=n*u+i,e[10]=t-r*u}else if("XZY"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=-u,e[8]=l*c,e[1]=t*u+r,e[5]=a*c,e[9]=n*u-i,e[2]=i*u-n,e[6]=s*c,e[10]=r*u+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ei,t,Ai)}lookAt(t,e,n){const i=this.elements;return Ri.subVectors(t,e),0===Ri.lengthSq()&&(Ri.z=1),Ri.normalize(),Pi.crossVectors(n,Ri),0===Pi.lengthSq()&&(1===Math.abs(n.z)?Ri.x+=1e-4:Ri.z+=1e-4,Ri.normalize(),Pi.crossVectors(n,Ri)),Pi.normalize(),Li.crossVectors(Ri,Pi),i[0]=Pi.x,i[4]=Li.x,i[8]=Ri.x,i[1]=Pi.y,i[5]=Li.y,i[9]=Ri.y,i[2]=Pi.z,i[6]=Li.z,i[10]=Ri.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],u=n[5],h=n[9],d=n[13],p=n[2],m=n[6],f=n[10],g=n[14],v=n[3],_=n[7],x=n[11],y=n[15],b=i[0],S=i[4],w=i[8],M=i[12],T=i[1],C=i[5],E=i[9],A=i[13],P=i[2],L=i[6],R=i[10],D=i[14],N=i[3],z=i[7],I=i[11],O=i[15];return r[0]=a*b+s*T+o*P+l*N,r[4]=a*S+s*C+o*L+l*z,r[8]=a*w+s*E+o*R+l*I,r[12]=a*M+s*A+o*D+l*O,r[1]=c*b+u*T+h*P+d*N,r[5]=c*S+u*C+h*L+d*z,r[9]=c*w+u*E+h*R+d*I,r[13]=c*M+u*A+h*D+d*O,r[2]=p*b+m*T+f*P+g*N,r[6]=p*S+m*C+f*L+g*z,r[10]=p*w+m*E+f*R+g*I,r[14]=p*M+m*A+f*D+g*O,r[3]=v*b+_*T+x*P+y*N,r[7]=v*S+_*C+x*L+y*z,r[11]=v*w+_*E+x*R+y*I,r[15]=v*M+_*A+x*D+y*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],u=t[6],h=t[10],d=t[14],p=t[3],m=t[7],f=t[11],g=t[15];return p*(+r*o*u-i*l*u-r*s*h+n*l*h+i*s*d-n*o*d)+m*(+e*o*d-e*l*h+r*a*h-i*a*d+i*l*c-r*o*c)+f*(+e*l*u-e*s*d-r*a*u+n*a*d+r*s*c-n*l*c)+g*(-i*s*c-e*o*u+e*s*h+i*a*u-n*a*h+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],u=t[9],h=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],v=u*f*l-m*h*l+m*o*d-s*f*d-u*o*g+s*h*g,_=p*h*l-c*f*l-p*o*d+a*f*d+c*o*g-a*h*g,x=c*m*l-p*u*l+p*s*d-a*m*d-c*s*g+a*u*g,y=p*u*o-c*m*o-p*s*h+a*m*h+c*s*f-a*u*f,b=e*v+n*_+i*x+r*y;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/b;return t[0]=v*S,t[1]=(m*h*r-u*f*r-m*i*d+n*f*d+u*i*g-n*h*g)*S,t[2]=(s*f*r-m*o*r+m*i*l-n*f*l-s*i*g+n*o*g)*S,t[3]=(u*o*r-s*h*r-u*i*l+n*h*l+s*i*d-n*o*d)*S,t[4]=_*S,t[5]=(c*f*r-p*h*r+p*i*d-e*f*d-c*i*g+e*h*g)*S,t[6]=(p*o*r-a*f*r-p*i*l+e*f*l+a*i*g-e*o*g)*S,t[7]=(a*h*r-c*o*r+c*i*l-e*h*l-a*i*d+e*o*d)*S,t[8]=x*S,t[9]=(p*u*r-c*m*r-p*n*d+e*m*d+c*n*g-e*u*g)*S,t[10]=(a*m*r-p*s*r+p*n*l-e*m*l-a*n*g+e*s*g)*S,t[11]=(c*s*r-a*u*r-c*n*l+e*u*l+a*n*d-e*s*d)*S,t[12]=y*S,t[13]=(c*m*i-p*u*i+p*n*h-e*m*h-c*n*f+e*u*f)*S,t[14]=(p*s*i-a*m*i-p*n*o+e*m*o+a*n*f-e*s*f)*S,t[15]=(a*u*i-c*s*i+c*n*o-e*u*o-a*n*h+e*s*h)*S,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,l=r*a,c=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,c*s+n,c*o-i*a,0,l*o-i*s,c*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,a){return this.set(1,n,r,0,t,1,a,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,l=r+r,c=a+a,u=s+s,h=r*l,d=r*c,p=r*u,m=a*c,f=a*u,g=s*u,v=o*l,_=o*c,x=o*u,y=n.x,b=n.y,S=n.z;return i[0]=(1-(m+g))*y,i[1]=(d+x)*y,i[2]=(p-_)*y,i[3]=0,i[4]=(d-x)*b,i[5]=(1-(h+g))*b,i[6]=(f+v)*b,i[7]=0,i[8]=(p+_)*S,i[9]=(f-v)*S,i[10]=(1-(h+m))*S,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Ti.set(i[0],i[1],i[2]).length();const a=Ti.set(i[4],i[5],i[6]).length(),s=Ti.set(i[8],i[9],i[10]).length(),o=this.determinant();o<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Ci.copy(this);const l=1/r,c=1/a,u=1/s;return Ci.elements[0]*=l,Ci.elements[1]*=l,Ci.elements[2]*=l,Ci.elements[4]*=c,Ci.elements[5]*=c,Ci.elements[6]*=c,Ci.elements[8]*=u,Ci.elements[9]*=u,Ci.elements[10]*=u,e.setFromRotationMatrix(Ci),n.x=r,n.y=a,n.z=s,this}makePerspective(t,e,n,i,r,a){const s=this.elements,o=2*r/(e-t),l=2*r/(n-i),c=(e+t)/(e-t),u=(n+i)/(n-i),h=-(a+r)/(a-r),d=-2*a*r/(a-r);return s[0]=o,s[4]=0,s[8]=c,s[12]=0,s[1]=0,s[5]=l,s[9]=u,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,r,a){const s=this.elements,o=1/(e-t),l=1/(n-i),c=1/(a-r),u=(e+t)*o,h=(n+i)*l,d=(a+r)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-u,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Ti=new Yn,Ci=new Mi,Ei=new Yn(0,0,0),Ai=new Yn(1,1,1),Pi=new Yn,Li=new Yn,Ri=new Yn,Di=new Mi,Ni=new Xn;class zi{constructor(t=0,e=0,n=0,i=zi.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],a=i[4],s=i[8],o=i[1],l=i[5],c=i[9],u=i[2],h=i[6],d=i[10];switch(e){case"XYZ":this._y=Math.asin(mn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-mn(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(mn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-mn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(mn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-mn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Di.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Di,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ni.setFromEuler(this),this.setFromQuaternion(Ni,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}zi.DefaultOrder="XYZ",zi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Ii{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return 0!==(this.mask&(1<<t|0))}}let Oi=0;const ki=new Yn,Ui=new Xn,Fi=new Mi,Bi=new Yn,Gi=new Yn,Vi=new Yn,Hi=new Xn,Wi=new Yn(1,0,0),ji=new Yn(0,1,0),qi=new Yn(0,0,1),Xi={type:"added"},Yi={type:"removed"};class Zi extends cn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Oi++}),this.uuid=pn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Zi.DefaultUp.clone();const t=new Yn,e=new zi,n=new Xn,i=new Yn(1,1,1);function r(){n.setFromEuler(e,!1)}function a(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Mi},normalMatrix:{value:new Sn}}),this.matrix=new Mi,this.matrixWorld=new Mi,this.matrixAutoUpdate=Zi.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Zi.DefaultMatrixWorldAutoUpdate,this.layers=new Ii,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ui.setFromAxisAngle(t,e),this.quaternion.multiply(Ui),this}rotateOnWorldAxis(t,e){return Ui.setFromAxisAngle(t,e),this.quaternion.premultiply(Ui),this}rotateX(t){return this.rotateOnAxis(Wi,t)}rotateY(t){return this.rotateOnAxis(ji,t)}rotateZ(t){return this.rotateOnAxis(qi,t)}translateOnAxis(t,e){return ki.copy(t).applyQuaternion(this.quaternion),this.position.add(ki.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Wi,t)}translateY(t){return this.translateOnAxis(ji,t)}translateZ(t){return this.translateOnAxis(qi,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Fi.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Bi.copy(t):Bi.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Gi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Fi.lookAt(Gi,Bi,this.up):Fi.lookAt(Bi,Gi,this.up),this.quaternion.setFromRotationMatrix(Fi),i&&(Fi.extractRotation(i.matrixWorld),Ui.setFromRotationMatrix(Fi),this.quaternion.premultiply(Ui.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Xi)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Yi)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Yi)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Fi.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Fi.multiply(t.parent.matrixWorld)),t.applyMatrix4(Fi),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n],r=i.getObjectByProperty(t,e);if(void 0!==r)return r}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gi,t,Vi),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gi,Hi,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const i=e[n];!0!==i.matrixWorldAutoUpdate&&!0!==t||i.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++){const n=t[e];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"===typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=a(t.geometries),i=a(t.materials),r=a(t.textures),s=a(t.images),o=a(t.shapes),l=a(t.skeletons),c=a(t.animations),u=a(t.nodes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),u.length>0&&(n.nodes=u)}return n.object=i,n;function a(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}Zi.DefaultUp=new Yn(0,1,0),Zi.DefaultMatrixAutoUpdate=!0,Zi.DefaultMatrixWorldAutoUpdate=!0;const Ji=new Yn,$i=new Yn,Ki=new Yn,Qi=new Yn,tr=new Yn,er=new Yn,nr=new Yn,ir=new Yn,rr=new Yn,ar=new Yn;class sr{constructor(t=new Yn,e=new Yn,n=new Yn){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Ji.subVectors(t,e),i.cross(Ji);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Ji.subVectors(i,e),$i.subVectors(n,e),Ki.subVectors(t,e);const a=Ji.dot(Ji),s=Ji.dot($i),o=Ji.dot(Ki),l=$i.dot($i),c=$i.dot(Ki),u=a*l-s*s;if(0===u)return r.set(-2,-1,-1);const h=1/u,d=(l*o-s*c)*h,p=(a*c-s*o)*h;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Qi),Qi.x>=0&&Qi.y>=0&&Qi.x+Qi.y<=1}static getUV(t,e,n,i,r,a,s,o){return this.getBarycoord(t,e,n,i,Qi),o.set(0,0),o.addScaledVector(r,Qi.x),o.addScaledVector(a,Qi.y),o.addScaledVector(s,Qi.z),o}static isFrontFacing(t,e,n,i){return Ji.subVectors(n,e),$i.subVectors(t,e),Ji.cross($i).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ji.subVectors(this.c,this.b),$i.subVectors(this.a,this.b),.5*Ji.cross($i).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return sr.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return sr.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return sr.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return sr.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return sr.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let a,s;tr.subVectors(i,n),er.subVectors(r,n),ir.subVectors(t,n);const o=tr.dot(ir),l=er.dot(ir);if(o<=0&&l<=0)return e.copy(n);rr.subVectors(t,i);const c=tr.dot(rr),u=er.dot(rr);if(c>=0&&u<=c)return e.copy(i);const h=o*u-c*l;if(h<=0&&o>=0&&c<=0)return a=o/(o-c),e.copy(n).addScaledVector(tr,a);ar.subVectors(t,r);const d=tr.dot(ar),p=er.dot(ar);if(p>=0&&d<=p)return e.copy(r);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return s=l/(l-p),e.copy(n).addScaledVector(er,s);const f=c*p-d*u;if(f<=0&&u-c>=0&&d-p>=0)return nr.subVectors(r,i),s=(u-c)/(u-c+(d-p)),e.copy(i).addScaledVector(nr,s);const g=1/(f+m+h);return a=m*g,s=h*g,e.copy(n).addScaledVector(tr,a).addScaledVector(er,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let or=0;class lr extends cn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:or++}),this.uuid=pn(),this.name="",this.type="Material",this.blending=Z,this.side=j,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ct,this.blendDst=ut,this.blendEquation=tt,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=xt,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=an,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=rn,this.stencilZFail=rn,this.stencilZPass=rn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!==t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"===typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Z&&(n.blending=this.blending),this.side!==j&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class cr extends lr{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new On(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Mt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const ur=new Yn,hr=new bn;class dr{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=sn,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)hr.fromBufferAttribute(this,e),hr.applyMatrix3(t),this.setXY(e,hr.x,hr.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ur.fromBufferAttribute(this,e),ur.applyMatrix3(t),this.setXYZ(e,ur.x,ur.y,ur.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)ur.fromBufferAttribute(this,e),ur.applyMatrix4(t),this.setXYZ(e,ur.x,ur.y,ur.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ur.fromBufferAttribute(this,e),ur.applyNormalMatrix(t),this.setXYZ(e,ur.x,ur.y,ur.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ur.fromBufferAttribute(this,e),ur.transformDirection(t),this.setXYZ(e,ur.x,ur.y,ur.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=xn(e,this.array)),e}setX(t,e){return this.normalized&&(e=yn(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=xn(e,this.array)),e}setY(t,e){return this.normalized&&(e=yn(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=xn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=yn(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=xn(e,this.array)),e}setW(t,e){return this.normalized&&(e=yn(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=yn(e,this.array),n=yn(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=yn(e,this.array),n=yn(n,this.array),i=yn(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=yn(e,this.array),n=yn(n,this.array),i=yn(i,this.array),r=yn(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==sn&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class pr extends dr{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class mr extends dr{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class fr extends dr{constructor(t,e,n){super(new Float32Array(t),e,n)}}let gr=0;const vr=new Mi,_r=new Zi,xr=new Yn,yr=new $n,br=new $n,Sr=new Yn;class wr extends cn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:gr++}),this.uuid=pn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Mn(t)?mr:pr)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Sn).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return vr.makeRotationFromQuaternion(t),this.applyMatrix4(vr),this}rotateX(t){return vr.makeRotationX(t),this.applyMatrix4(vr),this}rotateY(t){return vr.makeRotationY(t),this.applyMatrix4(vr),this}rotateZ(t){return vr.makeRotationZ(t),this.applyMatrix4(vr),this}translate(t,e,n){return vr.makeTranslation(t,e,n),this.applyMatrix4(vr),this}scale(t,e,n){return vr.makeScale(t,e,n),this.applyMatrix4(vr),this}lookAt(t){return _r.lookAt(t),_r.updateMatrix(),this.applyMatrix4(_r.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(xr).negate(),this.translate(xr.x,xr.y,xr.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new fr(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new $n);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Yn(-1/0,-1/0,-1/0),new Yn(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const t=e[n];yr.setFromBufferAttribute(t),this.morphTargetsRelative?(Sr.addVectors(this.boundingBox.min,yr.min),this.boundingBox.expandByPoint(Sr),Sr.addVectors(this.boundingBox.max,yr.max),this.boundingBox.expandByPoint(Sr)):(this.boundingBox.expandByPoint(yr.min),this.boundingBox.expandByPoint(yr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new fi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Yn,1/0);if(t){const n=this.boundingSphere.center;if(yr.setFromBufferAttribute(t),e)for(let t=0,r=e.length;t<r;t++){const n=e[t];br.setFromBufferAttribute(n),this.morphTargetsRelative?(Sr.addVectors(yr.min,br.min),yr.expandByPoint(Sr),Sr.addVectors(yr.max,br.max),yr.expandByPoint(Sr)):(yr.expandByPoint(br.min),yr.expandByPoint(br.max))}yr.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Sr.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Sr));if(e)for(let r=0,a=e.length;r<a;r++){const a=e[r],s=this.morphTargetsRelative;for(let e=0,r=a.count;e<r;e++)Sr.fromBufferAttribute(a,e),s&&(xr.fromBufferAttribute(t,e),Sr.add(xr)),i=Math.max(i,n.distanceToSquared(Sr))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,i=e.position.array,r=e.normal.array,a=e.uv.array,s=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new dr(new Float32Array(4*s),4));const o=this.getAttribute("tangent").array,l=[],c=[];for(let T=0;T<s;T++)l[T]=new Yn,c[T]=new Yn;const u=new Yn,h=new Yn,d=new Yn,p=new bn,m=new bn,f=new bn,g=new Yn,v=new Yn;function _(t,e,n){u.fromArray(i,3*t),h.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(a,2*t),m.fromArray(a,2*e),f.fromArray(a,2*n),h.sub(u),d.sub(u),m.sub(p),f.sub(p);const r=1/(m.x*f.y-f.x*m.y);isFinite(r)&&(g.copy(h).multiplyScalar(f.y).addScaledVector(d,-m.y).multiplyScalar(r),v.copy(d).multiplyScalar(m.x).addScaledVector(h,-f.x).multiplyScalar(r),l[t].add(g),l[e].add(g),l[n].add(g),c[t].add(v),c[e].add(v),c[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let T=0,C=x.length;T<C;++T){const t=x[T],e=t.start,i=t.count;for(let r=e,a=e+i;r<a;r+=3)_(n[r+0],n[r+1],n[r+2])}const y=new Yn,b=new Yn,S=new Yn,w=new Yn;function M(t){S.fromArray(r,3*t),w.copy(S);const e=l[t];y.copy(e),y.sub(S.multiplyScalar(S.dot(e))).normalize(),b.crossVectors(w,e);const n=b.dot(c[t]),i=n<0?-1:1;o[4*t]=y.x,o[4*t+1]=y.y,o[4*t+2]=y.z,o[4*t+3]=i}for(let T=0,C=x.length;T<C;++T){const t=x[T],e=t.start,i=t.count;for(let r=e,a=e+i;r<a;r+=3)M(n[r+0]),M(n[r+1]),M(n[r+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new dr(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new Yn,r=new Yn,a=new Yn,s=new Yn,o=new Yn,l=new Yn,c=new Yn,u=new Yn;if(t)for(let h=0,d=t.count;h<d;h+=3){const d=t.getX(h+0),p=t.getX(h+1),m=t.getX(h+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),a.fromBufferAttribute(e,m),c.subVectors(a,r),u.subVectors(i,r),c.cross(u),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),s.add(c),o.add(c),l.add(c),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,h=e.count;t<h;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),c.subVectors(a,r),u.subVectors(i,r),c.cross(u),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Sr.fromBufferAttribute(t,e),Sr.normalize(),t.setXYZ(e,Sr.x,Sr.y,Sr.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,a=new n.constructor(e.length*i);let s=0,o=0;for(let l=0,c=e.length;l<c;l++){s=t.isInterleavedBufferAttribute?e[l]*t.data.stride+t.offset:e[l]*i;for(let t=0;t<i;t++)a[o++]=n[s++]}return new dr(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new wr,n=this.index.array,i=this.attributes;for(const s in i){const r=i[s],a=t(r,n);e.setAttribute(s,a)}const r=this.morphAttributes;for(const s in r){const i=[],a=r[s];for(let e=0,r=a.length;e<r;e++){const r=a[e],s=t(r,n);i.push(s)}e.morphAttributes[s]=i}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let s=0,o=a.length;s<o;s++){const t=a[s];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const o in n){const e=n[o];t.data.attributes[o]=e.toJSON(t.data)}const i={};let r=!1;for(const o in this.morphAttributes){const e=this.morphAttributes[o],n=[];for(let i=0,r=e.length;i<r;i++){const r=e[i];n.push(r.toJSON(t.data))}n.length>0&&(i[o]=n,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const t=i[l];this.setAttribute(l,t.clone(e))}const r=t.morphAttributes;for(const l in r){const t=[],n=r[l];for(let i=0,r=n.length;i<r;i++)t.push(n[i].clone(e));this.morphAttributes[l]=t}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let l=0,c=a.length;l<c;l++){const t=a[l];this.addGroup(t.start,t.count,t.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Mr=new Mi,Tr=new wi,Cr=new fi,Er=new Yn,Ar=new Yn,Pr=new Yn,Lr=new Yn,Rr=new Yn,Dr=new Yn,Nr=new Yn,zr=new Yn,Ir=new Yn,Or=new bn,kr=new bn,Ur=new bn,Fr=new Yn,Br=new Yn;class Gr extends Zi{constructor(t=new wr,e=new cr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry,e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Cr.copy(n.boundingSphere),Cr.applyMatrix4(r),!1===t.ray.intersectsSphere(Cr))return;if(Mr.copy(r).invert(),Tr.copy(t.ray).applyMatrix4(Mr),null!==n.boundingBox&&!1===Tr.intersectsBox(n.boundingBox))return;let a;const s=n.index,o=n.attributes.position,l=n.morphAttributes.position,c=n.morphTargetsRelative,u=n.attributes.uv,h=n.attributes.uv2,d=n.groups,p=n.drawRange;if(null!==s)if(Array.isArray(i))for(let m=0,f=d.length;m<f;m++){const n=d[m],r=i[n.materialIndex],f=Math.max(n.start,p.start),g=Math.min(s.count,Math.min(n.start+n.count,p.start+p.count));for(let i=f,d=g;i<d;i+=3){const d=s.getX(i),p=s.getX(i+1),m=s.getX(i+2);a=Hr(this,r,t,Tr,o,l,c,u,h,d,p,m),a&&(a.faceIndex=Math.floor(i/3),a.face.materialIndex=n.materialIndex,e.push(a))}}else{const n=Math.max(0,p.start),r=Math.min(s.count,p.start+p.count);for(let d=n,p=r;d<p;d+=3){const n=s.getX(d),r=s.getX(d+1),p=s.getX(d+2);a=Hr(this,i,t,Tr,o,l,c,u,h,n,r,p),a&&(a.faceIndex=Math.floor(d/3),e.push(a))}}else if(void 0!==o)if(Array.isArray(i))for(let m=0,f=d.length;m<f;m++){const n=d[m],r=i[n.materialIndex],s=Math.max(n.start,p.start),f=Math.min(o.count,Math.min(n.start+n.count,p.start+p.count));for(let i=s,d=f;i<d;i+=3){const s=i,d=i+1,p=i+2;a=Hr(this,r,t,Tr,o,l,c,u,h,s,d,p),a&&(a.faceIndex=Math.floor(i/3),a.face.materialIndex=n.materialIndex,e.push(a))}}else{const n=Math.max(0,p.start),r=Math.min(o.count,p.start+p.count);for(let s=n,d=r;s<d;s+=3){const n=s,r=s+1,d=s+2;a=Hr(this,i,t,Tr,o,l,c,u,h,n,r,d),a&&(a.faceIndex=Math.floor(s/3),e.push(a))}}}}function Vr(t,e,n,i,r,a,s,o){let l;if(l=e.side===q?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,e.side!==X,o),null===l)return null;Br.copy(o),Br.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Br);return c<n.near||c>n.far?null:{distance:c,point:Br.clone(),object:t}}function Hr(t,e,n,i,r,a,s,o,l,c,u,h){Er.fromBufferAttribute(r,c),Ar.fromBufferAttribute(r,u),Pr.fromBufferAttribute(r,h);const d=t.morphTargetInfluences;if(a&&d){Nr.set(0,0,0),zr.set(0,0,0),Ir.set(0,0,0);for(let t=0,e=a.length;t<e;t++){const e=d[t],n=a[t];0!==e&&(Lr.fromBufferAttribute(n,c),Rr.fromBufferAttribute(n,u),Dr.fromBufferAttribute(n,h),s?(Nr.addScaledVector(Lr,e),zr.addScaledVector(Rr,e),Ir.addScaledVector(Dr,e)):(Nr.addScaledVector(Lr.sub(Er),e),zr.addScaledVector(Rr.sub(Ar),e),Ir.addScaledVector(Dr.sub(Pr),e)))}Er.add(Nr),Ar.add(zr),Pr.add(Ir)}t.isSkinnedMesh&&(t.boneTransform(c,Er),t.boneTransform(u,Ar),t.boneTransform(h,Pr));const p=Vr(t,e,n,i,Er,Ar,Pr,Fr);if(p){o&&(Or.fromBufferAttribute(o,c),kr.fromBufferAttribute(o,u),Ur.fromBufferAttribute(o,h),p.uv=sr.getUV(Fr,Er,Ar,Pr,Or,kr,Ur,new bn)),l&&(Or.fromBufferAttribute(l,c),kr.fromBufferAttribute(l,u),Ur.fromBufferAttribute(l,h),p.uv2=sr.getUV(Fr,Er,Ar,Pr,Or,kr,Ur,new bn));const t={a:c,b:u,c:h,normal:new Yn,materialIndex:0};sr.getNormal(Er,Ar,Pr,t.normal),p.face=t}return p}class Wr extends wr{constructor(t=1,e=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],l=[],c=[],u=[];let h=0,d=0;function p(t,e,n,i,r,a,p,m,f,g,v){const _=a/f,x=p/g,y=a/2,b=p/2,S=m/2,w=f+1,M=g+1;let T=0,C=0;const E=new Yn;for(let s=0;s<M;s++){const a=s*x-b;for(let o=0;o<w;o++){const h=o*_-y;E[t]=h*i,E[e]=a*r,E[n]=S,l.push(E.x,E.y,E.z),E[t]=0,E[e]=0,E[n]=m>0?1:-1,c.push(E.x,E.y,E.z),u.push(o/f),u.push(1-s/g),T+=1}}for(let s=0;s<g;s++)for(let t=0;t<f;t++){const e=h+t+w*s,n=h+t+w*(s+1),i=h+(t+1)+w*(s+1),r=h+(t+1)+w*s;o.push(e,n,r),o.push(n,i,r),C+=6}s.addGroup(d,C,v),d+=C,h+=T}p("z","y","x",-1,-1,n,e,t,a,r,0),p("z","y","x",1,-1,n,e,-t,a,r,1),p("x","z","y",1,1,t,n,e,i,a,2),p("x","z","y",1,-1,t,n,-e,i,a,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new fr(l,3)),this.setAttribute("normal",new fr(c,3)),this.setAttribute("uv",new fr(u,2))}static fromJSON(t){return new Wr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function jr(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function qr(t){const e={};for(let n=0;n<t.length;n++){const i=jr(t[n]);for(const t in i)e[t]=i[t]}return e}function Xr(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}function Yr(t){return null===t.getRenderTarget()&&t.outputEncoding===Je?en:nn}const Zr={clone:jr,merge:qr};var Jr="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",$r="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class Kr extends lr{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Jr,this.fragmentShader=$r,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=jr(t.uniforms),this.uniformsGroups=Xr(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i],r=n.value;r&&r.isTexture?e.uniforms[i]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[i]={type:"m4",value:r.toArray()}:e.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class Qr extends Zi{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Mi,this.projectionMatrix=new Mi,this.projectionMatrixInverse=new Mi}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class ta extends Qr{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*dn*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*hn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*dn*Math.atan(Math.tan(.5*hn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*hn*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/t,e-=a.offsetY*n/s,i*=a.width/t,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ea=-90,na=1;class ia extends Zi{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new ta(ea,na,t,e);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const r=new ta(ea,na,t,e);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const a=new ta(ea,na,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const s=new ta(ea,na,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(0,-1,0),this.add(s);const o=new ta(ea,na,t,e);o.layers=this.layers,o.up.set(0,1,0),o.lookAt(0,0,1),this.add(o);const l=new ta(ea,na,t,e);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,-1),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,s,o,l]=this.children,c=t.getRenderTarget(),u=t.toneMapping,h=t.xr.enabled;t.toneMapping=Et,t.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=d,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(c),t.toneMapping=u,t.xr.enabled=h,n.texture.needsPMREMUpdate=!0}}class ra extends Vn{constructor(t,e,n,i,r,a,s,o,l,c){t=void 0!==t?t:[],e=void 0!==e?e:zt,super(t,e,n,i,r,a,s,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class aa extends Wn{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new ra(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:jt}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new Wr(5,5,5),r=new Kr({name:"CubemapFromEquirect",uniforms:jr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:q,blending:Y});r.uniforms.tEquirect.value=e;const a=new Gr(i,r),s=e.minFilter;e.minFilter===Xt&&(e.minFilter=jt);const o=new ia(1,10,this);return o.update(t,a),e.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,i);t.setRenderTarget(r)}}const sa=new Yn,oa=new Yn,la=new Sn;class ca{constructor(t=new Yn(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=sa.subVectors(n,e).cross(oa.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(sa),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||la.getNormalMatrix(t),i=this.coplanarPoint(sa).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const ua=new fi,ha=new Yn;class da{constructor(t=new ca,e=new ca,n=new ca,i=new ca,r=new ca,a=new ca){this.planes=[t,e,n,i,r,a]}set(t,e,n,i,r,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],u=n[7],h=n[8],d=n[9],p=n[10],m=n[11],f=n[12],g=n[13],v=n[14],_=n[15];return e[0].setComponents(s-i,u-o,m-h,_-f).normalize(),e[1].setComponents(s+i,u+o,m+h,_+f).normalize(),e[2].setComponents(s+r,u+l,m+d,_+g).normalize(),e[3].setComponents(s-r,u-l,m-d,_-g).normalize(),e[4].setComponents(s-a,u-c,m-p,_-v).normalize(),e[5].setComponents(s+a,u+c,m+p,_+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),ua.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(ua)}intersectsSprite(t){return ua.center.set(0,0,0),ua.radius=.7071067811865476,ua.applyMatrix4(t.matrixWorld),this.intersectsSphere(ua)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++){const t=e[r].distanceToPoint(n);if(t<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(ha.x=i.normal.x>0?t.max.x:t.min.x,ha.y=i.normal.y>0?t.max.y:t.min.y,ha.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(ha)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function pa(){let t=null,e=!1,n=null,i=null;function r(e,a){n(e,a),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function ma(t,e){const n=e.isWebGL2,i=new WeakMap;function r(e,i){const r=e.array,a=e.usage,s=t.createBuffer();let o;if(t.bindBuffer(i,s),t.bufferData(i,r,a),e.onUploadCallback(),r instanceof Float32Array)o=5126;else if(r instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(r instanceof Int16Array)o=5122;else if(r instanceof Uint32Array)o=5125;else if(r instanceof Int32Array)o=5124;else if(r instanceof Int8Array)o=5120;else if(r instanceof Uint8Array)o=5121;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);o=5121}return{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}function a(e,i,r){const a=i.array,s=i.updateRange;t.bindBuffer(r,e),-1===s.count?t.bufferSubData(r,0,a):(n?t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1),i.onUploadCallback()}function s(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)}function o(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))}function l(t,e){if(t.isGLBufferAttribute){const e=i.get(t);return void((!e||e.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const n=i.get(t);void 0===n?i.set(t,r(t,e)):n.version<t.version&&(a(n.buffer,t,e),n.version=t.version)}return{get:s,remove:o,update:l}}class fa extends wr{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,a=e/2,s=Math.floor(n),o=Math.floor(i),l=s+1,c=o+1,u=t/s,h=e/o,d=[],p=[],m=[],f=[];for(let g=0;g<c;g++){const t=g*h-a;for(let e=0;e<l;e++){const n=e*u-r;p.push(n,-t,0),m.push(0,0,1),f.push(e/s),f.push(1-g/o)}}for(let g=0;g<o;g++)for(let t=0;t<s;t++){const e=t+l*g,n=t+l*(g+1),i=t+1+l*(g+1),r=t+1+l*g;d.push(e,n,r),d.push(n,i,r)}this.setIndex(d),this.setAttribute("position",new fr(p,3)),this.setAttribute("normal",new fr(m,3)),this.setAttribute("uv",new fr(f,2))}static fromJSON(t){return new fa(t.width,t.height,t.widthSegments,t.heightSegments)}}var ga="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",va="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",_a="#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",xa="#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",ya="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",ba="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",Sa="vec3 transformed = vec3( position );",wa="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",Ma="vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",Ta="#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",Ca="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",Ea="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",Aa="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",Pa="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",La="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",Ra="#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",Da="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",Na="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",za="#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",Ia="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",Oa="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",ka="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",Ua="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",Fa="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",Ba="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",Ga="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",Va="gl_FragColor = linearToOutputTexel( gl_FragColor );",Ha="vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",Wa="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",ja="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",qa="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",Xa="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",Ya="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",Za="#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",Ja="#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",$a="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",Ka="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",Qa="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",ts="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",es="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",ns="LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",is="varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",rs="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",as="#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",ss="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",os="varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",ls="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",cs="varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",us="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",hs="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",ds="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",ps="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",ms="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",fs="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",gs="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",vs="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",_s="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",xs="#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",ys="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",bs="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",Ss="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",ws="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",Ms="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",Ts="#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",Cs="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",Es="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",As="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",Ps="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",Ls="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",Rs="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",Ds="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",Ns="#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",zs="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",Is="#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",Os="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",ks="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",Us="#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",Fs="#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",Bs="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",Gs="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",Vs="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",Hs="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",Ws="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",js="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",qs="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",Xs="#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",Ys="#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",Zs="#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",Js="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",$s="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",Ks="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",Qs="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",to="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",eo="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",no="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",io="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",ro="#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",ao="#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",so="#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",oo="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",lo="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",co="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",ho="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",po="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",mo="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";const fo="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",go="uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",vo="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",_o="#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",xo="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",yo="uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",bo="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",So="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",wo="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",Mo="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",To="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",Co="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Eo="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",Ao="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",Po="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",Lo="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",Ro="#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",Do="#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",No="#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",zo="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",Io="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",Oo="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",ko="#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",Uo="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",Fo="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",Bo="#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",Go="#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",Vo="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",Ho="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",Wo="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",jo="#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",qo="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",Xo="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",Yo="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",Zo={alphamap_fragment:ga,alphamap_pars_fragment:va,alphatest_fragment:_a,alphatest_pars_fragment:xa,aomap_fragment:ya,aomap_pars_fragment:ba,begin_vertex:Sa,beginnormal_vertex:wa,bsdfs:Ma,iridescence_fragment:Ta,bumpmap_pars_fragment:Ca,clipping_planes_fragment:Ea,clipping_planes_pars_fragment:Aa,clipping_planes_pars_vertex:Pa,clipping_planes_vertex:La,color_fragment:Ra,color_pars_fragment:Da,color_pars_vertex:Na,color_vertex:za,common:Ia,cube_uv_reflection_fragment:Oa,defaultnormal_vertex:ka,displacementmap_pars_vertex:Ua,displacementmap_vertex:Fa,emissivemap_fragment:Ba,emissivemap_pars_fragment:Ga,encodings_fragment:Va,encodings_pars_fragment:Ha,envmap_fragment:Wa,envmap_common_pars_fragment:ja,envmap_pars_fragment:qa,envmap_pars_vertex:Xa,envmap_physical_pars_fragment:as,envmap_vertex:Ya,fog_vertex:Za,fog_pars_vertex:Ja,fog_fragment:$a,fog_pars_fragment:Ka,gradientmap_pars_fragment:Qa,lightmap_fragment:ts,lightmap_pars_fragment:es,lights_lambert_fragment:ns,lights_lambert_pars_fragment:is,lights_pars_begin:rs,lights_toon_fragment:ss,lights_toon_pars_fragment:os,lights_phong_fragment:ls,lights_phong_pars_fragment:cs,lights_physical_fragment:us,lights_physical_pars_fragment:hs,lights_fragment_begin:ds,lights_fragment_maps:ps,lights_fragment_end:ms,logdepthbuf_fragment:fs,logdepthbuf_pars_fragment:gs,logdepthbuf_pars_vertex:vs,logdepthbuf_vertex:_s,map_fragment:xs,map_pars_fragment:ys,map_particle_fragment:bs,map_particle_pars_fragment:Ss,metalnessmap_fragment:ws,metalnessmap_pars_fragment:Ms,morphcolor_vertex:Ts,morphnormal_vertex:Cs,morphtarget_pars_vertex:Es,morphtarget_vertex:As,normal_fragment_begin:Ps,normal_fragment_maps:Ls,normal_pars_fragment:Rs,normal_pars_vertex:Ds,normal_vertex:Ns,normalmap_pars_fragment:zs,clearcoat_normal_fragment_begin:Is,clearcoat_normal_fragment_maps:Os,clearcoat_pars_fragment:ks,iridescence_pars_fragment:Us,output_fragment:Fs,packing:Bs,premultiplied_alpha_fragment:Gs,project_vertex:Vs,dithering_fragment:Hs,dithering_pars_fragment:Ws,roughnessmap_fragment:js,roughnessmap_pars_fragment:qs,shadowmap_pars_fragment:Xs,shadowmap_pars_vertex:Ys,shadowmap_vertex:Zs,shadowmask_pars_fragment:Js,skinbase_vertex:$s,skinning_pars_vertex:Ks,skinning_vertex:Qs,skinnormal_vertex:to,specularmap_fragment:eo,specularmap_pars_fragment:no,tonemapping_fragment:io,tonemapping_pars_fragment:ro,transmission_fragment:ao,transmission_pars_fragment:so,uv_pars_fragment:oo,uv_pars_vertex:lo,uv_vertex:co,uv2_pars_fragment:uo,uv2_pars_vertex:ho,uv2_vertex:po,worldpos_vertex:mo,background_vert:fo,background_frag:go,backgroundCube_vert:vo,backgroundCube_frag:_o,cube_vert:xo,cube_frag:yo,depth_vert:bo,depth_frag:So,distanceRGBA_vert:wo,distanceRGBA_frag:Mo,equirect_vert:To,equirect_frag:Co,linedashed_vert:Eo,linedashed_frag:Ao,meshbasic_vert:Po,meshbasic_frag:Lo,meshlambert_vert:Ro,meshlambert_frag:Do,meshmatcap_vert:No,meshmatcap_frag:zo,meshnormal_vert:Io,meshnormal_frag:Oo,meshphong_vert:ko,meshphong_frag:Uo,meshphysical_vert:Fo,meshphysical_frag:Bo,meshtoon_vert:Go,meshtoon_frag:Vo,points_vert:Ho,points_frag:Wo,shadow_vert:jo,shadow_frag:qo,sprite_vert:Xo,sprite_frag:Yo},Jo={common:{diffuse:{value:new On(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Sn},uv2Transform:{value:new Sn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new bn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new On(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new On(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Sn}},sprite:{diffuse:{value:new On(16777215)},opacity:{value:1},center:{value:new bn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Sn}}},$o={basic:{uniforms:qr([Jo.common,Jo.specularmap,Jo.envmap,Jo.aomap,Jo.lightmap,Jo.fog]),vertexShader:Zo.meshbasic_vert,fragmentShader:Zo.meshbasic_frag},lambert:{uniforms:qr([Jo.common,Jo.specularmap,Jo.envmap,Jo.aomap,Jo.lightmap,Jo.emissivemap,Jo.bumpmap,Jo.normalmap,Jo.displacementmap,Jo.fog,Jo.lights,{emissive:{value:new On(0)}}]),vertexShader:Zo.meshlambert_vert,fragmentShader:Zo.meshlambert_frag},phong:{uniforms:qr([Jo.common,Jo.specularmap,Jo.envmap,Jo.aomap,Jo.lightmap,Jo.emissivemap,Jo.bumpmap,Jo.normalmap,Jo.displacementmap,Jo.fog,Jo.lights,{emissive:{value:new On(0)},specular:{value:new On(1118481)},shininess:{value:30}}]),vertexShader:Zo.meshphong_vert,fragmentShader:Zo.meshphong_frag},standard:{uniforms:qr([Jo.common,Jo.envmap,Jo.aomap,Jo.lightmap,Jo.emissivemap,Jo.bumpmap,Jo.normalmap,Jo.displacementmap,Jo.roughnessmap,Jo.metalnessmap,Jo.fog,Jo.lights,{emissive:{value:new On(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Zo.meshphysical_vert,fragmentShader:Zo.meshphysical_frag},toon:{uniforms:qr([Jo.common,Jo.aomap,Jo.lightmap,Jo.emissivemap,Jo.bumpmap,Jo.normalmap,Jo.displacementmap,Jo.gradientmap,Jo.fog,Jo.lights,{emissive:{value:new On(0)}}]),vertexShader:Zo.meshtoon_vert,fragmentShader:Zo.meshtoon_frag},matcap:{uniforms:qr([Jo.common,Jo.bumpmap,Jo.normalmap,Jo.displacementmap,Jo.fog,{matcap:{value:null}}]),vertexShader:Zo.meshmatcap_vert,fragmentShader:Zo.meshmatcap_frag},points:{uniforms:qr([Jo.points,Jo.fog]),vertexShader:Zo.points_vert,fragmentShader:Zo.points_frag},dashed:{uniforms:qr([Jo.common,Jo.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Zo.linedashed_vert,fragmentShader:Zo.linedashed_frag},depth:{uniforms:qr([Jo.common,Jo.displacementmap]),vertexShader:Zo.depth_vert,fragmentShader:Zo.depth_frag},normal:{uniforms:qr([Jo.common,Jo.bumpmap,Jo.normalmap,Jo.displacementmap,{opacity:{value:1}}]),vertexShader:Zo.meshnormal_vert,fragmentShader:Zo.meshnormal_frag},sprite:{uniforms:qr([Jo.sprite,Jo.fog]),vertexShader:Zo.sprite_vert,fragmentShader:Zo.sprite_frag},background:{uniforms:{uvTransform:{value:new Sn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Zo.background_vert,fragmentShader:Zo.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Zo.backgroundCube_vert,fragmentShader:Zo.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Zo.cube_vert,fragmentShader:Zo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Zo.equirect_vert,fragmentShader:Zo.equirect_frag},distanceRGBA:{uniforms:qr([Jo.common,Jo.displacementmap,{referencePosition:{value:new Yn},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Zo.distanceRGBA_vert,fragmentShader:Zo.distanceRGBA_frag},shadow:{uniforms:qr([Jo.lights,Jo.fog,{color:{value:new On(0)},opacity:{value:1}}]),vertexShader:Zo.shadow_vert,fragmentShader:Zo.shadow_frag}};$o.physical={uniforms:qr([$o.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new bn(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new On(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new bn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new On(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new On(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Zo.meshphysical_vert,fragmentShader:Zo.meshphysical_frag};const Ko={r:0,b:0,g:0};function Qo(t,e,n,i,r,a,s){const o=new On(0);let l,c,u=!0===a?0:1,h=null,d=0,p=null;function m(i,a){let s=!1,m=!0===a.isScene?a.background:null;if(m&&m.isTexture){const t=a.backgroundBlurriness>0;m=(t?n:e).get(m)}const g=t.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(m=null),null===m?f(o,u):m&&m.isColor&&(f(m,1),s=!0),(t.autoClear||s)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.mapping===Ut)?(void 0===c&&(c=new Gr(new Wr(1,1,1),new Kr({name:"BackgroundCubeMaterial",uniforms:jr($o.backgroundCube.uniforms),vertexShader:$o.backgroundCube.vertexShader,fragmentShader:$o.backgroundCube.fragmentShader,side:q,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),c.material.uniforms.envMap.value=m,c.material.uniforms.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=a.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=a.backgroundIntensity,h===m&&d===m.version&&p===t.toneMapping||(c.material.needsUpdate=!0,h=m,d=m.version,p=t.toneMapping),c.layers.enableAll(),i.unshift(c,c.geometry,c.material,0,0,null)):m&&m.isTexture&&(void 0===l&&(l=new Gr(new fa(2,2),new Kr({name:"BackgroundMaterial",uniforms:jr($o.background.uniforms),vertexShader:$o.background.vertexShader,fragmentShader:$o.background.fragmentShader,side:j,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=m,l.material.uniforms.backgroundIntensity.value=a.backgroundIntensity,!0===m.matrixAutoUpdate&&m.updateMatrix(),l.material.uniforms.uvTransform.value.copy(m.matrix),h===m&&d===m.version&&p===t.toneMapping||(l.material.needsUpdate=!0,h=m,d=m.version,p=t.toneMapping),l.layers.enableAll(),i.unshift(l,l.geometry,l.material,0,0,null))}function f(e,n){e.getRGB(Ko,Yr(t)),i.buffers.color.setClear(Ko.r,Ko.g,Ko.b,n,s)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),u=e,f(o,u)},getClearAlpha:function(){return u},setClearAlpha:function(t){u=t,f(o,u)},render:m}}function tl(t,e,n,i){const r=t.getParameter(34921),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,o={},l=g(null);let c=l,u=!1;function h(e,i,r,a,o){let l=!1;if(s){const t=f(a,r,i);c!==t&&(c=t,p(c.object)),l=v(e,a,r,o),l&&_(e,a,r,o)}else{const t=!0===i.wireframe;c.geometry===a.id&&c.program===r.id&&c.wireframe===t||(c.geometry=a.id,c.program=r.id,c.wireframe=t,l=!0)}null!==o&&n.update(o,34963),(l||u)&&(u=!1,M(e,i,r,a),null!==o&&t.bindBuffer(34963,n.get(o).buffer))}function d(){return i.isWebGL2?t.createVertexArray():a.createVertexArrayOES()}function p(e){return i.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function m(e){return i.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function f(t,e,n){const i=!0===n.wireframe;let r=o[t.id];void 0===r&&(r={},o[t.id]=r);let a=r[e.id];void 0===a&&(a={},r[e.id]=a);let s=a[i];return void 0===s&&(s=g(d()),a[i]=s),s}function g(t){const e=[],n=[],i=[];for(let a=0;a<r;a++)e[a]=0,n[a]=0,i[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function v(t,e,n,i){const r=c.attributes,a=e.attributes;let s=0;const o=n.getAttributes();for(const l in o){const e=o[l];if(e.location>=0){const e=r[l];let n=a[l];if(void 0===n&&("instanceMatrix"===l&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===l&&t.instanceColor&&(n=t.instanceColor)),void 0===e)return!0;if(e.attribute!==n)return!0;if(n&&e.data!==n.data)return!0;s++}}return c.attributesNum!==s||c.index!==i}function _(t,e,n,i){const r={},a=e.attributes;let s=0;const o=n.getAttributes();for(const l in o){const e=o[l];if(e.location>=0){let e=a[l];void 0===e&&("instanceMatrix"===l&&t.instanceMatrix&&(e=t.instanceMatrix),"instanceColor"===l&&t.instanceColor&&(e=t.instanceColor));const n={};n.attribute=e,e&&e.data&&(n.data=e.data),r[l]=n,s++}}c.attributes=r,c.attributesNum=s,c.index=i}function x(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function y(t){b(t,0)}function b(n,r){const a=c.newAttributes,s=c.enabledAttributes,o=c.attributeDivisors;if(a[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==r){const a=i.isWebGL2?t:e.get("ANGLE_instanced_arrays");a[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r}}function S(){const e=c.newAttributes,n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function w(e,n,r,a,s,o){!0!==i.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,n,r,a,s,o):t.vertexAttribIPointer(e,n,r,s,o)}function M(r,a,s,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;x();const l=o.attributes,c=s.getAttributes(),u=a.defaultAttributeValues;for(const e in c){const i=c[e];if(i.location>=0){let a=l[e];if(void 0===a&&("instanceMatrix"===e&&r.instanceMatrix&&(a=r.instanceMatrix),"instanceColor"===e&&r.instanceColor&&(a=r.instanceColor)),void 0!==a){const e=a.normalized,s=a.itemSize,l=n.get(a);if(void 0===l)continue;const c=l.buffer,u=l.type,h=l.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,l=n.stride,d=a.offset;if(n.isInstancedInterleavedBuffer){for(let t=0;t<i.locationSize;t++)b(i.location+t,n.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<i.locationSize;t++)y(i.location+t);t.bindBuffer(34962,c);for(let t=0;t<i.locationSize;t++)w(i.location+t,s/i.locationSize,u,e,l*h,(d+s/i.locationSize*t)*h)}else{if(a.isInstancedBufferAttribute){for(let t=0;t<i.locationSize;t++)b(i.location+t,a.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)}else for(let t=0;t<i.locationSize;t++)y(i.location+t);t.bindBuffer(34962,c);for(let t=0;t<i.locationSize;t++)w(i.location+t,s/i.locationSize,u,e,s*h,s/i.locationSize*t*h)}}else if(void 0!==u){const n=u[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i.location,n);break;case 3:t.vertexAttrib3fv(i.location,n);break;case 4:t.vertexAttrib4fv(i.location,n);break;default:t.vertexAttrib1fv(i.location,n)}}}}S()}function T(){A();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)m(n[t].object),delete n[t];delete e[t]}delete o[t]}}function C(t){if(void 0===o[t.id])return;const e=o[t.id];for(const n in e){const t=e[n];for(const e in t)m(t[e].object),delete t[e];delete e[n]}delete o[t.id]}function E(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)m(i[t].object),delete i[t];delete n[t.id]}}function A(){P(),u=!0,c!==l&&(c=l,p(c.object))}function P(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:A,resetDefaultState:P,dispose:T,releaseStatesOfGeometry:C,releaseStatesOfProgram:E,initAttributes:x,enableAttribute:y,disableUnusedAttributes:S}}function el(t,e,n,i){const r=i.isWebGL2;let a;function s(t){a=t}function o(e,i){t.drawArrays(a,e,i),n.update(i,a,1)}function l(i,s,o){if(0===o)return;let l,c;if(r)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](a,i,s,o),n.update(s,a,o)}this.setMode=s,this.render=o,this.renderInstances=l}function nl(t,e,n){let i;function r(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!==typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let o=void 0!==n.precision?n.precision:"highp";const l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=s||e.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,h=t.getParameter(34930),d=t.getParameter(35660),p=t.getParameter(3379),m=t.getParameter(34076),f=t.getParameter(34921),g=t.getParameter(36347),v=t.getParameter(36348),_=t.getParameter(36349),x=d>0,y=s||e.has("OES_texture_float"),b=x&&y,S=s?t.getParameter(36183):0;return{isWebGL2:s,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:m,maxAttributes:f,maxVertexUniforms:g,maxVaryings:v,maxFragmentUniforms:_,vertexTextures:x,floatFragmentTextures:y,floatVertexTextures:b,maxSamples:S}}function il(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new ca,o=new Sn,l={value:null,needsUpdate:!1};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(t,n,i,r){const a=null!==t?t.length:0;let c=null;if(0!==a){if(c=l.value,!0!==r||null===c){const e=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let n=0,l=i;n!==a;++n,l+=4)s.copy(t[n]).applyMatrix4(r,o),s.normal.toArray(c,l),c[l+3]=s.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){const s=0!==t.length||e||0!==i||r;return r=e,n=u(t,a,0),i=t.length,s},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,c()},this.setState=function(e,s,o){const h=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,m=t.get(e);if(!r||null===h||0===h.length||a&&!p)a?u(null):c();else{const t=a?0:i,e=4*t;let r=m.clippingState||null;l.value=r,r=u(h,s,e,o);for(let i=0;i!==e;++i)r[i]=n[i];m.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function rl(t){let e=new WeakMap;function n(t,e){return e===Ot?t.mapping=zt:e===kt&&(t.mapping=It),t}function i(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const a=i.mapping;if(a===Ot||a===kt){if(e.has(i)){const t=e.get(i).texture;return n(t,i.mapping)}{const a=i.image;if(a&&a.height>0){const s=new aa(a.height/2);return s.fromEquirectangularTexture(t,i),e.set(i,s),i.addEventListener("dispose",r),n(s.texture,i.mapping)}return null}}}return i}function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}function a(){e=new WeakMap}return{get:i,dispose:a}}class al extends Qr{constructor(t=-1,e=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,a=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,a=r+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const sl=4,ol=[.125,.215,.35,.446,.526,.582],ll=20,cl=new al,ul=new On;let hl=null;const dl=(1+Math.sqrt(5))/2,pl=1/dl,ml=[new Yn(1,1,1),new Yn(-1,1,1),new Yn(1,1,-1),new Yn(-1,1,-1),new Yn(0,dl,pl),new Yn(0,dl,-pl),new Yn(pl,0,dl),new Yn(-pl,0,dl),new Yn(dl,pl,0),new Yn(-dl,pl,0)];class fl{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){hl=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=bl(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=yl(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(hl),t.scissorTest=!1,_l(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===zt||t.mapping===It?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),hl=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:jt,minFilter:jt,generateMipmaps:!1,type:ee,format:oe,encoding:Ze,depthBuffer:!1},i=vl(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=vl(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=gl(i)),this._blurMaterial=xl(i,t,e)}return i}_compileMaterial(t){const e=new Gr(this._lodPlanes[0],t);this._renderer.compile(e,cl)}_sceneToCubeUV(t,e,n,i){const r=90,a=1,s=new ta(r,a,e,n),o=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],c=this._renderer,u=c.autoClear,h=c.toneMapping;c.getClearColor(ul),c.toneMapping=Et,c.autoClear=!1;const d=new cr({name:"PMREM.Background",side:q,depthWrite:!1,depthTest:!1}),p=new Gr(new Wr,d);let m=!1;const f=t.background;f?f.isColor&&(d.color.copy(f),t.background=null,m=!0):(d.color.copy(ul),m=!0);for(let g=0;g<6;g++){const e=g%3;0===e?(s.up.set(0,o[g],0),s.lookAt(l[g],0,0)):1===e?(s.up.set(0,0,o[g]),s.lookAt(0,l[g],0)):(s.up.set(0,o[g],0),s.lookAt(0,0,l[g]));const n=this._cubeSize;_l(i,e*n,g>2?n:0,n,n),c.setRenderTarget(i),m&&c.render(p,s),c.render(t,s)}p.geometry.dispose(),p.material.dispose(),c.toneMapping=h,c.autoClear=u,t.background=f}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===zt||t.mapping===It;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=bl()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=yl());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Gr(this._lodPlanes[0],r),s=r.uniforms;s["envMap"].value=t;const o=this._cubeSize;_l(e,0,0,3*o,2*o),n.setRenderTarget(e),n.render(a,cl)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const e=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),n=ml[(i-1)%ml.length];this._blur(t,i-1,i,e,n)}e.autoClear=n}_blur(t,e,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,n,i,"latitudinal",r),this._halfBlur(a,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,a,s){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,u=new Gr(this._lodPlanes[i],l),h=l.uniforms,d=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*ll-1),m=r/p,f=isFinite(r)?1+Math.floor(c*m):ll;f>ll&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to ${ll}`);const g=[];let v=0;for(let S=0;S<ll;++S){const t=S/m,e=Math.exp(-t*t/2);g.push(e),0===S?v+=e:S<f&&(v+=2*e)}for(let S=0;S<g.length;S++)g[S]=g[S]/v;h["envMap"].value=t.texture,h["samples"].value=f,h["weights"].value=g,h["latitudinal"].value="latitudinal"===a,s&&(h["poleAxis"].value=s);const{_lodMax:_}=this;h["dTheta"].value=p,h["mipInt"].value=_-n;const x=this._sizeLods[i],y=3*x*(i>_-sl?i-_+sl:0),b=4*(this._cubeSize-x);_l(e,y,b,3*x,2*x),o.setRenderTarget(e),o.render(u,cl)}}function gl(t){const e=[],n=[],i=[];let r=t;const a=t-sl+1+ol.length;for(let s=0;s<a;s++){const a=Math.pow(2,r);n.push(a);let o=1/a;s>t-sl?o=ol[s-t+sl-1]:0===s&&(o=0),i.push(o);const l=1/(a-2),c=-l,u=1+l,h=[c,c,u,c,u,u,c,c,u,u,c,u],d=6,p=6,m=3,f=2,g=1,v=new Float32Array(m*p*d),_=new Float32Array(f*p*d),x=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];v.set(i,m*p*t),_.set(h,f*p*t);const r=[t,t,t,t,t,t];x.set(r,g*p*t)}const y=new wr;y.setAttribute("position",new dr(v,m)),y.setAttribute("uv",new dr(_,f)),y.setAttribute("faceIndex",new dr(x,g)),e.push(y),r>sl&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function vl(t,e,n){const i=new Wn(t,e,n);return i.texture.mapping=Ut,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function _l(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function xl(t,e,n){const i=new Float32Array(ll),r=new Yn(0,1,0),a=new Kr({name:"SphericalGaussianBlur",defines:{n:ll,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Sl(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1});return a}function yl(){return new Kr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Sl(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1})}function bl(){return new Kr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Sl(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:Y,depthTest:!1,depthWrite:!1})}function Sl(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function wl(t){let e=new WeakMap,n=null;function i(i){if(i&&i.isTexture){const s=i.mapping,o=s===Ot||s===kt,l=s===zt||s===It;if(o||l){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let r=e.get(i);return null===n&&(n=new fl(t)),r=o?n.fromEquirectangular(i,r):n.fromCubemap(i,r),e.set(i,r),r.texture}if(e.has(i))return e.get(i).texture;{const s=i.image;if(o&&s&&s.height>0||l&&s&&r(s)){null===n&&(n=new fl(t));const r=o?n.fromEquirectangular(i):n.fromCubemap(i);return e.set(i,r),i.addEventListener("dispose",a),r.texture}return null}}}return i}function r(t){let e=0;const n=6;for(let i=0;i<n;i++)void 0!==t[i]&&e++;return e===n}function a(t){const n=t.target;n.removeEventListener("dispose",a);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}function s(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}return{get:i,dispose:s}}function Ml(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Tl(t,e,n,i){const r={},a=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const n in o.attributes)e.remove(o.attributes[n]);o.removeEventListener("dispose",s),delete r[o.id];const l=a.get(o);l&&(e.remove(l),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t,e){return!0===r[e.id]||(e.addEventListener("dispose",s),r[e.id]=!0,n.memory.geometries++),e}function l(t){const n=t.attributes;for(const r in n)e.update(n[r],34962);const i=t.morphAttributes;for(const r in i){const t=i[r];for(let n=0,i=t.length;n<i;n++)e.update(t[n],34962)}}function c(t){const n=[],i=t.index,r=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],a=t[e+2];n.push(i,r,r,a,a,i)}}else{const t=r.array;s=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const o=new(Mn(n)?mr:pr)(n,1);o.version=s;const l=a.get(t);l&&e.remove(l),a.set(t,o)}function u(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&c(t)}else c(t);return a.get(t)}return{get:o,update:l,getWireframeAttribute:u}}function Cl(t,e,n,i){const r=i.isWebGL2;let a,s,o;function l(t){a=t}function c(t){s=t.type,o=t.bytesPerElement}function u(e,i){t.drawElements(a,i,s,e*o),n.update(i,a,1)}function h(i,l,c){if(0===c)return;let u,h;if(r)u=t,h="drawElementsInstanced";else if(u=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[h](a,l,s,i*o,c),n.update(l,a,c)}this.setMode=l,this.setIndex=c,this.render=u,this.renderInstances=h}function El(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(t,e,i){switch(n.calls++,e){case 4:n.triangles+=i*(t/3);break;case 1:n.lines+=i*(t/2);break;case 3:n.lines+=i*(t-1);break;case 2:n.lines+=i*t;break;case 0:n.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",e);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function Al(t,e){return t[0]-e[0]}function Pl(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Ll(t,e,n){const i={},r=new Float32Array(8),a=new WeakMap,s=new Hn,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(l,c,u,h){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=void 0!==p?p.length:0;let f=a.get(c);if(void 0===f||f.count!==m){void 0!==f&&f.texture.dispose();const _=void 0!==c.morphAttributes.position,x=void 0!==c.morphAttributes.normal,y=void 0!==c.morphAttributes.color,b=c.morphAttributes.position||[],S=c.morphAttributes.normal||[],w=c.morphAttributes.color||[];let M=0;!0===_&&(M=1),!0===x&&(M=2),!0===y&&(M=3);let T=c.attributes.position.count*M,C=1;T>e.maxTextureSize&&(C=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const E=new Float32Array(T*C*4*m),A=new jn(E,T,C,m);A.type=te,A.needsUpdate=!0;const P=4*M;for(let R=0;R<m;R++){const D=b[R],N=S[R],z=w[R],I=T*C*4*R;for(let O=0;O<D.count;O++){const k=O*P;!0===_&&(s.fromBufferAttribute(D,O),E[I+k+0]=s.x,E[I+k+1]=s.y,E[I+k+2]=s.z,E[I+k+3]=0),!0===x&&(s.fromBufferAttribute(N,O),E[I+k+4]=s.x,E[I+k+5]=s.y,E[I+k+6]=s.z,E[I+k+7]=0),!0===y&&(s.fromBufferAttribute(z,O),E[I+k+8]=s.x,E[I+k+9]=s.y,E[I+k+10]=s.z,E[I+k+11]=4===z.itemSize?s.w:1)}}function L(){A.dispose(),a.delete(c),c.removeEventListener("dispose",L)}f={count:m,texture:A,size:new bn(T,C)},a.set(c,f),c.addEventListener("dispose",L)}let g=0;for(let U=0;U<d.length;U++)g+=d[U];const v=c.morphTargetsRelative?1:1-g;h.getUniforms().setValue(t,"morphTargetBaseInfluence",v),h.getUniforms().setValue(t,"morphTargetInfluences",d),h.getUniforms().setValue(t,"morphTargetsTexture",f.texture,n),h.getUniforms().setValue(t,"morphTargetsTextureSize",f.size)}else{const F=void 0===d?0:d.length;let B=i[c.id];if(void 0===B||B.length!==F){B=[];for(let j=0;j<F;j++)B[j]=[j,0];i[c.id]=B}for(let q=0;q<F;q++){const X=B[q];X[0]=q,X[1]=d[q]}B.sort(Pl);for(let Y=0;Y<8;Y++)Y<F&&B[Y][1]?(o[Y][0]=B[Y][0],o[Y][1]=B[Y][1]):(o[Y][0]=Number.MAX_SAFE_INTEGER,o[Y][1]=0);o.sort(Al);const G=c.morphAttributes.position,V=c.morphAttributes.normal;let H=0;for(let Z=0;Z<8;Z++){const J=o[Z],$=J[0],K=J[1];$!==Number.MAX_SAFE_INTEGER&&K?(G&&c.getAttribute("morphTarget"+Z)!==G[$]&&c.setAttribute("morphTarget"+Z,G[$]),V&&c.getAttribute("morphNormal"+Z)!==V[$]&&c.setAttribute("morphNormal"+Z,V[$]),r[Z]=K,H+=K):(G&&!0===c.hasAttribute("morphTarget"+Z)&&c.deleteAttribute("morphTarget"+Z),V&&!0===c.hasAttribute("morphNormal"+Z)&&c.deleteAttribute("morphNormal"+Z),r[Z]=0)}const W=c.morphTargetsRelative?1:1-H;h.getUniforms().setValue(t,"morphTargetBaseInfluence",W),h.getUniforms().setValue(t,"morphTargetInfluences",r)}}return{update:l}}function Rl(t,e,n,i){let r=new WeakMap;function a(t){const a=i.render.frame,s=t.geometry,l=e.get(t,s);return r.get(l)!==a&&(e.update(l),r.set(l,a)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",o)&&t.addEventListener("dispose",o),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),l}function s(){r=new WeakMap}function o(t){const e=t.target;e.removeEventListener("dispose",o),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:a,dispose:s}}const Dl=new Vn,Nl=new jn,zl=new qn,Il=new ra,Ol=[],kl=[],Ul=new Float32Array(16),Fl=new Float32Array(9),Bl=new Float32Array(4);function Gl(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=Ol[r];if(void 0===a&&(a=new Float32Array(r),Ol[r]=a),0!==e){i.toArray(a,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(a,r)}return a}function Vl(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Hl(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Wl(t,e){let n=kl[e];void 0===n&&(n=new Int32Array(e),kl[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function jl(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ql(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Vl(n,e))return;t.uniform2fv(this.addr,e),Hl(n,e)}}function Xl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Vl(n,e))return;t.uniform3fv(this.addr,e),Hl(n,e)}}function Yl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Vl(n,e))return;t.uniform4fv(this.addr,e),Hl(n,e)}}function Zl(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Vl(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Hl(n,e)}else{if(Vl(n,i))return;Bl.set(i),t.uniformMatrix2fv(this.addr,!1,Bl),Hl(n,i)}}function Jl(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Vl(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Hl(n,e)}else{if(Vl(n,i))return;Fl.set(i),t.uniformMatrix3fv(this.addr,!1,Fl),Hl(n,i)}}function $l(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Vl(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Hl(n,e)}else{if(Vl(n,i))return;Ul.set(i),t.uniformMatrix4fv(this.addr,!1,Ul),Hl(n,i)}}function Kl(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Ql(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Vl(n,e))return;t.uniform2iv(this.addr,e),Hl(n,e)}}function tc(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Vl(n,e))return;t.uniform3iv(this.addr,e),Hl(n,e)}}function ec(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Vl(n,e))return;t.uniform4iv(this.addr,e),Hl(n,e)}}function nc(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function ic(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Vl(n,e))return;t.uniform2uiv(this.addr,e),Hl(n,e)}}function rc(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Vl(n,e))return;t.uniform3uiv(this.addr,e),Hl(n,e)}}function ac(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Vl(n,e))return;t.uniform4uiv(this.addr,e),Hl(n,e)}}function sc(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(e||Dl,r)}function oc(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||zl,r)}function lc(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||Il,r)}function cc(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||Nl,r)}function uc(t){switch(t){case 5126:return jl;case 35664:return ql;case 35665:return Xl;case 35666:return Yl;case 35674:return Zl;case 35675:return Jl;case 35676:return $l;case 5124:case 35670:return Kl;case 35667:case 35671:return Ql;case 35668:case 35672:return tc;case 35669:case 35673:return ec;case 5125:return nc;case 36294:return ic;case 36295:return rc;case 36296:return ac;case 35678:case 36198:case 36298:case 36306:case 35682:return sc;case 35679:case 36299:case 36307:return oc;case 35680:case 36300:case 36308:case 36293:return lc;case 36289:case 36303:case 36311:case 36292:return cc}}function hc(t,e){t.uniform1fv(this.addr,e)}function dc(t,e){const n=Gl(e,this.size,2);t.uniform2fv(this.addr,n)}function pc(t,e){const n=Gl(e,this.size,3);t.uniform3fv(this.addr,n)}function mc(t,e){const n=Gl(e,this.size,4);t.uniform4fv(this.addr,n)}function fc(t,e){const n=Gl(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function gc(t,e){const n=Gl(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function vc(t,e){const n=Gl(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function _c(t,e){t.uniform1iv(this.addr,e)}function xc(t,e){t.uniform2iv(this.addr,e)}function yc(t,e){t.uniform3iv(this.addr,e)}function bc(t,e){t.uniform4iv(this.addr,e)}function Sc(t,e){t.uniform1uiv(this.addr,e)}function wc(t,e){t.uniform2uiv(this.addr,e)}function Mc(t,e){t.uniform3uiv(this.addr,e)}function Tc(t,e){t.uniform4uiv(this.addr,e)}function Cc(t,e,n){const i=this.cache,r=e.length,a=Wl(n,r);Vl(i,a)||(t.uniform1iv(this.addr,a),Hl(i,a));for(let s=0;s!==r;++s)n.setTexture2D(e[s]||Dl,a[s])}function Ec(t,e,n){const i=this.cache,r=e.length,a=Wl(n,r);Vl(i,a)||(t.uniform1iv(this.addr,a),Hl(i,a));for(let s=0;s!==r;++s)n.setTexture3D(e[s]||zl,a[s])}function Ac(t,e,n){const i=this.cache,r=e.length,a=Wl(n,r);Vl(i,a)||(t.uniform1iv(this.addr,a),Hl(i,a));for(let s=0;s!==r;++s)n.setTextureCube(e[s]||Il,a[s])}function Pc(t,e,n){const i=this.cache,r=e.length,a=Wl(n,r);Vl(i,a)||(t.uniform1iv(this.addr,a),Hl(i,a));for(let s=0;s!==r;++s)n.setTexture2DArray(e[s]||Nl,a[s])}function Lc(t){switch(t){case 5126:return hc;case 35664:return dc;case 35665:return pc;case 35666:return mc;case 35674:return fc;case 35675:return gc;case 35676:return vc;case 5124:case 35670:return _c;case 35667:case 35671:return xc;case 35668:case 35672:return yc;case 35669:case 35673:return bc;case 5125:return Sc;case 36294:return wc;case 36295:return Mc;case 36296:return Tc;case 35678:case 36198:case 36298:case 36306:case 35682:return Cc;case 35679:case 36299:case 36307:return Ec;case 35680:case 36300:case 36308:case 36293:return Ac;case 36289:case 36303:case 36311:case 36292:return Pc}}class Rc{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=uc(e.type)}}class Dc{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=Lc(e.type)}}class Nc{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const zc=/(\w+)(\])?(\[|\.)?/g;function Ic(t,e){t.seq.push(e),t.map[e.id]=e}function Oc(t,e,n){const i=t.name,r=i.length;zc.lastIndex=0;while(1){const a=zc.exec(i),s=zc.lastIndex;let o=a[1];const l="]"===a[2],c=a[3];if(l&&(o|=0),void 0===c||"["===c&&s+2===r){Ic(n,void 0===c?new Rc(o,t,e):new Dc(o,t,e));break}{const t=n.map;let e=t[o];void 0===e&&(e=new Nc(o),Ic(n,e)),n=e}}}class kc{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i),r=t.getUniformLocation(e,n.name);Oc(n,r,this)}}setValue(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,a=e.length;r!==a;++r){const a=e[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n}}function Uc(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let Fc=0;function Bc(t,e){const n=t.split("\n"),i=[],r=Math.max(e-6,0),a=Math.min(e+6,n.length);for(let s=r;s<a;s++){const t=s+1;i.push(`${t===e?">":" "} ${t}: ${n[s]}`)}return i.join("\n")}function Gc(t){switch(t){case Ze:return["Linear","( value )"];case Je:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Vc(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const i=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+Bc(t.getShaderSource(e),i)}return r}function Hc(t,e){const n=Gc(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Wc(t,e){let n;switch(e){case At:n="Linear";break;case Pt:n="Reinhard";break;case Lt:n="OptimizedCineon";break;case Rt:n="ACESFilmic";break;case Dt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function jc(t){const e=[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return e.filter(Yc).join("\n")}function qc(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}function Xc(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r),a=i.name;let s=1;35674===i.type&&(s=2),35675===i.type&&(s=3),35676===i.type&&(s=4),n[a]={type:i.type,location:t.getAttribLocation(e,a),locationSize:s}}return n}function Yc(t){return""!==t}function Zc(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Jc(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const $c=/^[ \t]*#include +<([\w\d./]+)>/gm;function Kc(t){return t.replace($c,Qc)}function Qc(t,e){const n=Zo[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Kc(n)}const tu=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function eu(t){return t.replace(tu,nu)}function nu(t,e,n,i){let r="";for(let a=parseInt(e);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function iu(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function ru(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===V?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===H?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===W&&(e="SHADOWMAP_TYPE_VSM"),e}function au(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case zt:case It:e="ENVMAP_TYPE_CUBE";break;case Ut:e="ENVMAP_TYPE_CUBE_UV";break}return e}function su(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case It:e="ENVMAP_MODE_REFRACTION";break}return e}function ou(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Mt:e="ENVMAP_BLENDING_MULTIPLY";break;case Tt:e="ENVMAP_BLENDING_MIX";break;case Ct:e="ENVMAP_BLENDING_ADD";break}return e}function lu(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,i=1/e,r=1/(3*Math.max(Math.pow(2,n),112));return{texelWidth:r,texelHeight:i,maxMip:n}}function cu(t,e,n,i){const r=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=ru(n),c=au(n),u=su(n),h=ou(n),d=lu(n),p=n.isWebGL2?"":jc(n),m=qc(a),f=r.createProgram();let g,v,_=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[m].filter(Yc).join("\n"),g.length>0&&(g+="\n"),v=[p,m].filter(Yc).join("\n"),v.length>0&&(v+="\n")):(g=[iu(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Yc).join("\n"),v=[p,iu(n),"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Et?"#define TONE_MAPPING":"",n.toneMapping!==Et?Zo["tonemapping_pars_fragment"]:"",n.toneMapping!==Et?Wc("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Zo["encodings_pars_fragment"],Hc("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Yc).join("\n")),s=Kc(s),s=Zc(s,n),s=Jc(s,n),o=Kc(o),o=Zc(o,n),o=Jc(o,n),s=eu(s),o=eu(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(_="#version 300 es\n",g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===on?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===on?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=_+g+s,y=_+v+o,b=Uc(r,35633,x),S=Uc(r,35632,y);if(r.attachShader(f,b),r.attachShader(f,S),void 0!==n.index0AttributeName?r.bindAttribLocation(f,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(f).trim(),e=r.getShaderInfoLog(b).trim(),n=r.getShaderInfoLog(S).trim();let i=!0,a=!0;if(!1===r.getProgramParameter(f,35714)){i=!1;const e=Vc(r,b,"vertex"),n=Vc(r,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(f,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==n||(a=!1);a&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:v}})}let w,M;return r.deleteShader(b),r.deleteShader(S),this.getUniforms=function(){return void 0===w&&(w=new kc(r,f)),w},this.getAttributes=function(){return void 0===M&&(M=Xc(r,f)),M},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.name=n.shaderName,this.id=Fc++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=b,this.fragmentShader=S,this}let uu=0;class hu{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(t);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new du(t),e.set(t,n)),n}}class du{constructor(t){this.id=uu++,this.code=t,this.usedTimes=0}}function pu(t,e,n,i,r,a,s){const o=new Ii,l=new hu,c=[],u=r.isWebGL2,h=r.logarithmicDepthBuffer,d=r.vertexTextures;let p=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(a,o,c,f,g){const v=f.fog,_=g.geometry,x=a.isMeshStandardMaterial?f.environment:null,y=(a.isMeshStandardMaterial?n:e).get(a.envMap||x),b=y&&y.mapping===Ut?y.image.height:null,S=m[a.type];null!==a.precision&&(p=r.getMaxPrecision(a.precision),p!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead."));const w=_.morphAttributes.position||_.morphAttributes.normal||_.morphAttributes.color,M=void 0!==w?w.length:0;let T,C,E,A,P=0;if(void 0!==_.morphAttributes.position&&(P=1),void 0!==_.morphAttributes.normal&&(P=2),void 0!==_.morphAttributes.color&&(P=3),S){const t=$o[S];T=t.vertexShader,C=t.fragmentShader}else T=a.vertexShader,C=a.fragmentShader,l.update(a),E=l.getVertexShaderID(a),A=l.getFragmentShaderID(a);const L=t.getRenderTarget(),R=a.alphaTest>0,D=a.clearcoat>0,N=a.iridescence>0,z={isWebGL2:u,shaderID:S,shaderName:a.type,vertexShader:T,fragmentShader:C,defines:a.defines,customVertexShaderID:E,customFragmentShaderID:A,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:!0===g.isInstancedMesh,instancingColor:!0===g.isInstancedMesh&&null!==g.instanceColor,supportsVertexTextures:d,outputEncoding:null===L?t.outputEncoding:!0===L.isXRRenderTarget?L.texture.encoding:Ze,map:!!a.map,matcap:!!a.matcap,envMap:!!y,envMapMode:y&&y.mapping,envMapCubeUVHeight:b,lightMap:!!a.lightMap,aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===tn,tangentSpaceNormalMap:a.normalMapType===Qe,decodeVideoTexture:!!a.map&&!0===a.map.isVideoTexture&&a.map.encoding===Je,clearcoat:D,clearcoatMap:D&&!!a.clearcoatMap,clearcoatRoughnessMap:D&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:D&&!!a.clearcoatNormalMap,iridescence:N,iridescenceMap:N&&!!a.iridescenceMap,iridescenceThicknessMap:N&&!!a.iridescenceThicknessMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,opaque:!1===a.transparent&&a.blending===Z,alphaMap:!!a.alphaMap,alphaTest:R,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!_.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!_.attributes.color&&4===_.attributes.color.itemSize,vertexUvs:!!a.map||!!a.bumpMap||!!a.normalMap||!!a.specularMap||!!a.alphaMap||!!a.emissiveMap||!!a.roughnessMap||!!a.metalnessMap||!!a.clearcoatMap||!!a.clearcoatRoughnessMap||!!a.clearcoatNormalMap||!!a.iridescenceMap||!!a.iridescenceThicknessMap||!!a.displacementMap||!!a.transmissionMap||!!a.thicknessMap||!!a.specularIntensityMap||!!a.specularColorMap||!!a.sheenColorMap||!!a.sheenRoughnessMap,uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.iridescenceMap||a.iridescenceThicknessMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap)&&!!a.displacementMap,fog:!!v,useFog:!0===a.fog,fogExp2:v&&v.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===g.isSkinnedMesh,morphTargets:void 0!==_.morphAttributes.position,morphNormals:void 0!==_.morphAttributes.normal,morphColors:void 0!==_.morphAttributes.color,morphTargetsCount:M,morphTextureStride:P,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:t.shadowMap.enabled&&c.length>0,shadowMapType:t.shadowMap.type,toneMapping:a.toneMapped?t.toneMapping:Et,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===X,flipSided:a.side===q,useDepthPacking:!!a.depthPacking,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()};return z}function g(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(v(n,e),_(n,e),n.push(t.outputEncoding)),n.push(e.customProgramCacheKey),n.join()}function v(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}function _(t,e){o.disableAll(),e.isWebGL2&&o.enable(0),e.supportsVertexTextures&&o.enable(1),e.instancing&&o.enable(2),e.instancingColor&&o.enable(3),e.map&&o.enable(4),e.matcap&&o.enable(5),e.envMap&&o.enable(6),e.lightMap&&o.enable(7),e.aoMap&&o.enable(8),e.emissiveMap&&o.enable(9),e.bumpMap&&o.enable(10),e.normalMap&&o.enable(11),e.objectSpaceNormalMap&&o.enable(12),e.tangentSpaceNormalMap&&o.enable(13),e.clearcoat&&o.enable(14),e.clearcoatMap&&o.enable(15),e.clearcoatRoughnessMap&&o.enable(16),e.clearcoatNormalMap&&o.enable(17),e.iridescence&&o.enable(18),e.iridescenceMap&&o.enable(19),e.iridescenceThicknessMap&&o.enable(20),e.displacementMap&&o.enable(21),e.specularMap&&o.enable(22),e.roughnessMap&&o.enable(23),e.metalnessMap&&o.enable(24),e.gradientMap&&o.enable(25),e.alphaMap&&o.enable(26),e.alphaTest&&o.enable(27),e.vertexColors&&o.enable(28),e.vertexAlphas&&o.enable(29),e.vertexUvs&&o.enable(30),e.vertexTangents&&o.enable(31),e.uvsVertexOnly&&o.enable(32),t.push(o.mask),o.disableAll(),e.fog&&o.enable(0),e.useFog&&o.enable(1),e.flatShading&&o.enable(2),e.logarithmicDepthBuffer&&o.enable(3),e.skinning&&o.enable(4),e.morphTargets&&o.enable(5),e.morphNormals&&o.enable(6),e.morphColors&&o.enable(7),e.premultipliedAlpha&&o.enable(8),e.shadowMapEnabled&&o.enable(9),e.physicallyCorrectLights&&o.enable(10),e.doubleSided&&o.enable(11),e.flipSided&&o.enable(12),e.useDepthPacking&&o.enable(13),e.dithering&&o.enable(14),e.specularIntensityMap&&o.enable(15),e.specularColorMap&&o.enable(16),e.transmission&&o.enable(17),e.transmissionMap&&o.enable(18),e.thicknessMap&&o.enable(19),e.sheen&&o.enable(20),e.sheenColorMap&&o.enable(21),e.sheenRoughnessMap&&o.enable(22),e.decodeVideoTexture&&o.enable(23),e.opaque&&o.enable(24),t.push(o.mask)}function x(t){const e=m[t.type];let n;if(e){const t=$o[e];n=Zr.clone(t.uniforms)}else n=t.uniforms;return n}function y(e,n){let i;for(let t=0,r=c.length;t<r;t++){const e=c[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new cu(t,n,e,a),c.push(i)),i}function b(t){if(0===--t.usedTimes){const e=c.indexOf(t);c[e]=c[c.length-1],c.pop(),t.destroy()}}function S(t){l.remove(t)}function w(){l.dispose()}return{getParameters:f,getProgramCacheKey:g,getUniforms:x,acquireProgram:y,releaseProgram:b,releaseShaderCache:S,programs:c,dispose:w}}function mu(){let t=new WeakMap;function e(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n}function n(e){t.delete(e)}function i(e,n,i){t.get(e)[n]=i}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function fu(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function gu(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function vu(){const t=[];let e=0;const n=[],i=[],r=[];function a(){e=0,n.length=0,i.length=0,r.length=0}function s(n,i,r,a,s,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:i,material:r,groupOrder:a,renderOrder:n.renderOrder,z:s,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=r,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=s,l.group=o),e++,l}function o(t,e,a,o,l,c){const u=s(t,e,a,o,l,c);a.transmission>0?i.push(u):!0===a.transparent?r.push(u):n.push(u)}function l(t,e,a,o,l,c){const u=s(t,e,a,o,l,c);a.transmission>0?i.unshift(u):!0===a.transparent?r.unshift(u):n.unshift(u)}function c(t,e){n.length>1&&n.sort(t||fu),i.length>1&&i.sort(e||gu),r.length>1&&r.sort(e||gu)}function u(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}}return{opaque:n,transmissive:i,transparent:r,init:a,push:o,unshift:l,finish:u,sort:c}}function _u(){let t=new WeakMap;function e(e,n){const i=t.get(e);let r;return void 0===i?(r=new vu,t.set(e,[r])):n>=i.length?(r=new vu,i.push(r)):r=i[n],r}function n(){t=new WeakMap}return{get:e,dispose:n}}function xu(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Yn,color:new On};break;case"SpotLight":n={position:new Yn,direction:new Yn,color:new On,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Yn,color:new On,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Yn,skyColor:new On,groundColor:new On};break;case"RectAreaLight":n={color:new On,position:new Yn,halfWidth:new Yn,halfHeight:new Yn};break}return t[e.id]=n,n}}}function yu(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new bn};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new bn};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new bn,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let bu=0;function Su(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function wu(t,e){const n=new xu,i=yu(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)r.probe.push(new Yn);const a=new Yn,s=new Mi,o=new Mi;function l(a,s){let o=0,l=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let u=0,h=0,d=0,p=0,m=0,f=0,g=0,v=0,_=0,x=0;a.sort(Su);const y=!0!==s?Math.PI:1;for(let t=0,e=a.length;t<e;t++){const e=a[t],s=e.color,b=e.intensity,S=e.distance,w=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=s.r*b*y,l+=s.g*b*y,c+=s.b*b*y;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],b);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[u]=n,r.directionalShadowMap[u]=w,r.directionalShadowMatrix[u]=e.shadow.matrix,f++}r.directional[u]=t,u++}else if(e.isSpotLight){const t=n.get(e);t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(s).multiplyScalar(b*y),t.distance=S,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,r.spot[d]=t;const a=e.shadow;if(e.map&&(r.spotLightMap[_]=e.map,_++,a.updateMatrices(e),e.castShadow&&x++),r.spotLightMatrix[d]=a.matrix,e.castShadow){const t=i.get(e);t.shadowBias=a.bias,t.shadowNormalBias=a.normalBias,t.shadowRadius=a.radius,t.shadowMapSize=a.mapSize,r.spotShadow[d]=t,r.spotShadowMap[d]=w,v++}d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(s).multiplyScalar(b),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[h]=n,r.pointShadowMap[h]=w,r.pointShadowMatrix[h]=e.shadow.matrix,g++}r.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(b*y),t.groundColor.copy(e.groundColor).multiplyScalar(b*y),r.hemi[m]=t,m++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=Jo.LTC_FLOAT_1,r.rectAreaLTC2=Jo.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Jo.LTC_HALF_1,r.rectAreaLTC2=Jo.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=c;const b=r.hash;b.directionalLength===u&&b.pointLength===h&&b.spotLength===d&&b.rectAreaLength===p&&b.hemiLength===m&&b.numDirectionalShadows===f&&b.numPointShadows===g&&b.numSpotShadows===v&&b.numSpotMaps===_||(r.directional.length=u,r.spot.length=d,r.rectArea.length=p,r.point.length=h,r.hemi.length=m,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=g,r.pointShadowMap.length=g,r.spotShadow.length=v,r.spotShadowMap.length=v,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=g,r.spotLightMatrix.length=v+_-x,r.spotLightMap.length=_,r.numSpotLightShadowsWithMaps=x,b.directionalLength=u,b.pointLength=h,b.spotLength=d,b.rectAreaLength=p,b.hemiLength=m,b.numDirectionalShadows=f,b.numPointShadows=g,b.numSpotShadows=v,b.numSpotMaps=_,r.version=bu++)}function c(t,e){let n=0,i=0,l=0,c=0,u=0;const h=e.matrixWorldInverse;for(let d=0,p=t.length;d<p;d++){const e=t[d];if(e.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),a.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(h),n++}else if(e.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(e.matrixWorld),a.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(h),l++}else if(e.isRectAreaLight){const t=r.rectArea[c];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),o.identity(),s.copy(e.matrixWorld),s.premultiply(h),o.extractRotation(s),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),c++}else if(e.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),i++}else if(e.isHemisphereLight){const t=r.hemi[u];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(h),u++}}}return{setup:l,setupView:c,state:r}}function Mu(t,e){const n=new wu(t,e),i=[],r=[];function a(){i.length=0,r.length=0}function s(t){i.push(t)}function o(t){r.push(t)}function l(t){n.setup(i,t)}function c(t){n.setupView(i,t)}const u={lightsArray:i,shadowsArray:r,lights:n};return{init:a,state:u,setupLights:l,setupLightsView:c,pushLight:s,pushShadow:o}}function Tu(t,e){let n=new WeakMap;function i(i,r=0){const a=n.get(i);let s;return void 0===a?(s=new Mu(t,e),n.set(i,[s])):r>=a.length?(s=new Mu(t,e),a.push(s)):s=a[r],s}function r(){n=new WeakMap}return{get:i,dispose:r}}class Cu extends lr{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=$e,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Eu extends lr{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new Yn,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const Au="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",Pu="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function Lu(t,e,n){let i=new da;const r=new bn,a=new bn,s=new Hn,o=new Cu({depthPacking:Ke}),l=new Eu,c={},u=n.maxTextureSize,h={0:q,1:j,2:X},d=new Kr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new bn},radius:{value:4}},vertexShader:Au,fragmentShader:Pu}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const m=new wr;m.setAttribute("position",new dr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new Gr(m,d),g=this;function v(n,i){const a=e.update(f);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new Wn(r.x,r.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,a,d,f,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,a,p,f,null)}function _(e,n,i,r,a,s){let u=null;const d=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(u=void 0!==d?d:!0===i.isPointLight?l:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const t=u.uuid,e=n.uuid;let i=c[t];void 0===i&&(i={},c[t]=i);let r=i[e];void 0===r&&(r=u.clone(),i[e]=r),u=r}return u.visible=n.visible,u.wireframe=n.wireframe,u.side=s===W?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:h[n.side],u.alphaMap=n.alphaMap,u.alphaTest=n.alphaTest,u.map=n.map,u.clipShadows=n.clipShadows,u.clippingPlanes=n.clippingPlanes,u.clipIntersection=n.clipIntersection,u.displacementMap=n.displacementMap,u.displacementScale=n.displacementScale,u.displacementBias=n.displacementBias,u.wireframeLinewidth=n.wireframeLinewidth,u.linewidth=n.linewidth,!0===i.isPointLight&&!0===u.isMeshDistanceMaterial&&(u.referencePosition.setFromMatrixPosition(i.matrixWorld),u.nearDistance=r,u.farDistance=a),u}function x(n,r,a,s,o){if(!1===n.visible)return;const l=n.layers.test(r.layers);if(l&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===W)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],u=r[c.materialIndex];if(u&&u.visible){const e=_(n,u,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,c)}}}else if(r.visible){const e=_(n,r,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)x(c[t],r,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=V,this.render=function(e,n,o){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),d=t.state;d.setBlending(Y),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let p=0,m=e.length;p<m;p++){const l=e[p],c=l.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;r.copy(c.mapSize);const h=c.getFrameExtents();if(r.multiply(h),a.copy(c.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(a.x=Math.floor(u/h.x),r.x=a.x*h.x,c.mapSize.x=a.x),r.y>u&&(a.y=Math.floor(u/h.y),r.y=a.y*h.y,c.mapSize.y=a.y)),null===c.map){const t=this.type!==W?{minFilter:Vt,magFilter:Vt}:{};c.map=new Wn(r.x,r.y,t),c.map.texture.name=l.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const m=c.getViewportCount();for(let t=0;t<m;t++){const e=c.getViewport(t);s.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),d.viewport(s),c.updateMatrices(l,t),i=c.getFrustum(),x(n,o,c.camera,l,this.type)}!0!==c.isPointLightShadow&&this.type===W&&v(c,o),c.needsUpdate=!1}g.needsUpdate=!1,t.setRenderTarget(l,c,h)}}function Ru(t,e,n){const i=n.isWebGL2;function r(){let e=!1;const n=new Hn;let i=null;const r=new Hn(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,a,s,o){!0===o&&(e*=s,i*=s,a*=s),n.set(e,i,a,s),!1===r.equals(n)&&(t.clearColor(e,i,a,s),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}}function a(){let e=!1,n=null,i=null,r=null;return{setTest:function(t){t?Mt(2929):Tt(2929)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){switch(e){case gt:t.depthFunc(512);break;case vt:t.depthFunc(519);break;case _t:t.depthFunc(513);break;case xt:t.depthFunc(515);break;case yt:t.depthFunc(514);break;case bt:t.depthFunc(518);break;case St:t.depthFunc(516);break;case wt:t.depthFunc(517);break;default:t.depthFunc(515)}i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}}function s(){let e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(t){e||(t?Mt(2960):Tt(2960))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,s){i===e&&r===n&&a===s||(t.stencilFunc(e,n,s),i=e,r=n,a=s)},setOp:function(e,n,i){s===e&&o===n&&l===i||(t.stencilOp(e,n,i),s=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null}}}const o=new r,l=new a,c=new s,u=new WeakMap,h=new WeakMap;let d={},p={},m=new WeakMap,f=[],g=null,v=!1,_=null,x=null,y=null,b=null,S=null,w=null,M=null,T=!1,C=null,E=null,A=null,P=null,L=null;const R=t.getParameter(35661);let D=!1,N=0;const z=t.getParameter(7938);-1!==z.indexOf("WebGL")?(N=parseFloat(/^WebGL (\d)/.exec(z)[1]),D=N>=1):-1!==z.indexOf("OpenGL ES")&&(N=parseFloat(/^OpenGL ES (\d)/.exec(z)[1]),D=N>=2);let I=null,O={};const k=t.getParameter(3088),U=t.getParameter(2978),V=(new Hn).fromArray(k),H=(new Hn).fromArray(U);function W(e,n,i){const r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let s=0;s<i;s++)t.texImage2D(n+s,0,6408,1,1,0,6408,5121,r);return a}const j={};function Mt(e){!0!==d[e]&&(t.enable(e),d[e]=!0)}function Tt(e){!1!==d[e]&&(t.disable(e),d[e]=!1)}function Ct(e,n){return p[e]!==n&&(t.bindFramebuffer(e,n),p[e]=n,i&&(36009===e&&(p[36160]=n),36160===e&&(p[36009]=n)),!0)}function Et(i,r){let a=f,s=!1;if(i)if(a=m.get(r),void 0===a&&(a=[],m.set(r,a)),i.isWebGLMultipleRenderTargets){const t=i.texture;if(a.length!==t.length||36064!==a[0]){for(let e=0,n=t.length;e<n;e++)a[e]=36064+e;a.length=t.length,s=!0}}else 36064!==a[0]&&(a[0]=36064,s=!0);else 1029!==a[0]&&(a[0]=1029,s=!0);s&&(n.isWebGL2?t.drawBuffers(a):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))}function At(e){return g!==e&&(t.useProgram(e),g=e,!0)}j[3553]=W(3553,3553,1),j[34067]=W(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Mt(2929),l.setFunc(xt),Nt(!1),zt(B),Mt(2884),Rt(Y);const Pt={[tt]:32774,[et]:32778,[nt]:32779};if(i)Pt[it]=32775,Pt[rt]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(Pt[it]=t.MIN_EXT,Pt[rt]=t.MAX_EXT)}const Lt={[at]:0,[st]:1,[ot]:768,[ct]:770,[ft]:776,[pt]:774,[ht]:772,[lt]:769,[ut]:771,[mt]:775,[dt]:773};function Rt(e,n,i,r,a,s,o,l){if(e!==Y){if(!1===v&&(Mt(3042),v=!0),e===Q)a=a||n,s=s||i,o=o||r,n===x&&a===S||(t.blendEquationSeparate(Pt[n],Pt[a]),x=n,S=a),i===y&&r===b&&s===w&&o===M||(t.blendFuncSeparate(Lt[i],Lt[r],Lt[s],Lt[o]),y=i,b=r,w=s,M=o),_=e,T=!1;else if(e!==_||l!==T){if(x===tt&&S===tt||(t.blendEquation(32774),x=tt,S=tt),l)switch(e){case Z:t.blendFuncSeparate(1,771,1,771);break;case J:t.blendFunc(1,1);break;case $:t.blendFuncSeparate(0,769,0,1);break;case K:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Z:t.blendFuncSeparate(770,771,1,771);break;case J:t.blendFunc(770,1);break;case $:t.blendFuncSeparate(0,769,0,1);break;case K:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}y=null,b=null,w=null,M=null,_=e,T=l}}else!0===v&&(Tt(3042),v=!1)}function Dt(t,e){t.side===X?Tt(2884):Mt(2884);let n=t.side===q;e&&(n=!n),Nt(n),t.blending===Z&&!1===t.transparent?Rt(Y):Rt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),l.setFunc(t.depthFunc),l.setTest(t.depthTest),l.setMask(t.depthWrite),o.setMask(t.colorWrite);const i=t.stencilWrite;c.setTest(i),i&&(c.setMask(t.stencilWriteMask),c.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),c.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Ot(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?Mt(32926):Tt(32926)}function Nt(e){C!==e&&(e?t.frontFace(2304):t.frontFace(2305),C=e)}function zt(e){e!==F?(Mt(2884),e!==E&&(e===B?t.cullFace(1029):e===G?t.cullFace(1028):t.cullFace(1032))):Tt(2884),E=e}function It(e){e!==A&&(D&&t.lineWidth(e),A=e)}function Ot(e,n,i){e?(Mt(32823),P===n&&L===i||(t.polygonOffset(n,i),P=n,L=i)):Tt(32823)}function kt(t){t?Mt(3089):Tt(3089)}function Ut(e){void 0===e&&(e=33984+R-1),I!==e&&(t.activeTexture(e),I=e)}function Ft(e,n,i){void 0===i&&(i=null===I?33984+R-1:I);let r=O[i];void 0===r&&(r={type:void 0,texture:void 0},O[i]=r),r.type===e&&r.texture===n||(I!==i&&(t.activeTexture(i),I=i),t.bindTexture(e,n||j[e]),r.type=e,r.texture=n)}function Bt(){const e=O[I];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)}function Gt(){try{t.compressedTexImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Vt(){try{t.compressedTexImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ht(){try{t.texSubImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Wt(){try{t.texSubImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function jt(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function qt(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Xt(){try{t.texStorage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Yt(){try{t.texStorage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Zt(){try{t.texImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Jt(){try{t.texImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function $t(e){!1===V.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),V.copy(e))}function Kt(e){!1===H.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),H.copy(e))}function Qt(e,n){let i=h.get(n);void 0===i&&(i=new WeakMap,h.set(n,i));let r=i.get(e);void 0===r&&(r=t.getUniformBlockIndex(n,e.name),i.set(e,r))}function te(e,n){const i=h.get(n),r=i.get(e);u.get(e)!==r&&(t.uniformBlockBinding(n,r,e.__bindingPointIndex),u.set(e,r))}function ee(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===i&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),d={},I=null,O={},p={},m=new WeakMap,f=[],g=null,v=!1,_=null,x=null,y=null,b=null,S=null,w=null,M=null,T=!1,C=null,E=null,A=null,P=null,L=null,V.set(0,0,t.canvas.width,t.canvas.height),H.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Mt,disable:Tt,bindFramebuffer:Ct,drawBuffers:Et,useProgram:At,setBlending:Rt,setMaterial:Dt,setFlipSided:Nt,setCullFace:zt,setLineWidth:It,setPolygonOffset:Ot,setScissorTest:kt,activeTexture:Ut,bindTexture:Ft,unbindTexture:Bt,compressedTexImage2D:Gt,compressedTexImage3D:Vt,texImage2D:Zt,texImage3D:Jt,updateUBOMapping:Qt,uniformBlockBinding:te,texStorage2D:Xt,texStorage3D:Yt,texSubImage2D:Ht,texSubImage3D:Wt,compressedTexSubImage2D:jt,compressedTexSubImage3D:qt,scissor:$t,viewport:Kt,reset:ee}}function Du(t,e,n,i,r,a,s){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,h=r.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p="undefined"!==typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let f;const g=new WeakMap;let v=!1;try{v="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(rt){}function _(t,e){return v?new OffscreenCanvas(t,e):Tn("canvas")}function x(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?_n:Math.floor,a=i(r*t.width),s=i(r*t.height);void 0===f&&(f=_(a,s));const o=n?_(a,s):f;o.width=a,o.height=s;const l=o.getContext("2d");return l.drawImage(t,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+s+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function y(t){return vn(t.width)&&vn(t.height)}function b(t){return!o&&(t.wrapS!==Bt||t.wrapT!==Bt||t.minFilter!==Vt&&t.minFilter!==jt)}function S(t,e){return t.generateMipmaps&&e&&t.minFilter!==Vt&&t.minFilter!==jt}function w(e){t.generateMipmap(e)}function M(n,i,r,a,s=!1){if(!1===o)return i;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=i;return 6403===i&&(5126===r&&(l=33326),5131===r&&(l=33325),5121===r&&(l=33321)),33319===i&&(5126===r&&(l=33328),5131===r&&(l=33327),5121===r&&(l=33323)),6408===i&&(5126===r&&(l=34836),5131===r&&(l=34842),5121===r&&(l=a===Je&&!1===s?35907:32856),32819===r&&(l=32854),32820===r&&(l=32855)),33325!==l&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||e.get("EXT_color_buffer_float"),l}function T(t,e,n){return!0===S(t,n)||t.isFramebufferTexture&&t.minFilter!==Vt&&t.minFilter!==jt?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function C(t){return t===Vt||t===Ht||t===Wt?9728:9729}function E(t){const e=t.target;e.removeEventListener("dispose",E),P(e),e.isVideoTexture&&m.delete(e)}function A(t){const e=t.target;e.removeEventListener("dispose",A),R(e)}function P(t){const e=i.get(t);if(void 0===e.__webglInit)return;const n=t.source,r=g.get(n);if(r){const i=r[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&L(t),0===Object.keys(r).length&&g.delete(n)}i.remove(t)}function L(e){const n=i.get(e);t.deleteTexture(n.__webglTexture);const r=e.source,a=g.get(r);delete a[n.__cacheKey],s.memory.textures--}function R(e){const n=e.texture,r=i.get(e),a=i.get(n);if(void 0!==a.__webglTexture&&(t.deleteTexture(a.__webglTexture),s.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let i=0;i<6;i++)t.deleteFramebuffer(r.__webglFramebuffer[i]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[i]);else{if(t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let e=0;e<r.__webglColorRenderbuffer.length;e++)r.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(r.__webglColorRenderbuffer[e]);r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let o=0,l=n.length;o<l;o++){const e=i.get(n[o]);e.__webglTexture&&(t.deleteTexture(e.__webglTexture),s.memory.textures--),i.remove(n[o])}i.remove(n),i.remove(e)}let D=0;function N(){D=0}function z(){const t=D;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),D+=1,t}function I(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.encoding),e.join()}function O(t,e){const r=i.get(t);if(t.isVideoTexture&&nt(t),!1===t.isRenderTargetTexture&&t.version>0&&r.__version!==t.version){const n=t.image;if(null===n)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==n.complete)return void W(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(3553,r.__webglTexture,33984+e)}function k(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?W(r,t,e):n.bindTexture(35866,r.__webglTexture,33984+e)}function U(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?W(r,t,e):n.bindTexture(32879,r.__webglTexture,33984+e)}function F(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?j(r,t,e):n.bindTexture(34067,r.__webglTexture,33984+e)}const B={[Ft]:10497,[Bt]:33071,[Gt]:33648},G={[Vt]:9728,[Ht]:9984,[Wt]:9986,[jt]:9729,[qt]:9985,[Xt]:9987};function V(n,a,s){if(s?(t.texParameteri(n,10242,B[a.wrapS]),t.texParameteri(n,10243,B[a.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,B[a.wrapR]),t.texParameteri(n,10240,G[a.magFilter]),t.texParameteri(n,10241,G[a.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),a.wrapS===Bt&&a.wrapT===Bt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,C(a.magFilter)),t.texParameteri(n,10241,C(a.minFilter)),a.minFilter!==Vt&&a.minFilter!==jt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const s=e.get("EXT_texture_filter_anisotropic");if(a.type===te&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&a.type===ee&&!1===e.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(t.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function H(e,n){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",E));const r=n.source;let a=g.get(r);void 0===a&&(a={},g.set(r,a));const o=I(n);if(o!==e.__cacheKey){void 0===a[o]&&(a[o]={texture:t.createTexture(),usedTimes:0},s.memory.textures++,i=!0),a[o].usedTimes++;const r=a[e.__cacheKey];void 0!==r&&(a[e.__cacheKey].usedTimes--,0===r.usedTimes&&L(n)),e.__cacheKey=o,e.__webglTexture=a[o].texture}return i}function W(e,r,s){let l=3553;(r.isDataArrayTexture||r.isCompressedArrayTexture)&&(l=35866),r.isData3DTexture&&(l=32879);const c=H(e,r),h=r.source;n.bindTexture(l,e.__webglTexture,33984+s);const d=i.get(h);if(h.version!==d.__version||!0===c){n.activeTexture(33984+s),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const e=b(r)&&!1===y(r.image);let i=x(r.image,e,!1,u);i=it(r,i);const p=y(i)||o,m=a.convert(r.format,r.encoding);let f,g=a.convert(r.type),v=M(r.internalFormat,m,g,r.encoding,r.isVideoTexture);V(l,r,p);const _=r.mipmaps,C=o&&!0!==r.isVideoTexture,E=void 0===d.__version||!0===c,A=T(r,i,p);if(r.isDepthTexture)v=6402,o?v=r.type===te?36012:r.type===Qt?33190:r.type===re?35056:33189:r.type===te&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===ue&&6402===v&&r.type!==$t&&r.type!==Qt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Qt,g=a.convert(r.type)),r.format===he&&6402===v&&(v=34041,r.type!==re&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=re,g=a.convert(r.type))),E&&(C?n.texStorage2D(3553,1,v,i.width,i.height):n.texImage2D(3553,0,v,i.width,i.height,0,m,g,null));else if(r.isDataTexture)if(_.length>0&&p){C&&E&&n.texStorage2D(3553,A,v,_[0].width,_[0].height);for(let t=0,e=_.length;t<e;t++)f=_[t],C?n.texSubImage2D(3553,t,0,0,f.width,f.height,m,g,f.data):n.texImage2D(3553,t,v,f.width,f.height,0,m,g,f.data);r.generateMipmaps=!1}else C?(E&&n.texStorage2D(3553,A,v,i.width,i.height),n.texSubImage2D(3553,0,0,0,i.width,i.height,m,g,i.data)):n.texImage2D(3553,0,v,i.width,i.height,0,m,g,i.data);else if(r.isCompressedTexture)if(r.isCompressedArrayTexture){C&&E&&n.texStorage3D(35866,A,v,_[0].width,_[0].height,i.depth);for(let t=0,e=_.length;t<e;t++)f=_[t],r.format!==oe?null!==m?C?n.compressedTexSubImage3D(35866,t,0,0,0,f.width,f.height,i.depth,m,f.data,0,0):n.compressedTexImage3D(35866,t,v,f.width,f.height,i.depth,0,f.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?n.texSubImage3D(35866,t,0,0,0,f.width,f.height,i.depth,m,g,f.data):n.texImage3D(35866,t,v,f.width,f.height,i.depth,0,m,g,f.data)}else{C&&E&&n.texStorage2D(3553,A,v,_[0].width,_[0].height);for(let t=0,e=_.length;t<e;t++)f=_[t],r.format!==oe?null!==m?C?n.compressedTexSubImage2D(3553,t,0,0,f.width,f.height,m,f.data):n.compressedTexImage2D(3553,t,v,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?n.texSubImage2D(3553,t,0,0,f.width,f.height,m,g,f.data):n.texImage2D(3553,t,v,f.width,f.height,0,m,g,f.data)}else if(r.isDataArrayTexture)C?(E&&n.texStorage3D(35866,A,v,i.width,i.height,i.depth),n.texSubImage3D(35866,0,0,0,0,i.width,i.height,i.depth,m,g,i.data)):n.texImage3D(35866,0,v,i.width,i.height,i.depth,0,m,g,i.data);else if(r.isData3DTexture)C?(E&&n.texStorage3D(32879,A,v,i.width,i.height,i.depth),n.texSubImage3D(32879,0,0,0,0,i.width,i.height,i.depth,m,g,i.data)):n.texImage3D(32879,0,v,i.width,i.height,i.depth,0,m,g,i.data);else if(r.isFramebufferTexture){if(E)if(C)n.texStorage2D(3553,A,v,i.width,i.height);else{let t=i.width,e=i.height;for(let i=0;i<A;i++)n.texImage2D(3553,i,v,t,e,0,m,g,null),t>>=1,e>>=1}}else if(_.length>0&&p){C&&E&&n.texStorage2D(3553,A,v,_[0].width,_[0].height);for(let t=0,e=_.length;t<e;t++)f=_[t],C?n.texSubImage2D(3553,t,0,0,m,g,f):n.texImage2D(3553,t,v,m,g,f);r.generateMipmaps=!1}else C?(E&&n.texStorage2D(3553,A,v,i.width,i.height),n.texSubImage2D(3553,0,0,0,m,g,i)):n.texImage2D(3553,0,v,m,g,i);S(r,p)&&w(l),d.__version=h.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}function j(e,r,s){if(6!==r.image.length)return;const l=H(e,r),u=r.source;n.bindTexture(34067,e.__webglTexture,33984+s);const h=i.get(u);if(u.version!==h.__version||!0===l){n.activeTexture(33984+s),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const e=r.isCompressedTexture||r.image[0].isCompressedTexture,i=r.image[0]&&r.image[0].isDataTexture,d=[];for(let t=0;t<6;t++)d[t]=e||i?i?r.image[t].image:r.image[t]:x(r.image[t],!1,!0,c),d[t]=it(r,d[t]);const p=d[0],m=y(p)||o,f=a.convert(r.format,r.encoding),g=a.convert(r.type),v=M(r.internalFormat,f,g,r.encoding),_=o&&!0!==r.isVideoTexture,b=void 0===h.__version||!0===l;let C,E=T(r,p,m);if(V(34067,r,m),e){_&&b&&n.texStorage2D(34067,E,v,p.width,p.height);for(let t=0;t<6;t++){C=d[t].mipmaps;for(let e=0;e<C.length;e++){const i=C[e];r.format!==oe?null!==f?_?n.compressedTexSubImage2D(34069+t,e,0,0,i.width,i.height,f,i.data):n.compressedTexImage2D(34069+t,e,v,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):_?n.texSubImage2D(34069+t,e,0,0,i.width,i.height,f,g,i.data):n.texImage2D(34069+t,e,v,i.width,i.height,0,f,g,i.data)}}}else{C=r.mipmaps,_&&b&&(C.length>0&&E++,n.texStorage2D(34067,E,v,d[0].width,d[0].height));for(let t=0;t<6;t++)if(i){_?n.texSubImage2D(34069+t,0,0,0,d[t].width,d[t].height,f,g,d[t].data):n.texImage2D(34069+t,0,v,d[t].width,d[t].height,0,f,g,d[t].data);for(let e=0;e<C.length;e++){const i=C[e],r=i.image[t].image;_?n.texSubImage2D(34069+t,e+1,0,0,r.width,r.height,f,g,r.data):n.texImage2D(34069+t,e+1,v,r.width,r.height,0,f,g,r.data)}}else{_?n.texSubImage2D(34069+t,0,0,0,f,g,d[t]):n.texImage2D(34069+t,0,v,f,g,d[t]);for(let e=0;e<C.length;e++){const i=C[e];_?n.texSubImage2D(34069+t,e+1,0,0,f,g,i.image[t]):n.texImage2D(34069+t,e+1,v,f,g,i.image[t])}}}S(r,m)&&w(34067),h.__version=u.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}function q(e,r,s,o,l){const c=a.convert(s.format,s.encoding),u=a.convert(s.type),h=M(s.internalFormat,c,u,s.encoding),p=i.get(r);p.__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,h,r.width,r.height,r.depth,0,c,u,null):n.texImage2D(l,0,h,r.width,r.height,0,c,u,null)),n.bindFramebuffer(36160,e),et(r)?d.framebufferTexture2DMultisampleEXT(36160,o,l,i.get(s).__webglTexture,0,tt(r)):(3553===l||l>=34069&&l<=34074)&&t.framebufferTexture2D(36160,o,l,i.get(s).__webglTexture,0),n.bindFramebuffer(36160,null)}function X(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i||et(n)){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===te?r=36012:e.type===Qt&&(r=33190));const i=tt(n);et(n)?d.renderbufferStorageMultisampleEXT(36161,i,r,n.width,n.height):t.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else t.renderbufferStorage(36161,r,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){const r=tt(n);i&&!1===et(n)?t.renderbufferStorageMultisample(36161,r,35056,n.width,n.height):et(n)?d.renderbufferStorageMultisampleEXT(36161,r,35056,n.width,n.height):t.renderbufferStorage(36161,34041,n.width,n.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let r=0;r<e.length;r++){const s=e[r],o=a.convert(s.format,s.encoding),l=a.convert(s.type),c=M(s.internalFormat,o,l,s.encoding),u=tt(n);i&&!1===et(n)?t.renderbufferStorageMultisample(36161,u,c,n.width,n.height):et(n)?d.renderbufferStorageMultisampleEXT(36161,u,c,n.width,n.height):t.renderbufferStorage(36161,c,n.width,n.height)}}t.bindRenderbuffer(36161,null)}function Y(e,r){const a=r&&r.isWebGLCubeRenderTarget;if(a)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),O(r.depthTexture,0);const s=i.get(r.depthTexture).__webglTexture,o=tt(r);if(r.depthTexture.format===ue)et(r)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,o):t.framebufferTexture2D(36160,36096,3553,s,0);else{if(r.depthTexture.format!==he)throw new Error("Unknown depthTexture format");et(r)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,o):t.framebufferTexture2D(36160,33306,3553,s,0)}}function Z(e){const r=i.get(e),a=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");Y(r.__webglFramebuffer,e)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=t.createRenderbuffer(),X(r.__webglDepthbuffer[i],e,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),X(r.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function J(t,e,n){const r=i.get(t);void 0!==e&&q(r.__webglFramebuffer,t,t.texture,36064,3553),void 0!==n&&Z(t)}function $(e){const l=e.texture,c=i.get(e),u=i.get(l);e.addEventListener("dispose",A),!0!==e.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=t.createTexture()),u.__version=l.version,s.memory.textures++);const h=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=y(e)||o;if(h){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else{if(c.__webglFramebuffer=t.createFramebuffer(),d)if(r.drawBuffers){const n=e.texture;for(let e=0,r=n.length;e<r;e++){const r=i.get(n[e]);void 0===r.__webglTexture&&(r.__webglTexture=t.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&e.samples>0&&!1===et(e)){const i=d?l:[l];c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=[],n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer);for(let n=0;n<i.length;n++){const r=i[n];c.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(36161,c.__webglColorRenderbuffer[n]);const s=a.convert(r.format,r.encoding),o=a.convert(r.type),l=M(r.internalFormat,s,o,r.encoding,!0===e.isXRRenderTarget),u=tt(e);t.renderbufferStorageMultisample(36161,u,l,e.width,e.height),t.framebufferRenderbuffer(36160,36064+n,36161,c.__webglColorRenderbuffer[n])}t.bindRenderbuffer(36161,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),X(c.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}}if(h){n.bindTexture(34067,u.__webglTexture),V(34067,l,p);for(let t=0;t<6;t++)q(c.__webglFramebuffer[t],e,l,36064,34069+t);S(l,p)&&w(34067),n.unbindTexture()}else if(d){const t=e.texture;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=i.get(a);n.bindTexture(3553,s.__webglTexture),V(3553,a,p),q(c.__webglFramebuffer,e,a,36064+r,3553),S(a,p)&&w(3553)}n.unbindTexture()}else{let t=3553;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(o?t=e.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(t,u.__webglTexture),V(t,l,p),q(c.__webglFramebuffer,e,l,36064,t),S(l,p)&&w(t),n.unbindTexture()}e.depthBuffer&&Z(e)}function K(t){const e=y(t)||o,r=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let a=0,s=r.length;a<s;a++){const s=r[a];if(S(s,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,r=i.get(s).__webglTexture;n.bindTexture(e,r),w(e),n.unbindTexture()}}}function Q(e){if(o&&e.samples>0&&!1===et(e)){const r=e.isWebGLMultipleRenderTargets?e.texture:[e.texture],a=e.width,s=e.height;let o=16384;const l=[],c=e.stencilBuffer?33306:36096,u=i.get(e),h=!0===e.isWebGLMultipleRenderTargets;if(h)for(let e=0;e<r.length;e++)n.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,null),n.bindFramebuffer(36160,u.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,null,0);n.bindFramebuffer(36008,u.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,u.__webglFramebuffer);for(let n=0;n<r.length;n++){l.push(36064+n),e.depthBuffer&&l.push(c);const d=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;if(!1===d&&(e.depthBuffer&&(o|=256),e.stencilBuffer&&(o|=1024)),h&&t.framebufferRenderbuffer(36008,36064,36161,u.__webglColorRenderbuffer[n]),!0===d&&(t.invalidateFramebuffer(36008,[c]),t.invalidateFramebuffer(36009,[c])),h){const e=i.get(r[n]).__webglTexture;t.framebufferTexture2D(36009,36064,3553,e,0)}t.blitFramebuffer(0,0,a,s,0,0,a,s,o,9728),p&&t.invalidateFramebuffer(36008,l)}if(n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),h)for(let e=0;e<r.length;e++){n.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,u.__webglColorRenderbuffer[e]);const a=i.get(r[e]).__webglTexture;n.bindFramebuffer(36160,u.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,a,0)}n.bindFramebuffer(36009,u.__webglMultisampledFramebuffer)}}function tt(t){return Math.min(h,t.samples)}function et(t){const n=i.get(t);return o&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function nt(t){const e=s.render.frame;m.get(t)!==e&&(m.set(t,e),t.update())}function it(t,n){const i=t.encoding,r=t.format,a=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===ln||i!==Ze&&(i===Je?!1===o?!0===e.has("EXT_sRGB")&&r===oe?(t.format=ln,t.minFilter=jt,t.generateMipmaps=!1):n=Un.sRGBToLinear(n):r===oe&&a===Yt||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",i)),n}this.allocateTextureUnit=z,this.resetTextureUnits=N,this.setTexture2D=O,this.setTexture2DArray=k,this.setTexture3D=U,this.setTextureCube=F,this.rebindTextures=J,this.setupRenderTarget=$,this.updateRenderTargetMipmap=K,this.updateMultisampleRenderTarget=Q,this.setupDepthRenderbuffer=Z,this.setupFrameBufferTexture=q,this.useMultisampledRTT=et}function Nu(t,e,n){const i=n.isWebGL2;function r(n,r=null){let a;if(n===Yt)return 5121;if(n===ne)return 32819;if(n===ie)return 32820;if(n===Zt)return 5120;if(n===Jt)return 5122;if(n===$t)return 5123;if(n===Kt)return 5124;if(n===Qt)return 5125;if(n===te)return 5126;if(n===ee)return i?5131:(a=e.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(n===ae)return 6406;if(n===oe)return 6408;if(n===le)return 6409;if(n===ce)return 6410;if(n===ue)return 6402;if(n===he)return 34041;if(n===se)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===ln)return a=e.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(n===de)return 6403;if(n===pe)return 36244;if(n===me)return 33319;if(n===fe)return 33320;if(n===ge)return 36249;if(n===ve||n===_e||n===xe||n===ye)if(r===Je){if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(n===ve)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===_e)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===xe)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ye)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=e.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(n===ve)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===_e)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===xe)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ye)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===be||n===Se||n===we||n===Me){if(a=e.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(n===be)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Se)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===we)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Me)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===Te)return a=e.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===Ce||n===Ee){if(a=e.get("WEBGL_compressed_texture_etc"),null===a)return null;if(n===Ce)return r===Je?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===Ee)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(n===Ae||n===Pe||n===Le||n===Re||n===De||n===Ne||n===ze||n===Ie||n===Oe||n===ke||n===Ue||n===Fe||n===Be||n===Ge){if(a=e.get("WEBGL_compressed_texture_astc"),null===a)return null;if(n===Ae)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Pe)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Le)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Re)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===De)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ne)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===ze)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Ie)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Oe)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===ke)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ue)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Fe)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Be)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Ge)return r===Je?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Ve){if(a=e.get("EXT_texture_compression_bptc"),null===a)return null;if(n===Ve)return r===Je?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}return n===re?i?34042:(a=e.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==t[n]?t[n]:null}return{convert:r}}class zu extends ta{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Iu extends Zi{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Ou={type:"move"};class ku{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Iu,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Iu,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Yn,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Yn),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Iu,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Yn,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Yn),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){a=!0;for(const a of t.hand.values()){const t=e.getJointPose(a,n),i=this._getHandJoint(l,a);null!==t&&(i.matrix.fromArray(t.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=t.radius),i.visible=null!==t}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],s=i.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&s>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&s<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==s&&(i=e.getPose(t.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(Ou)))}return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new Iu;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Uu extends Vn{constructor(t,e,n,i,r,a,s,o,l,c){if(c=void 0!==c?c:ue,c!==ue&&c!==he)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===ue&&(n=Qt),void 0===n&&c===he&&(n=re),super(null,i,r,a,s,o,c,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==s?s:Vt,this.minFilter=void 0!==o?o:Vt,this.flipY=!1,this.generateMipmaps=!1}}class Fu extends cn{constructor(t,e){super();const n=this;let i=null,r=1,a=null,s="local-floor",o=null,l=null,c=null,u=null,h=null,d=null;const p=e.getContextAttributes();let m=null,f=null;const g=[],v=[],_=new Set,x=new Map,y=new ta;y.layers.enable(1),y.viewport=new Hn;const b=new ta;b.layers.enable(2),b.viewport=new Hn;const S=[y,b],w=new zu;w.layers.enable(1),w.layers.enable(2);let M=null,T=null;function C(t){const e=v.indexOf(t.inputSource);if(-1===e)return;const n=g[e];void 0!==n&&n.dispatchEvent({type:t.type,data:t.inputSource})}function E(){i.removeEventListener("select",C),i.removeEventListener("selectstart",C),i.removeEventListener("selectend",C),i.removeEventListener("squeeze",C),i.removeEventListener("squeezestart",C),i.removeEventListener("squeezeend",C),i.removeEventListener("end",E),i.removeEventListener("inputsourceschange",A);for(let t=0;t<g.length;t++){const e=v[t];null!==e&&(v[t]=null,g[t].disconnect(e))}M=null,T=null,t.setRenderTarget(m),h=null,u=null,c=null,i=null,f=null,I.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function A(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=v.indexOf(n);i>=0&&(v[i]=null,g[i].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let i=v.indexOf(n);if(-1===i){for(let t=0;t<g.length;t++){if(t>=v.length){v.push(n),i=t;break}if(null===v[t]){v[t]=n,i=t;break}}if(-1===i)break}const r=g[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=g[t];return void 0===e&&(e=new ku,g[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=g[t];return void 0===e&&(e=new ku,g[t]=e),e.getGripSpace()},this.getHand=function(t){let e=g[t];return void 0===e&&(e=new ku,g[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||a},this.setReferenceSpace=function(t){o=t},this.getBaseLayer=function(){return null!==u?u:h},this.getBinding=function(){return c},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(l){if(i=l,null!==i){if(m=t.getRenderTarget(),i.addEventListener("select",C),i.addEventListener("selectstart",C),i.addEventListener("selectend",C),i.addEventListener("squeeze",C),i.addEventListener("squeezestart",C),i.addEventListener("squeezeend",C),i.addEventListener("end",E),i.addEventListener("inputsourceschange",A),!0!==p.xrCompatible&&await e.makeXRCompatible(),void 0===i.renderState.layers||!1===t.capabilities.isWebGL2){const n={antialias:void 0!==i.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};h=new XRWebGLLayer(i,e,n),i.updateRenderState({baseLayer:h}),f=new Wn(h.framebufferWidth,h.framebufferHeight,{format:oe,type:Yt,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let n=null,a=null,s=null;p.depth&&(s=p.stencil?35056:33190,n=p.stencil?he:ue,a=p.stencil?re:Qt);const o={colorFormat:32856,depthFormat:s,scaleFactor:r};c=new XRWebGLBinding(i,e),u=c.createProjectionLayer(o),i.updateRenderState({layers:[u]}),f=new Wn(u.textureWidth,u.textureHeight,{format:oe,type:Yt,depthTexture:new Uu(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});const l=t.properties.get(f);l.__ignoreDepthValues=u.ignoreDepthValues}f.isXRRenderTarget=!0,this.setFoveation(1),o=null,a=await i.requestReferenceSpace(s),I.setContext(i),I.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const P=new Yn,L=new Yn;function R(t,e,n){P.setFromMatrixPosition(e.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const i=P.distanceTo(L),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],u=(r[8]-1)/r[0],h=(a[8]+1)/a[0],d=s*u,p=s*h,m=i/(-u+h),f=m*-u;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+m,v=o+m,_=d-f,x=p+(i-f),y=l*o/v*g,b=c*o/v*g;t.projectionMatrix.makePerspective(_,x,y,b,g,v)}function D(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===i)return;w.near=b.near=y.near=t.near,w.far=b.far=y.far=t.far,M===w.near&&T===w.far||(i.updateRenderState({depthNear:w.near,depthFar:w.far}),M=w.near,T=w.far);const e=t.parent,n=w.cameras;D(w,e);for(let i=0;i<n.length;i++)D(n[i],e);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),t.matrix.copy(w.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const r=t.children;for(let i=0,a=r.length;i<a;i++)r[i].updateMatrixWorld(!0);2===n.length?R(w,y,b):w.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==h?h.fixedFoveation:void 0},this.setFoveation=function(t){null!==u&&(u.fixedFoveation=t),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=t)},this.getPlanes=function(){return _};let N=null;function z(e,i){if(l=i.getViewerPose(o||a),d=i,null!==l){const e=l.views;null!==h&&(t.setRenderTargetFramebuffer(f,h.framebuffer),t.setRenderTarget(f));let n=!1;e.length!==w.cameras.length&&(w.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const r=e[i];let a=null;if(null!==h)a=h.getViewport(r);else{const e=c.getViewSubImage(u,r);a=e.viewport,0===i&&(t.setRenderTargetTextures(f,e.colorTexture,u.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(f))}let s=S[i];void 0===s&&(s=new ta,s.layers.enable(i),s.viewport=new Hn,S[i]=s),s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(a.x,a.y,a.width,a.height),0===i&&w.matrix.copy(s.matrix),!0===n&&w.cameras.push(s)}}for(let t=0;t<g.length;t++){const e=v[t],n=g[t];null!==e&&void 0!==n&&n.update(e,i,o||a)}if(N&&N(e,i),i.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:i.detectedPlanes});let t=null;for(const e of _)i.detectedPlanes.has(e)||(null===t&&(t=[]),t.push(e));if(null!==t)for(const e of t)_.delete(e),x.delete(e),n.dispatchEvent({type:"planeremoved",data:e});for(const e of i.detectedPlanes)if(_.has(e)){const t=x.get(e);e.lastChangedTime>t&&(x.set(e,e.lastChangedTime),n.dispatchEvent({type:"planechanged",data:e}))}else _.add(e),x.set(e,i.lastChangedTime),n.dispatchEvent({type:"planeadded",data:e})}d=null}const I=new pa;I.setAnimationLoop(z),this.setAnimationLoop=function(t){N=t},this.dispose=function(){}}}function Bu(t,e){function n(e,n){n.color.getRGB(e.fogColor.value,Yr(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)}function i(t,e,n,i,f){e.isMeshBasicMaterial||e.isMeshLambertMaterial?r(t,e):e.isMeshToonMaterial?(r(t,e),u(t,e)):e.isMeshPhongMaterial?(r(t,e),c(t,e)):e.isMeshStandardMaterial?(r(t,e),h(t,e),e.isMeshPhysicalMaterial&&d(t,e,f)):e.isMeshMatcapMaterial?(r(t,e),p(t,e)):e.isMeshDepthMaterial?r(t,e):e.isMeshDistanceMaterial?(r(t,e),m(t,e)):e.isMeshNormalMaterial?r(t,e):e.isLineBasicMaterial?(a(t,e),e.isLineDashedMaterial&&s(t,e)):e.isPointsMaterial?o(t,e,n,i):e.isSpriteMaterial?l(t,e):e.isShadowMaterial?(t.color.value.copy(e.color),t.opacity.value=e.opacity):e.isShaderMaterial&&(e.uniformsNeedUpdate=!1)}function r(n,i){n.opacity.value=i.opacity,i.color&&n.diffuse.value.copy(i.color),i.emissive&&n.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(n.map.value=i.map),i.alphaMap&&(n.alphaMap.value=i.alphaMap),i.bumpMap&&(n.bumpMap.value=i.bumpMap,n.bumpScale.value=i.bumpScale,i.side===q&&(n.bumpScale.value*=-1)),i.displacementMap&&(n.displacementMap.value=i.displacementMap,n.displacementScale.value=i.displacementScale,n.displacementBias.value=i.displacementBias),i.emissiveMap&&(n.emissiveMap.value=i.emissiveMap),i.normalMap&&(n.normalMap.value=i.normalMap,n.normalScale.value.copy(i.normalScale),i.side===q&&n.normalScale.value.negate()),i.specularMap&&(n.specularMap.value=i.specularMap),i.alphaTest>0&&(n.alphaTest.value=i.alphaTest);const r=e.get(i).envMap;if(r&&(n.envMap.value=r,n.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,n.reflectivity.value=i.reflectivity,n.ior.value=i.ior,n.refractionRatio.value=i.refractionRatio),i.lightMap){n.lightMap.value=i.lightMap;const e=!0!==t.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=i.lightMapIntensity*e}let a,s;i.aoMap&&(n.aoMap.value=i.aoMap,n.aoMapIntensity.value=i.aoMapIntensity),i.map?a=i.map:i.specularMap?a=i.specularMap:i.displacementMap?a=i.displacementMap:i.normalMap?a=i.normalMap:i.bumpMap?a=i.bumpMap:i.roughnessMap?a=i.roughnessMap:i.metalnessMap?a=i.metalnessMap:i.alphaMap?a=i.alphaMap:i.emissiveMap?a=i.emissiveMap:i.clearcoatMap?a=i.clearcoatMap:i.clearcoatNormalMap?a=i.clearcoatNormalMap:i.clearcoatRoughnessMap?a=i.clearcoatRoughnessMap:i.iridescenceMap?a=i.iridescenceMap:i.iridescenceThicknessMap?a=i.iridescenceThicknessMap:i.specularIntensityMap?a=i.specularIntensityMap:i.specularColorMap?a=i.specularColorMap:i.transmissionMap?a=i.transmissionMap:i.thicknessMap?a=i.thicknessMap:i.sheenColorMap?a=i.sheenColorMap:i.sheenRoughnessMap&&(a=i.sheenRoughnessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),n.uvTransform.value.copy(a.matrix)),i.aoMap?s=i.aoMap:i.lightMap&&(s=i.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),n.uv2Transform.value.copy(s.matrix))}function a(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}function s(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function o(t,e,n,i){let r;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?r=e.map:e.alphaMap&&(r=e.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}function l(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}function c(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}function u(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}function h(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap);const i=e.get(n).envMap;i&&(t.envMapIntensity.value=n.envMapIntensity)}function d(t,e,n){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap)),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===q&&t.clearcoatNormalScale.value.negate())),e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap)),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=n.texture,t.transmissionSamplerSize.value.set(n.width,n.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}function p(t,e){e.matcap&&(t.matcap.value=e.matcap)}function m(t,e){t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Gu(t,e,n,i){let r={},a={},s=[];const o=n.isWebGL2?t.getParameter(35375):0;function l(t,e){const n=e.program;i.uniformBlockBinding(t,n)}function c(t,n){let s=r[t.id];void 0===s&&(m(t),s=u(t),r[t.id]=s,t.addEventListener("dispose",g));const o=n.program;i.updateUBOMapping(t,o);const l=e.render.frame;a[t.id]!==l&&(d(t),a[t.id]=l)}function u(e){const n=h();e.__bindingPointIndex=n;const i=t.createBuffer(),r=e.__size,a=e.usage;return t.bindBuffer(35345,i),t.bufferData(35345,r,a),t.bindBuffer(35345,null),t.bindBufferBase(35345,n,i),i}function h(){for(let t=0;t<o;t++)if(-1===s.indexOf(t))return s.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(e){const n=r[e.id],i=e.uniforms,a=e.__cache;t.bindBuffer(35345,n);for(let r=0,s=i.length;r<s;r++){const e=i[r];if(!0===p(e,r,a)){const n=e.value,i=e.__offset;"number"===typeof n?(e.__data[0]=n,t.bufferSubData(35345,i,e.__data)):(e.value.isMatrix3?(e.__data[0]=e.value.elements[0],e.__data[1]=e.value.elements[1],e.__data[2]=e.value.elements[2],e.__data[3]=e.value.elements[0],e.__data[4]=e.value.elements[3],e.__data[5]=e.value.elements[4],e.__data[6]=e.value.elements[5],e.__data[7]=e.value.elements[0],e.__data[8]=e.value.elements[6],e.__data[9]=e.value.elements[7],e.__data[10]=e.value.elements[8],e.__data[11]=e.value.elements[0]):n.toArray(e.__data),t.bufferSubData(35345,i,e.__data))}}t.bindBuffer(35345,null)}function p(t,e,n){const i=t.value;if(void 0===n[e])return n[e]="number"===typeof i?i:i.clone(),!0;if("number"===typeof i){if(n[e]!==i)return n[e]=i,!0}else{const t=n[e];if(!1===t.equals(i))return t.copy(i),!0}return!1}function m(t){const e=t.uniforms;let n=0;const i=16;let r=0;for(let a=0,s=e.length;a<s;a++){const t=e[a],s=f(t);if(t.__data=new Float32Array(s.storage/Float32Array.BYTES_PER_ELEMENT),t.__offset=n,a>0){r=n%i;const e=i-r;0!==r&&e-s.boundary<0&&(n+=i-r,t.__offset=n)}n+=s.storage}return r=n%i,r>0&&(n+=i-r),t.__size=n,t.__cache={},this}function f(t){const e=t.value,n={boundary:0,storage:0};return"number"===typeof e?(n.boundary=4,n.storage=4):e.isVector2?(n.boundary=8,n.storage=8):e.isVector3||e.isColor?(n.boundary=16,n.storage=12):e.isVector4?(n.boundary=16,n.storage=16):e.isMatrix3?(n.boundary=48,n.storage=48):e.isMatrix4?(n.boundary=64,n.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),n}function g(e){const n=e.target;n.removeEventListener("dispose",g);const i=s.indexOf(n.__bindingPointIndex);s.splice(i,1),t.deleteBuffer(r[n.id]),delete r[n.id],delete a[n.id]}function v(){for(const e in r)t.deleteBuffer(r[e]);s=[],r={},a={}}return{bind:l,update:c,dispose:v}}function Vu(){const t=Tn("canvas");return t.style.display="block",t}function Hu(t={}){this.isWebGLRenderer=!0;const e=void 0!==t.canvas?t.canvas:Vu(),n=void 0!==t.context?t.context:null,i=void 0===t.depth||t.depth,r=void 0===t.stencil||t.stencil,a=void 0!==t.antialias&&t.antialias,s=void 0===t.premultipliedAlpha||t.premultipliedAlpha,o=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",c=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u;u=null!==n?n.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha;let h=null,d=null;const p=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ze,this.physicallyCorrectLights=!1,this.toneMapping=Et,this.toneMappingExposure=1;const f=this;let g=!1,v=0,_=0,x=null,y=-1,b=null;const S=new Hn,w=new Hn;let M=null,T=e.width,C=e.height,E=1,A=null,P=null;const L=new Hn(0,0,T,C),R=new Hn(0,0,T,C);let D=!1;const N=new da;let z=!1,I=!1,O=null;const k=new Mi,F=new bn,B=new Yn,G={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function V(){return null===x?E:1}let H,W,Y,Z,J,$,K,Q,tt,et,nt,it,rt,at,st,ot,lt,ct,ut,ht,dt,pt,mt,ft,gt=n;function vt(t,n){for(let i=0;i<t.length;i++){const r=t[i],a=e.getContext(r,n);if(null!==a)return a}return null}try{const t={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:s,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${U}`),e.addEventListener("webglcontextlost",yt,!1),e.addEventListener("webglcontextrestored",bt,!1),e.addEventListener("webglcontextcreationerror",St,!1),null===gt){const e=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&e.shift(),gt=vt(e,t),null===gt)throw vt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===gt.getShaderPrecisionFormat&&(gt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Vt){throw console.error("THREE.WebGLRenderer: "+Vt.message),Vt}function _t(){H=new Ml(gt),W=new nl(gt,H,t),H.init(W),pt=new Nu(gt,H,W),Y=new Ru(gt,H,W),Z=new El,J=new mu,$=new Du(gt,H,Y,J,W,pt,Z),K=new rl(f),Q=new wl(f),tt=new ma(gt,W),mt=new tl(gt,H,tt,W),et=new Tl(gt,tt,Z,mt),nt=new Rl(gt,et,tt,Z),ut=new Ll(gt,W,$),ot=new il(J),it=new pu(f,K,Q,H,W,mt,ot),rt=new Bu(f,J),at=new _u,st=new Tu(H,W),ct=new Qo(f,K,Q,Y,nt,u,s),lt=new Lu(f,nt,W),ft=new Gu(gt,Z,W,Y),ht=new el(gt,H,Z,W),dt=new Cl(gt,H,Z,W),Z.programs=it.programs,f.capabilities=W,f.extensions=H,f.properties=J,f.renderLists=at,f.shadowMap=lt,f.state=Y,f.info=Z}_t();const xt=new Fu(f,gt);function yt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function bt(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const t=Z.autoReset,e=lt.enabled,n=lt.autoUpdate,i=lt.needsUpdate,r=lt.type;_t(),Z.autoReset=t,lt.enabled=e,lt.autoUpdate=n,lt.needsUpdate=i,lt.type=r}function St(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function wt(t){const e=t.target;e.removeEventListener("dispose",wt),Mt(e)}function Mt(t){Tt(t),J.remove(t)}function Tt(t){const e=J.get(t).programs;void 0!==e&&(e.forEach((function(t){it.releaseProgram(t)})),t.isShaderMaterial&&it.releaseShaderCache(t))}this.xr=xt,this.getContext=function(){return gt},this.getContextAttributes=function(){return gt.getContextAttributes()},this.forceContextLoss=function(){const t=H.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=H.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return E},this.setPixelRatio=function(t){void 0!==t&&(E=t,this.setSize(T,C,!1))},this.getSize=function(t){return t.set(T,C)},this.setSize=function(t,n,i){xt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(T=t,C=n,e.width=Math.floor(t*E),e.height=Math.floor(n*E),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(T*E,C*E).floor()},this.setDrawingBufferSize=function(t,n,i){T=t,C=n,E=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(S)},this.getViewport=function(t){return t.copy(L)},this.setViewport=function(t,e,n,i){t.isVector4?L.set(t.x,t.y,t.z,t.w):L.set(t,e,n,i),Y.viewport(S.copy(L).multiplyScalar(E).floor())},this.getScissor=function(t){return t.copy(R)},this.setScissor=function(t,e,n,i){t.isVector4?R.set(t.x,t.y,t.z,t.w):R.set(t,e,n,i),Y.scissor(w.copy(R).multiplyScalar(E).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(t){Y.setScissorTest(D=t)},this.setOpaqueSort=function(t){A=t},this.setTransparentSort=function(t){P=t},this.getClearColor=function(t){return t.copy(ct.getClearColor())},this.setClearColor=function(){ct.setClearColor.apply(ct,arguments)},this.getClearAlpha=function(){return ct.getClearAlpha()},this.setClearAlpha=function(){ct.setClearAlpha.apply(ct,arguments)},this.clear=function(t=!0,e=!0,n=!0){let i=0;t&&(i|=16384),e&&(i|=256),n&&(i|=1024),gt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",yt,!1),e.removeEventListener("webglcontextrestored",bt,!1),e.removeEventListener("webglcontextcreationerror",St,!1),at.dispose(),st.dispose(),J.dispose(),K.dispose(),Q.dispose(),nt.dispose(),mt.dispose(),ft.dispose(),it.dispose(),xt.dispose(),xt.removeEventListener("sessionstart",Pt),xt.removeEventListener("sessionend",Lt),O&&(O.dispose(),O=null),Rt.stop()},this.renderBufferDirect=function(t,e,n,i,r,a){null===e&&(e=G);const s=r.isMesh&&r.matrixWorld.determinant()<0,o=Ft(t,e,n,i,r);Y.setMaterial(i,s);let l=n.index,c=1;!0===i.wireframe&&(l=et.getWireframeAttribute(n),c=2);const u=n.drawRange,h=n.attributes.position;let d=u.start*c,p=(u.start+u.count)*c;null!==a&&(d=Math.max(d,a.start*c),p=Math.min(p,(a.start+a.count)*c)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):void 0!==h&&null!==h&&(d=Math.max(d,0),p=Math.min(p,h.count));const m=p-d;if(m<0||m===1/0)return;let f;mt.setup(r,i,o,n,l);let g=ht;if(null!==l&&(f=tt.get(l),g=dt,g.setIndex(f)),r.isMesh)!0===i.wireframe?(Y.setLineWidth(i.wireframeLinewidth*V()),g.setMode(1)):g.setMode(4);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),Y.setLineWidth(t*V()),r.isLineSegments?g.setMode(1):r.isLineLoop?g.setMode(2):g.setMode(3)}else r.isPoints?g.setMode(0):r.isSprite&&g.setMode(4);if(r.isInstancedMesh)g.renderInstances(d,m,r.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);g.renderInstances(d,m,e)}else g.render(d,m)},this.compile=function(t,e){function n(t,e,n){!0===t.transparent&&t.side===X?(t.side=q,t.needsUpdate=!0,kt(t,e,n),t.side=j,t.needsUpdate=!0,kt(t,e,n),t.side=X):kt(t,e,n)}d=st.get(t),d.init(),m.push(d),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(d.pushLight(t),t.castShadow&&d.pushShadow(t))})),d.setupLights(f.physicallyCorrectLights),t.traverse((function(e){const i=e.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++){const a=i[r];n(a,t,e)}else n(i,t,e)})),m.pop(),d=null};let Ct=null;function At(t){Ct&&Ct(t)}function Pt(){Rt.stop()}function Lt(){Rt.start()}const Rt=new pa;function Dt(t,e,n,i){if(!1===t.visible)return;const r=t.layers.test(e.layers);if(r)if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||N.intersectsSprite(t)){i&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(k);const e=nt.update(t),r=t.material;r.visible&&h.push(t,e,r,n,B.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==Z.render.frame&&(t.skeleton.update(),t.skeleton.frame=Z.render.frame),!t.frustumCulled||N.intersectsObject(t))){i&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(k);const e=nt.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],o=r[s.materialIndex];o&&o.visible&&h.push(t,e,o,n,B.z,s)}}else r.visible&&h.push(t,e,r,n,B.z,null)}const a=t.children;for(let s=0,o=a.length;s<o;s++)Dt(a[s],e,n,i)}function Nt(t,e,n,i){const r=t.opaque,a=t.transmissive,s=t.transparent;d.setupLightsView(n),a.length>0&&zt(r,e,n),i&&Y.viewport(S.copy(i)),r.length>0&&It(r,e,n),a.length>0&&It(a,e,n),s.length>0&&It(s,e,n),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1)}function zt(t,e,n){const i=W.isWebGL2;null===O&&(O=new Wn(1,1,{generateMipmaps:!0,type:H.has("EXT_color_buffer_half_float")?ee:Yt,minFilter:Xt,samples:i&&!0===a?4:0})),f.getDrawingBufferSize(F),i?O.setSize(F.x,F.y):O.setSize(_n(F.x),_n(F.y));const r=f.getRenderTarget();f.setRenderTarget(O),f.clear();const s=f.toneMapping;f.toneMapping=Et,It(t,e,n),f.toneMapping=s,$.updateMultisampleRenderTarget(O),$.updateRenderTargetMipmap(O),f.setRenderTarget(r)}function It(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=a.object,o=a.geometry,l=null===i?a.material:i,c=a.group;s.layers.test(n.layers)&&Ot(s,e,n,o,l,c)}}function Ot(t,e,n,i,r,a){t.onBeforeRender(f,e,n,i,r,a),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(f,e,n,i,t,a),!0===r.transparent&&r.side===X?(r.side=q,r.needsUpdate=!0,f.renderBufferDirect(n,e,i,r,t,a),r.side=j,r.needsUpdate=!0,f.renderBufferDirect(n,e,i,r,t,a),r.side=X):f.renderBufferDirect(n,e,i,r,t,a),t.onAfterRender(f,e,n,i,r,a)}function kt(t,e,n){!0!==e.isScene&&(e=G);const i=J.get(t),r=d.state.lights,a=d.state.shadowsArray,s=r.state.version,o=it.getParameters(t,r.state,a,e,n),l=it.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?Q:K).get(t.envMap||i.environment),void 0===c&&(t.addEventListener("dispose",wt),c=new Map,i.programs=c);let u=c.get(l);if(void 0!==u){if(i.currentProgram===u&&i.lightsStateVersion===s)return Ut(t,o),u}else o.uniforms=it.getUniforms(t),t.onBuild(n,o,f),t.onBeforeCompile(o,f),u=it.acquireProgram(o,l),c.set(l,u),i.uniforms=o.uniforms;const h=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=ot.uniform),Ut(t,o),i.needsLights=Gt(t),i.lightsStateVersion=s,i.needsLights&&(h.ambientLightColor.value=r.state.ambient,h.lightProbe.value=r.state.probe,h.directionalLights.value=r.state.directional,h.directionalLightShadows.value=r.state.directionalShadow,h.spotLights.value=r.state.spot,h.spotLightShadows.value=r.state.spotShadow,h.rectAreaLights.value=r.state.rectArea,h.ltc_1.value=r.state.rectAreaLTC1,h.ltc_2.value=r.state.rectAreaLTC2,h.pointLights.value=r.state.point,h.pointLightShadows.value=r.state.pointShadow,h.hemisphereLights.value=r.state.hemi,h.directionalShadowMap.value=r.state.directionalShadowMap,h.directionalShadowMatrix.value=r.state.directionalShadowMatrix,h.spotShadowMap.value=r.state.spotShadowMap,h.spotLightMatrix.value=r.state.spotLightMatrix,h.spotLightMap.value=r.state.spotLightMap,h.pointShadowMap.value=r.state.pointShadowMap,h.pointShadowMatrix.value=r.state.pointShadowMatrix);const p=u.getUniforms(),m=kc.seqWithValue(p.seq,h);return i.currentProgram=u,i.uniformsList=m,u}function Ut(t,e){const n=J.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}function Ft(t,e,n,i,r){!0!==e.isScene&&(e=G),$.resetTextureUnits();const a=e.fog,s=i.isMeshStandardMaterial?e.environment:null,o=null===x?f.outputEncoding:!0===x.isXRRenderTarget?x.texture.encoding:Ze,l=(i.isMeshStandardMaterial?Q:K).get(i.envMap||s),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,u=!!i.normalMap&&!!n.attributes.tangent,h=!!n.morphAttributes.position,p=!!n.morphAttributes.normal,m=!!n.morphAttributes.color,g=i.toneMapped?f.toneMapping:Et,v=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,_=void 0!==v?v.length:0,S=J.get(i),w=d.state.lights;if(!0===z&&(!0===I||t!==b)){const e=t===b&&i.id===y;ot.setState(i,t,e)}let M=!1;i.version===S.__version?S.needsLights&&S.lightsStateVersion!==w.state.version||S.outputEncoding!==o||r.isInstancedMesh&&!1===S.instancing?M=!0:r.isInstancedMesh||!0!==S.instancing?r.isSkinnedMesh&&!1===S.skinning?M=!0:r.isSkinnedMesh||!0!==S.skinning?S.envMap!==l||!0===i.fog&&S.fog!==a?M=!0:void 0===S.numClippingPlanes||S.numClippingPlanes===ot.numPlanes&&S.numIntersection===ot.numIntersection?(S.vertexAlphas!==c||S.vertexTangents!==u||S.morphTargets!==h||S.morphNormals!==p||S.morphColors!==m||S.toneMapping!==g||!0===W.isWebGL2&&S.morphTargetsCount!==_)&&(M=!0):M=!0:M=!0:M=!0:(M=!0,S.__version=i.version);let T=S.currentProgram;!0===M&&(T=kt(i,e,r));let A=!1,P=!1,L=!1;const R=T.getUniforms(),D=S.uniforms;if(Y.useProgram(T.program)&&(A=!0,P=!0,L=!0),i.id!==y&&(y=i.id,P=!0),A||b!==t){if(R.setValue(gt,"projectionMatrix",t.projectionMatrix),W.logarithmicDepthBuffer&&R.setValue(gt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),b!==t&&(b=t,P=!0,L=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const e=R.map.cameraPosition;void 0!==e&&e.setValue(gt,B.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&R.setValue(gt,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh)&&R.setValue(gt,"viewMatrix",t.matrixWorldInverse)}if(r.isSkinnedMesh){R.setOptional(gt,r,"bindMatrix"),R.setOptional(gt,r,"bindMatrixInverse");const t=r.skeleton;t&&(W.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),R.setValue(gt,"boneTexture",t.boneTexture,$),R.setValue(gt,"boneTextureSize",t.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const N=n.morphAttributes;if((void 0!==N.position||void 0!==N.normal||void 0!==N.color&&!0===W.isWebGL2)&&ut.update(r,n,i,T),(P||S.receiveShadow!==r.receiveShadow)&&(S.receiveShadow=r.receiveShadow,R.setValue(gt,"receiveShadow",r.receiveShadow)),i.isMeshGouraudMaterial&&null!==i.envMap&&(D.envMap.value=l,D.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),P&&(R.setValue(gt,"toneMappingExposure",f.toneMappingExposure),S.needsLights&&Bt(D,L),a&&!0===i.fog&&rt.refreshFogUniforms(D,a),rt.refreshMaterialUniforms(D,i,E,C,O),kc.upload(gt,S.uniformsList,D,$)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(kc.upload(gt,S.uniformsList,D,$),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&R.setValue(gt,"center",r.center),R.setValue(gt,"modelViewMatrix",r.modelViewMatrix),R.setValue(gt,"normalMatrix",r.normalMatrix),R.setValue(gt,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const t=i.uniformsGroups;for(let e=0,n=t.length;e<n;e++)if(W.isWebGL2){const n=t[e];ft.update(n,T),ft.bind(n,T)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return T}function Bt(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}function Gt(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}Rt.setAnimationLoop(At),"undefined"!==typeof self&&Rt.setContext(self),this.setAnimationLoop=function(t){Ct=t,xt.setAnimationLoop(t),null===t?Rt.stop():Rt.start()},xt.addEventListener("sessionstart",Pt),xt.addEventListener("sessionend",Lt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===xt.enabled&&!0===xt.isPresenting&&(!0===xt.cameraAutoUpdate&&xt.updateCamera(e),e=xt.getCamera()),!0===t.isScene&&t.onBeforeRender(f,t,e,x),d=st.get(t,m.length),d.init(),m.push(d),k.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),N.setFromProjectionMatrix(k),I=this.localClippingEnabled,z=ot.init(this.clippingPlanes,I,e),h=at.get(t,p.length),h.init(),p.push(h),Dt(t,e,0,f.sortObjects),h.finish(),!0===f.sortObjects&&h.sort(A,P),!0===z&&ot.beginShadows();const n=d.state.shadowsArray;if(lt.render(n,t,e),!0===z&&ot.endShadows(),!0===this.info.autoReset&&this.info.reset(),ct.render(h,t),d.setupLights(f.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let e=0,i=n.length;e<i;e++){const i=n[e];Nt(h,t,i,i.viewport)}}else Nt(h,t,e);null!==x&&($.updateMultisampleRenderTarget(x),$.updateRenderTargetMipmap(x)),!0===t.isScene&&t.onAfterRender(f,t,e),mt.resetDefaultState(),y=-1,b=null,m.pop(),d=m.length>0?m[m.length-1]:null,p.pop(),h=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(t,e,n){J.get(t.texture).__webglTexture=e,J.get(t.depthTexture).__webglTexture=n;const i=J.get(t);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===H.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const n=J.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){x=t,v=e,_=n;let i=!0,r=null,a=!1,s=!1;if(t){const n=J.get(t);void 0!==n.__useDefaultFramebuffer?(Y.bindFramebuffer(36160,null),i=!1):void 0===n.__webglFramebuffer?$.setupRenderTarget(t):n.__hasExternalTextures&&$.rebindTextures(t,J.get(t.texture).__webglTexture,J.get(t.depthTexture).__webglTexture);const o=t.texture;(o.isData3DTexture||o.isDataArrayTexture||o.isCompressedArrayTexture)&&(s=!0);const l=J.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=l[e],a=!0):r=W.isWebGL2&&t.samples>0&&!1===$.useMultisampledRTT(t)?J.get(t).__webglMultisampledFramebuffer:l,S.copy(t.viewport),w.copy(t.scissor),M=t.scissorTest}else S.copy(L).multiplyScalar(E).floor(),w.copy(R).multiplyScalar(E).floor(),M=D;const o=Y.bindFramebuffer(36160,r);if(o&&W.drawBuffers&&i&&Y.drawBuffers(t,r),Y.viewport(S),Y.scissor(w),Y.setScissorTest(M),a){const i=J.get(t.texture);gt.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}else if(s){const i=J.get(t.texture),r=e||0;gt.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,r)}y=-1},this.readRenderTargetPixels=function(t,e,n,i,r,a,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=J.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){Y.bindFramebuffer(36160,o);try{const s=t.texture,o=s.format,l=s.type;if(o!==oe&&pt.convert(o)!==gt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===ee&&(H.has("EXT_color_buffer_half_float")||W.isWebGL2&&H.has("EXT_color_buffer_float"));if(l!==Yt&&pt.convert(l)!==gt.getParameter(35738)&&(l!==te||!(W.isWebGL2||H.has("OES_texture_float")||H.has("WEBGL_color_buffer_float")))&&!c)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&gt.readPixels(e,n,i,r,pt.convert(o),pt.convert(l),a)}finally{const t=null!==x?J.get(x).__webglFramebuffer:null;Y.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),a=Math.floor(e.image.height*i);$.setTexture2D(e,0),gt.copyTexSubImage2D(3553,n,0,0,t.x,t.y,r,a),Y.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,a=e.image.height,s=pt.convert(n.format),o=pt.convert(n.type);$.setTexture2D(n,0),gt.pixelStorei(37440,n.flipY),gt.pixelStorei(37441,n.premultiplyAlpha),gt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?gt.texSubImage2D(3553,i,t.x,t.y,r,a,s,o,e.image.data):e.isCompressedTexture?gt.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):gt.texSubImage2D(3553,i,t.x,t.y,s,o,e.image),0===i&&n.generateMipmaps&&gt.generateMipmap(3553),Y.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(f.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=t.max.x-t.min.x+1,s=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=pt.convert(i.format),c=pt.convert(i.type);let u;if(i.isData3DTexture)$.setTexture3D(i,0),u=32879;else{if(!i.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");$.setTexture2DArray(i,0),u=35866}gt.pixelStorei(37440,i.flipY),gt.pixelStorei(37441,i.premultiplyAlpha),gt.pixelStorei(3317,i.unpackAlignment);const h=gt.getParameter(3314),d=gt.getParameter(32878),p=gt.getParameter(3316),m=gt.getParameter(3315),g=gt.getParameter(32877),v=n.isCompressedTexture?n.mipmaps[0]:n.image;gt.pixelStorei(3314,v.width),gt.pixelStorei(32878,v.height),gt.pixelStorei(3316,t.min.x),gt.pixelStorei(3315,t.min.y),gt.pixelStorei(32877,t.min.z),n.isDataTexture||n.isData3DTexture?gt.texSubImage3D(u,r,e.x,e.y,e.z,a,s,o,l,c,v.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),gt.compressedTexSubImage3D(u,r,e.x,e.y,e.z,a,s,o,l,v.data)):gt.texSubImage3D(u,r,e.x,e.y,e.z,a,s,o,l,c,v),gt.pixelStorei(3314,h),gt.pixelStorei(32878,d),gt.pixelStorei(3316,p),gt.pixelStorei(3315,m),gt.pixelStorei(32877,g),0===r&&i.generateMipmaps&&gt.generateMipmap(u),Y.unbindTexture()},this.initTexture=function(t){t.isCubeTexture?$.setTextureCube(t,0):t.isData3DTexture?$.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?$.setTexture2DArray(t,0):$.setTexture2D(t,0),Y.unbindTexture()},this.resetState=function(){v=0,_=0,x=null,Y.reset(),mt.reset()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Wu extends Hu{}Wu.prototype.isWebGL1Renderer=!0;class ju extends Zi{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.backgroundIntensity=this.backgroundIntensity),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class qu{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let a;a=e||t*n[r-1];let s,o=0,l=r-1;while(o<=l)if(i=Math.floor(o+(l-o)/2),s=n[i]-a,s<0)o=i+1;else{if(!(s>0)){l=i;break}l=i-1}if(i=l,n[i]===a)return i/(r-1);const c=n[i],u=n[i+1],h=u-c,d=(a-c)/h,p=(i+d)/(r-1);return p}getTangent(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),s=this.getPoint(r),o=e||(a.isVector2?new bn:new Yn);return o.copy(s).sub(a).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new Yn,i=[],r=[],a=[],s=new Yn,o=new Mi;for(let d=0;d<=t;d++){const e=d/t;i[d]=this.getTangentAt(e,new Yn)}r[0]=new Yn,a[0]=new Yn;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),u=Math.abs(i[0].y),h=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),h<=l&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]);for(let d=1;d<=t;d++){if(r[d]=r[d-1].clone(),a[d]=a[d-1].clone(),s.crossVectors(i[d-1],i[d]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(mn(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(o.makeRotationAxis(s,t))}a[d].crossVectors(i[d],r[d])}if(!0===e){let e=Math.acos(mn(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),a[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Xu extends qu{constructor(t=0,e=0,n=1,i=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(t,e){const n=e||new bn,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;while(r<0)r+=i;while(r>i)r-=i;r<Number.EPSILON&&(r=a?0:i),!0!==this.aClockwise||a||(r===i?r=-i:r-=i);const s=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Yu extends Xu{constructor(t,e,n,i,r,a){super(t,e,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function Zu(){let t=0,e=0,n=0,i=0;function r(r,a,s,o){t=r,e=s,n=-3*r+3*a-2*s-o,i=2*r-2*a+s+o}return{initCatmullRom:function(t,e,n,i,a){r(e,n,a*(n-t),a*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,a,s,o){let l=(e-t)/a-(n-t)/(a+s)+(n-e)/s,c=(n-e)/s-(i-e)/(s+o)+(i-n)/o;l*=s,c*=s,r(e,n,l,c)},calc:function(r){const a=r*r,s=a*r;return t+e*r+n*a+i*s}}}const Ju=new Yn,$u=new Zu,Ku=new Zu,Qu=new Zu;class th extends qu{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new Yn){const n=e,i=this.points,r=i.length,a=(r-(this.closed?0:1))*t;let s,o,l=Math.floor(a),c=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?s=i[(l-1)%r]:(Ju.subVectors(i[0],i[1]).add(i[0]),s=Ju);const u=i[l%r],h=i[(l+1)%r];if(this.closed||l+2<r?o=i[(l+2)%r]:(Ju.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=Ju),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(u),t),n=Math.pow(u.distanceToSquared(h),t),i=Math.pow(h.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),$u.initNonuniformCatmullRom(s.x,u.x,h.x,o.x,e,n,i),Ku.initNonuniformCatmullRom(s.y,u.y,h.y,o.y,e,n,i),Qu.initNonuniformCatmullRom(s.z,u.z,h.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&($u.initCatmullRom(s.x,u.x,h.x,o.x,this.tension),Ku.initCatmullRom(s.y,u.y,h.y,o.y,this.tension),Qu.initCatmullRom(s.z,u.z,h.z,o.z,this.tension));return n.set($u.calc(c),Ku.calc(c),Qu.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Yn).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function eh(t,e,n,i,r){const a=.5*(i-e),s=.5*(r-n),o=t*t,l=t*o;return(2*n-2*i+a+s)*l+(-3*n+3*i-2*a-s)*o+a*t+n}function nh(t,e){const n=1-t;return n*n*e}function ih(t,e){return 2*(1-t)*t*e}function rh(t,e){return t*t*e}function ah(t,e,n,i){return nh(t,e)+ih(t,n)+rh(t,i)}function sh(t,e){const n=1-t;return n*n*n*e}function oh(t,e){const n=1-t;return 3*n*n*t*e}function lh(t,e){return 3*(1-t)*t*t*e}function ch(t,e){return t*t*t*e}function uh(t,e,n,i,r){return sh(t,e)+oh(t,n)+lh(t,i)+ch(t,r)}class hh extends qu{constructor(t=new bn,e=new bn,n=new bn,i=new bn){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new bn){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(uh(t,i.x,r.x,a.x,s.x),uh(t,i.y,r.y,a.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class dh extends qu{constructor(t=new Yn,e=new Yn,n=new Yn,i=new Yn){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Yn){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(uh(t,i.x,r.x,a.x,s.x),uh(t,i.y,r.y,a.y,s.y),uh(t,i.z,r.z,a.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class ph extends qu{constructor(t=new bn,e=new bn){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new bn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new bn;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class mh extends qu{constructor(t=new Yn,e=new Yn){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new Yn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class fh extends qu{constructor(t=new bn,e=new bn,n=new bn){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new bn){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(ah(t,i.x,r.x,a.x),ah(t,i.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class gh extends qu{constructor(t=new Yn,e=new Yn,n=new Yn){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Yn){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(ah(t,i.x,r.x,a.x),ah(t,i.y,r.y,a.y),ah(t,i.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class vh extends qu{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new bn){const n=e,i=this.points,r=(i.length-1)*t,a=Math.floor(r),s=r-a,o=i[0===a?a:a-1],l=i[a],c=i[a>i.length-2?i.length-1:a+1],u=i[a>i.length-3?i.length-1:a+2];return n.set(eh(s,o.x,l.x,c.x,u.x),eh(s,o.y,l.y,c.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new bn).fromArray(n))}return this}}var _h=Object.freeze({__proto__:null,ArcCurve:Yu,CatmullRomCurve3:th,CubicBezierCurve:hh,CubicBezierCurve3:dh,EllipseCurve:Xu,LineCurve:ph,LineCurve3:mh,QuadraticBezierCurve:fh,QuadraticBezierCurve3:gh,SplineCurve:vh});class xh extends qu{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new ph(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;while(r<i.length){if(i[r]>=n){const t=i[r]-n,a=this.curves[r],s=a.getLength(),o=0===s?0:1-t/s;return a.getPointAt(o,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],s=a.isEllipseCurve?2*t:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new _h[n.type]).fromJSON(n))}return this}}class yh extends xh{constructor(t){super(),this.type="Path",this.currentPoint=new bn,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new ph(this.currentPoint.clone(),new bn(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new fh(this.currentPoint.clone(),new bn(t,e),new bn(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,a){const s=new hh(this.currentPoint.clone(),new bn(t,e),new bn(n,i),new bn(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new vh(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,a){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,i,r,a),this}absarc(t,e,n,i,r,a){return this.absellipse(t,e,n,n,i,r,a),this}ellipse(t,e,n,i,r,a,s,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,a,s,o),this}absellipse(t,e,n,i,r,a,s,o){const l=new Xu(t,e,n,i,r,a,s,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class bh extends yh{constructor(t){super(t),this.uuid=pn(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new yh).fromJSON(n))}return this}}const Sh={triangulate:function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let a=wh(t,0,r,n,!0);const s=[];if(!a||a.next===a.prev)return s;let o,l,c,u,h,d,p;if(i&&(a=Lh(t,e,a,n)),t.length>80*n){o=c=t[0],l=u=t[1];for(let e=n;e<r;e+=n)h=t[e],d=t[e+1],h<o&&(o=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);p=Math.max(c-o,u-l),p=0!==p?32767/p:0}return Th(a,s,n,o,l,p,0),s}};function wh(t,e,n,i,r){let a,s;if(r===Qh(t,e,n,i)>0)for(a=e;a<n;a+=i)s=Jh(a,t[a],t[a+1],s);else for(a=n-i;a>=e;a-=i)s=Jh(a,t[a],t[a+1],s);return s&&Vh(s,s.next)&&($h(s),s=s.next),s}function Mh(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!Vh(i,i.next)&&0!==Gh(i.prev,i,i.next))i=i.next;else{if($h(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Th(t,e,n,i,r,a,s){if(!t)return;!s&&a&&Ih(t,i,r,a);let o,l,c=t;while(t.prev!==t.next)if(o=t.prev,l=t.next,a?Eh(t,i,r,a):Ch(t))e.push(o.i/n|0),e.push(t.i/n|0),e.push(l.i/n|0),$h(t),t=l.next,c=l.next;else if(t=l,t===c){s?1===s?(t=Ah(Mh(t),e,n),Th(t,e,n,i,r,a,2)):2===s&&Ph(t,e,n,i,r,a):Th(Mh(t),e,n,i,r,a,1);break}}function Ch(t){const e=t.prev,n=t,i=t.next;if(Gh(e,n,i)>=0)return!1;const r=e.x,a=n.x,s=i.x,o=e.y,l=n.y,c=i.y,u=r<a?r<s?r:s:a<s?a:s,h=o<l?o<c?o:c:l<c?l:c,d=r>a?r>s?r:s:a>s?a:s,p=o>l?o>c?o:c:l>c?l:c;let m=i.next;while(m!==e){if(m.x>=u&&m.x<=d&&m.y>=h&&m.y<=p&&Fh(r,o,a,l,s,c,m.x,m.y)&&Gh(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function Eh(t,e,n,i){const r=t.prev,a=t,s=t.next;if(Gh(r,a,s)>=0)return!1;const o=r.x,l=a.x,c=s.x,u=r.y,h=a.y,d=s.y,p=o<l?o<c?o:c:l<c?l:c,m=u<h?u<d?u:d:h<d?h:d,f=o>l?o>c?o:c:l>c?l:c,g=u>h?u>d?u:d:h>d?h:d,v=kh(p,m,e,n,i),_=kh(f,g,e,n,i);let x=t.prevZ,y=t.nextZ;while(x&&x.z>=v&&y&&y.z<=_){if(x.x>=p&&x.x<=f&&x.y>=m&&x.y<=g&&x!==r&&x!==s&&Fh(o,u,l,h,c,d,x.x,x.y)&&Gh(x.prev,x,x.next)>=0)return!1;if(x=x.prevZ,y.x>=p&&y.x<=f&&y.y>=m&&y.y<=g&&y!==r&&y!==s&&Fh(o,u,l,h,c,d,y.x,y.y)&&Gh(y.prev,y,y.next)>=0)return!1;y=y.nextZ}while(x&&x.z>=v){if(x.x>=p&&x.x<=f&&x.y>=m&&x.y<=g&&x!==r&&x!==s&&Fh(o,u,l,h,c,d,x.x,x.y)&&Gh(x.prev,x,x.next)>=0)return!1;x=x.prevZ}while(y&&y.z<=_){if(y.x>=p&&y.x<=f&&y.y>=m&&y.y<=g&&y!==r&&y!==s&&Fh(o,u,l,h,c,d,y.x,y.y)&&Gh(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function Ah(t,e,n){let i=t;do{const r=i.prev,a=i.next.next;!Vh(r,a)&&Hh(r,i,i.next,a)&&Xh(r,a)&&Xh(a,r)&&(e.push(r.i/n|0),e.push(i.i/n|0),e.push(a.i/n|0),$h(i),$h(i.next),i=t=a),i=i.next}while(i!==t);return Mh(i)}function Ph(t,e,n,i,r,a){let s=t;do{let t=s.next.next;while(t!==s.prev){if(s.i!==t.i&&Bh(s,t)){let o=Zh(s,t);return s=Mh(s,s.next),o=Mh(o,o.next),Th(s,e,n,i,r,a,0),void Th(o,e,n,i,r,a,0)}t=t.next}s=s.next}while(s!==t)}function Lh(t,e,n,i){const r=[];let a,s,o,l,c;for(a=0,s=e.length;a<s;a++)o=e[a]*i,l=a<s-1?e[a+1]*i:t.length,c=wh(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(Uh(c));for(r.sort(Rh),a=0;a<r.length;a++)n=Dh(r[a],n);return n}function Rh(t,e){return t.x-e.x}function Dh(t,e){const n=Nh(t,e);if(!n)return e;const i=Zh(n,t);return Mh(i,i.next),Mh(n,n.next)}function Nh(t,e){let n,i=e,r=-1/0;const a=t.x,s=t.y;do{if(s<=i.y&&s>=i.next.y&&i.next.y!==i.y){const t=i.x+(s-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=a&&t>r&&(r=t,n=i.x<i.next.x?i:i.next,t===a))return n}i=i.next}while(i!==e);if(!n)return null;const o=n,l=n.x,c=n.y;let u,h=1/0;i=n;do{a>=i.x&&i.x>=l&&a!==i.x&&Fh(s<c?a:r,s,l,c,s<c?r:a,s,i.x,i.y)&&(u=Math.abs(s-i.y)/(a-i.x),Xh(i,t)&&(u<h||u===h&&(i.x>n.x||i.x===n.x&&zh(n,i)))&&(n=i,h=u)),i=i.next}while(i!==o);return n}function zh(t,e){return Gh(t.prev,t,e.prev)<0&&Gh(e.next,t,t.next)<0}function Ih(t,e,n,i){let r=t;do{0===r.z&&(r.z=kh(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,Oh(r)}function Oh(t){let e,n,i,r,a,s,o,l,c=1;do{n=t,t=null,a=null,s=0;while(n){for(s++,i=n,o=0,e=0;e<c;e++)if(o++,i=i.nextZ,!i)break;l=c;while(o>0||l>0&&i)0!==o&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=i}a.nextZ=null,c*=2}while(s>1);return t}function kh(t,e,n,i,r){return t=(t-n)*r|0,e=(e-i)*r|0,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t|e<<1}function Uh(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Fh(t,e,n,i,r,a,s,o){return(r-s)*(e-o)>=(t-s)*(a-o)&&(t-s)*(i-o)>=(n-s)*(e-o)&&(n-s)*(a-o)>=(r-s)*(i-o)}function Bh(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!qh(t,e)&&(Xh(t,e)&&Xh(e,t)&&Yh(t,e)&&(Gh(t.prev,t,e.prev)||Gh(t,e.prev,e))||Vh(t,e)&&Gh(t.prev,t,t.next)>0&&Gh(e.prev,e,e.next)>0)}function Gh(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Vh(t,e){return t.x===e.x&&t.y===e.y}function Hh(t,e,n,i){const r=jh(Gh(t,e,n)),a=jh(Gh(t,e,i)),s=jh(Gh(n,i,t)),o=jh(Gh(n,i,e));return r!==a&&s!==o||(!(0!==r||!Wh(t,n,e))||(!(0!==a||!Wh(t,i,e))||(!(0!==s||!Wh(n,t,i))||!(0!==o||!Wh(n,e,i)))))}function Wh(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function jh(t){return t>0?1:t<0?-1:0}function qh(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Hh(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function Xh(t,e){return Gh(t.prev,t,t.next)<0?Gh(t,e,t.next)>=0&&Gh(t,t.prev,e)>=0:Gh(t,e,t.prev)<0||Gh(t,t.next,e)<0}function Yh(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!==n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}function Zh(t,e){const n=new Kh(t.i,t.x,t.y),i=new Kh(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function Jh(t,e,n,i){const r=new Kh(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function $h(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Kh(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Qh(t,e,n,i){let r=0;for(let a=e,s=n-i;a<n;a+=i)r+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return r}class td{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n}static isClockWise(t){return td.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];ed(t),nd(n,t);let a=t.length;e.forEach(ed);for(let o=0;o<e.length;o++)i.push(a),a+=e[o].length,nd(n,e[o]);const s=Sh.triangulate(n,i);for(let o=0;o<s.length;o+=3)r.push(s.slice(o,o+3));return r}}function ed(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function nd(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class id extends wr{constructor(t=new bh([new bn(.5,.5),new bn(-.5,.5),new bn(-.5,-.5),new bn(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let s=0,o=t.length;s<o;s++){const e=t[s];a(e)}function a(t){const a=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,u=void 0!==e.bevelThickness?e.bevelThickness:.2,h=void 0!==e.bevelSize?e.bevelSize:u-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const m=e.extrudePath,f=void 0!==e.UVGenerator?e.UVGenerator:rd;let g,v,_,x,y,b=!1;m&&(g=m.getSpacedPoints(o),b=!0,c=!1,v=m.computeFrenetFrames(o,!1),_=new Yn,x=new Yn,y=new Yn),c||(p=0,u=0,h=0,d=0);const S=t.extractPoints(s);let w=S.shape;const M=S.holes,T=!td.isClockWise(w);if(T){w=w.reverse();for(let t=0,e=M.length;t<e;t++){const e=M[t];td.isClockWise(e)&&(M[t]=e.reverse())}}const C=td.triangulateShape(w,M),E=w;for(let e=0,n=M.length;e<n;e++){const t=M[e];w=w.concat(t)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const P=w.length,L=C.length;function R(t,e,n){let i,r,a;const s=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,u=s*s+o*o,h=s*c-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(u),d=Math.sqrt(l*l+c*c),p=e.x-o/h,m=e.y+s/h,f=n.x-c/d,g=n.y+l/d,v=((f-p)*c-(g-m)*l)/(s*c-o*l);i=p+s*v-t.x,r=m+o*v-t.y;const _=i*i+r*r;if(_<=2)return new bn(i,r);a=Math.sqrt(_/2)}else{let t=!1;s>Number.EPSILON?l>Number.EPSILON&&(t=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(i=-o,r=s,a=Math.sqrt(u)):(i=s,r=o,a=Math.sqrt(u/2))}return new bn(i/a,r/a)}const D=[];for(let e=0,n=E.length,i=n-1,r=e+1;e<n;e++,i++,r++)i===n&&(i=0),r===n&&(r=0),D[e]=R(E[e],E[i],E[r]);const N=[];let z,I=D.concat();for(let e=0,n=M.length;e<n;e++){const t=M[e];z=[];for(let e=0,n=t.length,i=n-1,r=e+1;e<n;e++,i++,r++)i===n&&(i=0),r===n&&(r=0),z[e]=R(t[e],t[i],t[r]);N.push(z),I=I.concat(z)}for(let e=0;e<p;e++){const t=e/p,n=u*Math.cos(t*Math.PI/2),i=h*Math.sin(t*Math.PI/2)+d;for(let e=0,r=E.length;e<r;e++){const t=A(E[e],D[e],i);B(t.x,t.y,-n)}for(let e=0,r=M.length;e<r;e++){const t=M[e];z=N[e];for(let e=0,r=t.length;e<r;e++){const r=A(t[e],z[e],i);B(r.x,r.y,-n)}}}const O=h+d;for(let e=0;e<P;e++){const t=c?A(w[e],I[e],O):w[e];b?(x.copy(v.normals[0]).multiplyScalar(t.x),_.copy(v.binormals[0]).multiplyScalar(t.y),y.copy(g[0]).add(x).add(_),B(y.x,y.y,y.z)):B(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<P;t++){const n=c?A(w[t],I[t],O):w[t];b?(x.copy(v.normals[e]).multiplyScalar(n.x),_.copy(v.binormals[e]).multiplyScalar(n.y),y.copy(g[e]).add(x).add(_),B(y.x,y.y,y.z)):B(n.x,n.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=u*Math.cos(t*Math.PI/2),i=h*Math.sin(t*Math.PI/2)+d;for(let e=0,r=E.length;e<r;e++){const t=A(E[e],D[e],i);B(t.x,t.y,l+n)}for(let e=0,r=M.length;e<r;e++){const t=M[e];z=N[e];for(let e=0,r=t.length;e<r;e++){const r=A(t[e],z[e],i);b?B(r.x,r.y+g[o-1].y,g[o-1].x+n):B(r.x,r.y,l+n)}}}function k(){const t=i.length/3;if(c){let t=0,e=P*t;for(let n=0;n<L;n++){const t=C[n];G(t[2]+e,t[1]+e,t[0]+e)}t=o+2*p,e=P*t;for(let n=0;n<L;n++){const t=C[n];G(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<L;t++){const e=C[t];G(e[2],e[1],e[0])}for(let t=0;t<L;t++){const e=C[t];G(e[0]+P*o,e[1]+P*o,e[2]+P*o)}}n.addGroup(t,i.length/3-t,0)}function U(){const t=i.length/3;let e=0;F(E,e),e+=E.length;for(let n=0,i=M.length;n<i;n++){const t=M[n];F(t,e),e+=t.length}n.addGroup(t,i.length/3-t,1)}function F(t,e){let n=t.length;while(--n>=0){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=P*t,a=P*(t+1),s=e+i+n,o=e+r+n,l=e+r+a,c=e+i+a;V(s,o,l,c)}}}function B(t,e,n){a.push(t),a.push(e),a.push(n)}function G(t,e,r){H(t),H(e),H(r);const a=i.length/3,s=f.generateTopUV(n,i,a-3,a-2,a-1);W(s[0]),W(s[1]),W(s[2])}function V(t,e,r,a){H(t),H(e),H(a),H(e),H(r),H(a);const s=i.length/3,o=f.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);W(o[0]),W(o[1]),W(o[3]),W(o[1]),W(o[2]),W(o[3])}function H(t){i.push(a[3*t+0]),i.push(a[3*t+1]),i.push(a[3*t+2])}function W(t){r.push(t.x),r.push(t.y)}k(),U()}this.setAttribute("position",new fr(i,3)),this.setAttribute("uv",new fr(r,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return ad(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,a=t.shapes.length;r<a;r++){const i=e[t.shapes[r]];n.push(i)}const i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=(new _h[i.type]).fromJSON(i)),new id(n,t.options)}}const rd={generateTopUV:function(t,e,n,i,r){const a=e[3*n],s=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*r],u=e[3*r+1];return[new bn(a,s),new bn(o,l),new bn(c,u)]},generateSideWallUV:function(t,e,n,i,r,a){const s=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],u=e[3*i+1],h=e[3*i+2],d=e[3*r],p=e[3*r+1],m=e[3*r+2],f=e[3*a],g=e[3*a+1],v=e[3*a+2];return Math.abs(o-u)<Math.abs(s-c)?[new bn(s,1-l),new bn(c,1-h),new bn(d,1-m),new bn(f,1-v)]:[new bn(o,1-l),new bn(u,1-h),new bn(p,1-m),new bn(g,1-v)]}};function ad(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const e=t[i];n.shapes.push(e.uuid)}else n.shapes.push(t.uuid);return n.options=Object.assign({},e),void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class sd extends wr{constructor(t=1,e=32,n=16,i=0,r=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:s},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(a+s,Math.PI);let l=0;const c=[],u=new Yn,h=new Yn,d=[],p=[],m=[],f=[];for(let g=0;g<=n;g++){const d=[],v=g/n;let _=0;0==g&&0==a?_=.5/e:g==n&&o==Math.PI&&(_=-.5/e);for(let n=0;n<=e;n++){const o=n/e;u.x=-t*Math.cos(i+o*r)*Math.sin(a+v*s),u.y=t*Math.cos(a+v*s),u.z=t*Math.sin(i+o*r)*Math.sin(a+v*s),p.push(u.x,u.y,u.z),h.copy(u).normalize(),m.push(h.x,h.y,h.z),f.push(o+_,1-v),d.push(l++)}c.push(d)}for(let g=0;g<n;g++)for(let t=0;t<e;t++){const e=c[g][t+1],i=c[g][t],r=c[g+1][t],s=c[g+1][t+1];(0!==g||a>0)&&d.push(e,i,s),(g!==n-1||o<Math.PI)&&d.push(i,r,s)}this.setIndex(d),this.setAttribute("position",new fr(p,3)),this.setAttribute("normal",new fr(m,3)),this.setAttribute("uv",new fr(f,2))}static fromJSON(t){return new sd(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class od extends lr{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new On(16777215),this.specular=new On(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new On(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qe,this.normalScale=new bn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Mt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}function ld(t,e,n){return ud(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)}function cd(t,e,n){return!t||!n&&t.constructor===e?t:"number"===typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}function ud(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}class hd{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let a;n:{i:if(!(t<i)){for(let a=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,i=e[++n],t<i)break e}a=e.length;break n}if(t>=r)break t;{const s=e[1];t<s&&(n=2,r=s);for(let a=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===a)break;if(i=r,r=e[--n-1],t>=r)break e}a=n,n=0}}while(n<a){const i=n+a>>>1;t<e[i]?a=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let a=0;a!==i;++a)e[a]=n[r+a];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class dd extends hd{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:qe,endingEnd:qe}}intervalChanged_(t,e,n){const i=this.parameterPositions;let r=t-2,a=t+1,s=i[r],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case Xe:r=t,s=2*e-n;break;case Ye:r=i.length-2,s=e+i[r]-i[r+1];break;default:r=t,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Xe:a=t,o=2*n-e;break;case Ye:a=1,o=n+i[1]-i[0];break;default:a=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-s),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=a*c}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),m=p*p,f=m*p,g=-h*f+2*h*m-h*p,v=(1+h)*f+(-1.5-2*h)*m+(-.5+h)*p+1,_=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let y=0;y!==s;++y)r[y]=g*a[c+y]+v*a[l+y]+_*a[o+y]+x*a[u+y];return r}}class pd extends hd{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=(n-e)/(i-e),u=1-c;for(let h=0;h!==s;++h)r[h]=a[l+h]*u+a[o+h]*c;return r}}class md extends hd{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class fd{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=cd(e,this.TimeBufferType),this.values=cd(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:cd(t.times,Array),values:cd(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new md(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new pd(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new dd(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case He:e=this.InterpolantFactoryMethodDiscrete;break;case We:e=this.InterpolantFactoryMethodLinear;break;case je:e=this.InterpolantFactoryMethodSmooth;break}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return He;case this.InterpolantFactoryMethodLinear:return We;case this.InterpolantFactoryMethodSmooth:return je}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,a=i-1;while(r!==i&&n[r]<t)++r;while(-1!==a&&n[a]>e)--a;if(++a,0!==r||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const t=this.getValueSize();this.times=ld(n,r,a),this.values=ld(this.values,r*t,a*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let s=0;s!==r;s++){const e=n[s];if("number"===typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,e),t=!1;break}if(null!==a&&a>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,e,a),t=!1;break}a=e}if(void 0!==i&&ud(i))for(let s=0,o=i.length;s!==o;++s){const e=i[s];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,s,e),t=!1;break}}return t}optimize(){const t=ld(this.times),e=ld(this.values),n=this.getValueSize(),i=this.getInterpolation()===je,r=t.length-1;let a=1;for(let s=1;s<r;++s){let r=!1;const o=t[s],l=t[s+1];if(o!==l&&(1!==s||o!==t[0]))if(i)r=!0;else{const t=s*n,i=t-n,a=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[i+s]||n!==e[a+s]){r=!0;break}}}if(r){if(s!==a){t[a]=t[s];const i=s*n,r=a*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++a}}if(r>0){t[a]=t[r];for(let t=r*n,i=a*n,s=0;s!==n;++s)e[i+s]=e[t+s];++a}return a!==t.length?(this.times=ld(t,0,a),this.values=ld(e,0,a*n)):(this.times=t,this.values=e),this}clone(){const t=ld(this.times,0),e=ld(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}fd.prototype.TimeBufferType=Float32Array,fd.prototype.ValueBufferType=Float32Array,fd.prototype.DefaultInterpolation=We;class gd extends fd{}gd.prototype.ValueTypeName="bool",gd.prototype.ValueBufferType=Array,gd.prototype.DefaultInterpolation=He,gd.prototype.InterpolantFactoryMethodLinear=void 0,gd.prototype.InterpolantFactoryMethodSmooth=void 0;class vd extends fd{}vd.prototype.ValueTypeName="color";class _d extends fd{}_d.prototype.ValueTypeName="number";class xd extends hd{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-e)/(i-e);let l=t*s;for(let c=l+s;l!==c;l+=4)Xn.slerpFlat(r,0,a,l-s,a,l,o);return r}}class yd extends fd{InterpolantFactoryMethodLinear(t){return new xd(this.times,this.values,this.getValueSize(),t)}}yd.prototype.ValueTypeName="quaternion",yd.prototype.DefaultInterpolation=We,yd.prototype.InterpolantFactoryMethodSmooth=void 0;class bd extends fd{}bd.prototype.ValueTypeName="string",bd.prototype.ValueBufferType=Array,bd.prototype.DefaultInterpolation=He,bd.prototype.InterpolantFactoryMethodLinear=void 0,bd.prototype.InterpolantFactoryMethodSmooth=void 0;class Sd extends fd{}Sd.prototype.ValueTypeName="vector";const wd={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Md{constructor(t,e,n){const i=this;let r,a=!1,s=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===a&&void 0!==i.onStart&&i.onStart(t,s,o),a=!0},this.itemEnd=function(t){s++,void 0!==i.onProgress&&i.onProgress(t,s,o),s===o&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],i=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}}const Td=new Md;class Cd{constructor(t){this.manager=void 0!==t?t:Td,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const Ed={};class Ad extends Error{constructor(t,e){super(t),this.response=e}}class Pd extends Cd{constructor(t){super(t)}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=wd.get(t);if(void 0!==r)return this.manager.itemStart(t),setTimeout((()=>{e&&e(r),this.manager.itemEnd(t)}),0),r;if(void 0!==Ed[t])return void Ed[t].push({onLoad:e,onProgress:n,onError:i});Ed[t]=[],Ed[t].push({onLoad:e,onProgress:n,onError:i});const a=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),s=this.mimeType,o=this.responseType;fetch(a).then((e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"===typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=Ed[t],i=e.body.getReader(),r=e.headers.get("Content-Length")||e.headers.get("X-File-Size"),a=r?parseInt(r):0,s=0!==a;let o=0;const l=new ReadableStream({start(t){function e(){i.read().then((({done:i,value:r})=>{if(i)t.close();else{o+=r.byteLength;const i=new ProgressEvent("progress",{lengthComputable:s,loaded:o,total:a});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(i)}t.enqueue(r),e()}}))}e()}});return new Response(l)}throw new Ad(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)})).then((t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>{const e=new DOMParser;return e.parseFromString(t,s)}));case"json":return t.json();default:if(void 0===s)return t.text();{const e=/charset="?([^;"\s]*)"?/i,n=e.exec(s),i=n&&n[1]?n[1].toLowerCase():void 0,r=new TextDecoder(i);return t.arrayBuffer().then((t=>r.decode(t)))}}})).then((e=>{wd.add(t,e);const n=Ed[t];delete Ed[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onLoad&&i.onLoad(e)}})).catch((e=>{const n=Ed[t];if(void 0===n)throw this.manager.itemError(t),e;delete Ed[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Ld extends Zi{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new On(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}const Rd=new Mi,Dd=new Yn,Nd=new Yn;class zd{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new bn(512,512),this.map=null,this.mapPass=null,this.matrix=new Mi,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new da,this._frameExtents=new bn(1,1),this._viewportCount=1,this._viewports=[new Hn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Dd.setFromMatrixPosition(t.matrixWorld),e.position.copy(Dd),Nd.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Nd),e.updateMatrixWorld(),Rd.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Rd)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}const Id=new Mi,Od=new Yn,kd=new Yn;class Ud extends zd{constructor(){super(new ta(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new bn(4,2),this._viewportCount=6,this._viewports=[new Hn(2,1,1,1),new Hn(0,1,1,1),new Hn(3,1,1,1),new Hn(1,1,1,1),new Hn(3,0,1,1),new Hn(1,0,1,1)],this._cubeDirections=[new Yn(1,0,0),new Yn(-1,0,0),new Yn(0,0,1),new Yn(0,0,-1),new Yn(0,1,0),new Yn(0,-1,0)],this._cubeUps=[new Yn(0,1,0),new Yn(0,1,0),new Yn(0,1,0),new Yn(0,1,0),new Yn(0,0,1),new Yn(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Od.setFromMatrixPosition(t.matrixWorld),n.position.copy(Od),kd.copy(n.position),kd.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(kd),n.updateMatrixWorld(),i.makeTranslation(-Od.x,-Od.y,-Od.z),Id.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Id)}}class Fd extends Ld{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Ud}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Bd extends zd{constructor(){super(new al(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Gd extends Ld{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Zi.DefaultUp),this.updateMatrix(),this.target=new Zi,this.shadow=new Bd}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Vd extends Ld{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}const Hd="\\[\\]\\.:\\/",Wd=new RegExp("["+Hd+"]","g"),jd="[^"+Hd+"]",qd="[^"+Hd.replace("\\.","")+"]",Xd=/((?:WC+[\/:])*)/.source.replace("WC",jd),Yd=/(WCOD+)?/.source.replace("WCOD",qd),Zd=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",jd),Jd=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",jd),$d=new RegExp("^"+Xd+Yd+Zd+Jd+"$"),Kd=["material","materials","bones","map"];class Qd{constructor(t,e,n){const i=n||tp.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class tp{constructor(t,e,n){this.path=e,this.parsedPath=n||tp.parseTrackName(e),this.node=tp.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new tp.Composite(t,e,n):new tp(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Wd,"")}static parseTrackName(t){const e=$d.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Kd.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const a=n(r.children);if(a)return a}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=tp.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const a=t[i];if(void 0===a){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}tp.Composite=Qd,tp.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},tp.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},tp.prototype.GetterByBindingType=[tp.prototype._getValue_direct,tp.prototype._getValue_array,tp.prototype._getValue_arrayElement,tp.prototype._getValue_toArray],tp.prototype.SetterByBindingTypeAndVersioning=[[tp.prototype._setValue_direct,tp.prototype._setValue_direct_setNeedsUpdate,tp.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[tp.prototype._setValue_array,tp.prototype._setValue_array_setNeedsUpdate,tp.prototype._setValue_array_setMatrixWorldNeedsUpdate],[tp.prototype._setValue_arrayElement,tp.prototype._setValue_arrayElement_setNeedsUpdate,tp.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[tp.prototype._setValue_fromArray,tp.prototype._setValue_fromArray_setNeedsUpdate,tp.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];new Float32Array(1);class ep{constructor(){this.type="ShapePath",this.color=new On,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new yh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,a){return this.currentPath.bezierCurveTo(t,e,n,i,r,a),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new bh;r.curves=i.curves,e.push(r)}return e}function n(t,e){const n=e.length;let i=!1;for(let r=n-1,a=0;a<n;r=a++){let n=e[r],s=e[a],o=s.x-n.x,l=s.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[a],o=-o,s=e[r],l=-l),t.y<n.y||t.y>s.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(s.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=s.x)return!0}}return i}const i=td.isClockWise,r=this.subPaths;if(0===r.length)return[];let a,s,o;const l=[];if(1===r.length)return s=r[0],o=new bh,o.curves=s.curves,l.push(o),l;let c=!i(r[0].getPoints());c=t?!c:c;const u=[],h=[];let d,p,m=[],f=0;h[f]=void 0,m[f]=[];for(let g=0,v=r.length;g<v;g++)s=r[g],d=s.getPoints(),a=i(d),a=t?!a:a,a?(!c&&h[f]&&f++,h[f]={s:new bh,p:d},h[f].s.curves=s.curves,c&&f++,m[f]=[]):m[f].push({h:s,p:d[0]});if(!h[0])return e(r);if(h.length>1){let t=!1,e=0;for(let n=0,i=h.length;n<i;n++)u[n]=[];for(let i=0,r=h.length;i<r;i++){const r=m[i];for(let a=0;a<r.length;a++){const s=r[a];let o=!0;for(let r=0;r<h.length;r++)n(s.p,h[r].p)&&(i!==r&&e++,o?(o=!1,u[r].push(s)):t=!0);o&&u[i].push(s)}}e>0&&!1===t&&(m=u)}for(let g=0,v=h.length;g<v;g++){o=h[g].s,l.push(o),p=m[g];for(let t=0,e=p.length;t<e;t++)o.holes.push(p[t].h)}return l}}"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:U}})),"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=U);class np extends Cd{constructor(t){super(t)}load(t,e,n,i){const r=this,a=new Pd(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(t){const n=r.parse(JSON.parse(t));e&&e(n)}),n,i)}parse(t){return new ip(t)}}class ip{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],i=rp(t,e,this.data);for(let r=0,a=i.length;r<a;r++)n.push(...i[r].toShapes());return n}}function rp(t,e,n){const i=Array.from(t),r=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[];let o=0,l=0;for(let c=0;c<i.length;c++){const t=i[c];if("\n"===t)o=0,l-=a;else{const e=ap(t,r,o,l,n);o+=e.offsetX,s.push(e.path)}}return s}function ap(t,e,n,i,r){const a=r.glyphs[t]||r.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");const s=new ep;let o,l,c,u,h,d,p,m;if(a.o){const t=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let r=0,a=t.length;r<a;){const a=t[r++];switch(a){case"m":o=t[r++]*e+n,l=t[r++]*e+i,s.moveTo(o,l);break;case"l":o=t[r++]*e+n,l=t[r++]*e+i,s.lineTo(o,l);break;case"q":c=t[r++]*e+n,u=t[r++]*e+i,h=t[r++]*e+n,d=t[r++]*e+i,s.quadraticCurveTo(h,d,c,u);break;case"b":c=t[r++]*e+n,u=t[r++]*e+i,h=t[r++]*e+n,d=t[r++]*e+i,p=t[r++]*e+n,m=t[r++]*e+i,s.bezierCurveTo(h,d,p,m,c,u);break}}}return{offsetX:a.ha*e,path:s}}class sp extends id{constructor(t,e={}){const n=e.font;if(void 0===n)super();else{const i=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(i,e)}this.type="TextGeometry"}}var op=n(4701),lp={name:"A3DTextGenerator",components:{HeaderOnlineTools:a.Z,IconAdd:l.Z,IconDownload:c.Z,IconDelete:v,IconEye:w,ModalColorPicker:op.Z,IconForward:P,IconBackward:I,FooterComponent:s.Z,Breadcrumb:o.Z},data(){return{colorPickerTarget:null,currentElement:null,fontLoader:new np,rangeTextSizeMin:0,rangeTextSizeMax:2,lightObjects:[],font:null,fonts:[{fileName:"helvetiker_bold.typeface.json",name:"Helvetiker Bold"},{fileName:"Roboto_Regular.json",name:"Roboto Regular"},{fileName:"Roboto_Bold.json",name:"Roboto Bold"},{fileName:"Nunito_Regular.json",name:"Nunito Regular"},{fileName:"Nunito_Bold.json",name:"Nunito Bold"},{fileName:"Lora_Regular.json",name:"Lora Regular"},{fileName:"Lora_Bold.json",name:"Lora Bold"}],options:{fontFileName:"helvetiker_bold.typeface.json",cameraType:"PerspectiveCamera",text:"3D Text",size:1,textColor:"#ff0000",transparentBackground:!1,backgroundColor:"#ffffff",curveSegments:5,bevelSize:.04,bevelSegments:8,bevelThickness:.03,bevelOffset:0,height:.2,castShadow:!0,receiveShadow:!0,textMesh:null,camera:{fov:50,near:.01,far:1e3,left:-3,right:3,top:3,bottom:-3},textPosition:{x:0,y:0,z:0},textRotation:{x:0,y:0,z:0},cameraPosition:{x:0,y:0,z:5},cameraRotation:{x:0,y:0,z:0},cameraLookAt:{x:0,y:0,z:0},lights:[],additionalObjects:[]},canvasSizeOptions:[{id:"640 x 480",width:640,height:480},{id:"800 x 600",width:800,height:600},{id:"1024 x 768",width:1024,height:768},{id:"1280 x 720",width:1280,height:720},{id:"custom",width:null,height:null}],canvasSizeId:null,width:null,height:null,cube:null,renderer:null,scene:null,camera:null,cameraDirection:new Yn}},mounted(){this.canvasSizeId=this.canvasSizeOptions[0].id,this.width=this.canvasSizeOptions[0].width,this.height=this.canvasSizeOptions[0].height,this.init()},methods:{updateCameraFrustum(){this.camera.left=Number(this.options.camera.left),this.camera.right=Number(this.options.camera.right),this.camera.top=Number(this.options.camera.top),this.camera.bottom=Number(this.options.camera.bottom),this.camera.updateProjectionMatrix(),this.renderScene()},decreaseCameraLeft(){this.options.camera.left=Number(this.options.camera.left)-.1,this.updateCameraFrustum()},increaseCameraLeft(){this.options.camera.left=Number(this.options.camera.left)+.1,this.updateCameraFrustum()},resetCameraLeft(){this.options.camera.left=-3,this.updateCameraFrustum()},decreaseCameraRight(){this.options.camera.right=Number(this.options.camera.right)-.1,this.updateCameraFrustum()},increaseCameraRight(){this.options.camera.right=Number(this.options.camera.right)+.1,this.updateCameraFrustum()},resetCameraRight(){this.options.camera.right=3,this.updateCameraFrustum()},decreaseCameraTop(){this.options.camera.top=Number(this.options.camera.top)-.1,this.updateCameraFrustum()},increaseCameraTop(){this.options.camera.top=Number(this.options.camera.top)+.1,this.updateCameraFrustum()},resetCameraTop(){this.options.camera.top=3,this.updateCameraFrustum()},decreaseCameraBottom(){this.options.camera.bottom=Number(this.options.camera.bottom)-.1,this.updateCameraFrustum()},increaseCameraBottom(){this.options.camera.bottom=Number(this.options.camera.bottom)+.1,this.updateCameraFrustum()},resetCameraBottom(){this.options.camera.bottom=-3,this.updateCameraFrustum()},lookAtTextCenter(){this.camera.lookAt(this.textMesh.position.x,this.textMesh.position.y,this.textMesh.position.z),this.options.cameraRotation.x=this.camera.rotation.x,this.options.cameraRotation.y=this.camera.rotation.y,this.options.cameraRotation.z=this.camera.rotation.z,this.renderScene()},decreaseCameraPosition(t){this.options.cameraPosition[t]=Number(this.options.cameraPosition[t])-.1,this.updateCameraPosition()},increaseCameraPosition(t){this.options.cameraPosition[t]=Number(this.options.cameraPosition[t])+.1,this.updateCameraPosition()},resetCameraPosition(t){this.options.cameraPosition[t]="z"==t?3:0,this.updateCameraPosition()},updateCameraPosition(){this.camera.position.x=Number(this.options.cameraPosition.x),this.camera.position.y=Number(this.options.cameraPosition.y),this.camera.position.z=Number(this.options.cameraPosition.z),this.renderScene()},moveCameraForward(t){this.camera.getWorldDirection(this.cameraDirection),this.camera.position.addScaledVector(this.cameraDirection,t),this.renderScene(),this.options.cameraPosition.x=this.camera.position.x,this.options.cameraPosition.y=this.camera.position.y,this.options.cameraPosition.z=this.camera.position.z},moveCamera(t,e,n){this.options.cameraPosition.x+=t,this.options.cameraPosition.y+=e,this.options.cameraPosition.z+=n,this.camera.position.x=this.options.cameraPosition.x,this.camera.position.y=this.options.cameraPosition.y,this.camera.position.z=this.options.cameraPosition.z,this.renderScene()},decreaseCameraRotation(t){this.options.cameraRotation[t]=Number(this.options.cameraRotation[t])-.1,this.triggerUpdateCameraRotation()},increaseCameraRotation(t){this.options.cameraRotation[t]=Number(this.options.cameraRotation[t])+.1,this.triggerUpdateCameraRotation()},resetCameraRotation(t){this.options.cameraRotation[t]=0,this.triggerUpdateCameraRotation()},triggerUpdateCameraRotation(){this.camera.rotation.x=this.options.cameraRotation.x,this.camera.rotation.y=this.options.cameraRotation.y,this.camera.rotation.z=this.options.cameraRotation.z,this.renderScene()},rotateCamera(t,e,n){this.options.cameraRotation.x=Number(this.options.cameraRotation.x)+Number(t),this.options.cameraRotation.y=Number(this.options.cameraRotation.y)+Number(e),this.options.cameraRotation.z=Number(this.options.cameraRotation.z)+Number(n),this.camera.rotation.x=Number(this.options.cameraRotation.x),this.camera.rotation.y=Number(this.options.cameraRotation.y),this.camera.rotation.z=Number(this.options.cameraRotation.z),this.renderScene()},decreaseCameraFov(){this.options.camera.fov-=5,this.updateCameraFov()},increaseCameraFov(){this.options.camera.fov+=5,this.updateCameraFov()},resetCameraFov(){this.options.camera.fov=50,this.updateCameraFov()},updateCameraFov(){this.camera.fov=this.options.camera.fov,this.camera.updateProjectionMatrix(),this.renderScene()},updateCameraType(){"PerspectiveCamera"==this.options.cameraType?this.camera=new ta(this.options.camera.fov,this.width/this.height,this.options.camera.near,this.options.camera.far):"OrthographicCamera"==this.options.cameraType&&(this.camera=new al(this.options.camera.left,this.options.camera.right,this.options.camera.top,this.options.camera.bottom,this.options.camera.near,this.options.camera.far)),this.camera.position.x=this.options.cameraPosition.x,this.camera.position.y=this.options.cameraPosition.y,this.camera.position.z=this.options.cameraPosition.z,this.camera.rotation.x=this.options.cameraRotation.x,this.camera.rotation.y=this.options.cameraRotation.y,this.camera.rotation.z=this.options.cameraRotation.z,this.renderScene()},removeLight(t){let e=0;for(let i=0;i<this.options.lights.length;i++)this.options.lights[i].id==t.id&&(e=i);this.options.lights.splice(e,1);let n=t.lightObject;this.scene.remove(n),this.renderScene()},addLight(){let t={id:"light_"+Math.random(),type:"DirectionalLight",color:"#ffffff",intensity:1,position:{x:1,y:1,z:2},target:{x:0,y:0,z:0},castShadow:!0,lightObject:null};this.options.lights.push(t);const e=new Gd(t.color,t.intensity);e.position.set(t.position.x,t.position.y,t.position.z),e.target.position.set(t.target.x,t.target.y,t.target.z),e.castShadow=t.castShadow,this.scene.add(e),this.scene.add(e.target),t.lightObject=e,this.renderScene()},updateLightType(t){let e=null;"DirectionalLight"==t.type?(e=new Gd(t.color,t.intensity),e.target.position.set(t.target.x,t.target.y,t.target.z),e.position.set(t.position.x,t.position.y,t.position.z),e.castShadow=t.castShadow):"PointLight"==t.type?(e=new Fd(t.color,t.intensity),e.position.set(t.position.x,t.position.y,t.position.z),e.castShadow=t.castShadow):"AmbientLight"==t.type&&(e=new Vd(t.color,t.intensity)),null!=t.lightObject.target&&this.scene.remove(t.lightObject.target),this.scene.remove(t.lightObject),this.scene.add(e),"DirectionalLight"==t.type&&this.scene.add(e.target),t.lightObject=e,this.renderScene()},updateLightColor(){for(let t=0;t<this.lightObjects.length;t++){let e=k.Z.hexToRgb(this.options.lights[t].color);this.lightObjects[t].color.setRGB(e.r/256,e.g/256,e.b/256)}this.renderScene()},updateLightShadow(t){t.lightObject.castShadow=t.castShadow,this.renderScene()},decreaseLightIntensity(t){t.intensity=Number(t.intensity)-.1,t.lightObject.intensity=t.intensity,this.renderScene()},increaseLightIntensity(t){t.intensity=Number(t.intensity)+.1,t.lightObject.intensity=t.intensity,this.renderScene()},resetLightIntensity(t){t.intensity=1,t.lightObject.intensity=t.intensity,this.renderScene()},updateLightIntensity(t){t.lightObject.intensity=t.intensity,this.renderScene()},decreaseLightPosition(t,e){t.position[e]=Number(t.position[e])-.2,t.lightObject.position.set(t.position.x,t.position.y,t.position.z),this.renderScene()},increaseLightPosition(t,e){t.position[e]=Number(t.position[e])+.2,t.lightObject.position.set(t.position.x,t.position.y,t.position.z),this.renderScene()},resetLightPosition(t,e){t.position[e]="z"==e?2:1,t.lightObject.position.set(t.position.x,t.position.y,t.position.z),this.renderScene()},updateLightPosition(t){t.lightObject.position.set(t.position.x,t.position.y,t.position.z),this.renderScene()},updateTextShadow(){this.textMesh.castShadow=this.options.castShadow,this.textMesh.receiveShadow=this.options.receiveShadow,this.renderScene()},resetTextSize(){this.options.size=1,this.updateTextSize()},increaseTextSize(){this.options.size=1.1*Number(this.options.size),this.options.size=this.roundNumber(this.options.size),this.updateTextSize()},decreaseTextSize(){this.options.size=Number(this.options.size)/1.1,this.options.size=this.roundNumber(this.options.size),this.updateTextSize()},updateTextSize(){this.textMesh.scale.set(Number(this.options.size),Number(this.options.size),Number(this.options.size)),this.renderScene()},updateRangeTextSize(){this.options.size>1?this.rangeTextSizeMax=2*this.options.size:this.rangeTextSizeMax=2},decreaseTextPosition(t){this.options.textPosition[t]=Number(this.options.textPosition[t])-.1,this.options.textPosition[t]=this.roundNumber(this.options.textPosition[t]),this.updateTextPosition()},increaseTextPosition(t){this.options.textPosition[t]=Number(this.options.textPosition[t])+.1,this.options.textPosition[t]=this.roundNumber(this.options.textPosition[t]),this.updateTextPosition()},resetTextPosition(t){this.options.textPosition[t]=0,this.updateTextPosition()},updateTextPosition(){this.textMesh.position.set(this.options.textPosition.x,this.options.textPosition.y,this.options.textPosition.z),this.renderScene()},increaseTextRotationX(){this.options.textRotation.x=Number(this.options.textRotation.x)+.1,this.updateTextRotation()},decreaseTextRotationX(){this.options.textRotation.x=Number(this.options.textRotation.x)-.1,this.updateTextRotation()},resetTextRotationX(){this.options.textRotation.x=0,this.updateTextRotation()},increaseTextRotationY(){this.options.textRotation.y=Number(this.options.textRotation.y)+.1,this.updateTextRotation()},decreaseTextRotationY(){this.options.textRotation.y=Number(this.options.textRotation.y)-.1,this.updateTextRotation()},resetTextRotationY(){this.options.textRotation.y=0,this.updateTextRotation()},increaseTextRotationZ(){this.options.textRotation.z=Number(this.options.textRotation.z)+.1,this.updateTextRotation()},decreaseTextRotationZ(){this.options.textRotation.z=Number(this.options.textRotation.z)-.1,this.updateTextRotation()},resetTextRotationZ(){this.options.textRotation.z=0,this.updateTextRotation()},updateTextRotation(){this.textMesh.rotation.set(this.options.textRotation.x,this.options.textRotation.y,this.options.textRotation.z),this.renderScene()},resetTextHeight(){this.options.height=.2,this.updateTextGeometry()},increaseTextHeight(){this.options.height=1.2*Number(this.options.height),this.options.height=this.roundNumber(this.options.height),this.updateTextGeometry()},decreaseTextHeight(){this.options.height=Number(this.options.height)/1.2,this.options.height=this.roundNumber(this.options.height),this.updateTextGeometry()},increaseBevelAttribute(t){"bevelSize"==t?this.options.bevelSize=Number(this.options.bevelSize)+.01:"bevelThickness"==t?this.options.bevelThickness=Number(this.options.bevelThickness)+.01:"bevelOffset"==t?this.options.bevelOffset=Number(this.options.bevelOffset)+.01:"bevelSegments"==t&&(this.options.bevelSegments=Number(this.options.bevelSegments)+1),this.updateTextGeometry()},decreaseBevelAttribute(t){"bevelSize"==t?this.options.bevelSize=Number(this.options.bevelSize)-.01:"bevelThickness"==t?this.options.bevelThickness=Number(this.options.bevelThickness)-.01:"bevelOffset"==t?this.options.bevelOffset=Number(this.options.bevelOffset)-.01:"bevelSegments"==t&&(this.options.bevelSegments=Number(this.options.bevelSegments)-1),this.updateTextGeometry()},resetBevelAttribute(t){"bevelSize"==t?this.options.bevelSize=.04:"bevelThickness"==t?this.options.bevelThickness=.03:"bevelOffset"==t?this.options.bevelOffset=0:"bevelSegments"==t&&(this.options.bevelSegments=8),this.updateTextGeometry()},decreaseCurveSegments(){this.options.curveSegments=Number(this.options.curveSegments)-1,this.options.curveSegments<1&&(this.options.curveSegments=1),this.updateTextGeometry()},increaseCurveSegments(){this.options.curveSegments=Number(this.options.curveSegments)+1,this.updateTextGeometry()},resetCurveSegments(){this.options.curveSegments=5,this.updateTextGeometry()},updateTextGeometry(){const t=new sp(this.options.text,{font:this.font,size:1,height:Number(this.options.height),curveSegments:this.options.curveSegments,bevelEnabled:!0,bevelThickness:this.options.bevelThickness,bevelSize:this.options.bevelSize,bevelOffset:Number(this.options.bevelOffset),bevelSegments:this.options.bevelSegments});t.center(),this.textMesh.geometry=t,this.renderScene()},updateTextMaterial(){const t=[new od({color:this.options.textColor,flatShading:!1}),new od({color:this.options.textColor})];this.textMesh.material=t,this.renderScene()},removeAdditionalObject(t){let e=0;for(let i=0;i<this.options.additionalObjects.length;i++)this.options.additionalObjects[i].id==t&&(e=i);let n=this.options.additionalObjects[e].mesh;this.scene.remove(n),this.options.additionalObjects.splice(e,1),this.renderScene()},decreaseAdditionalObjectSize(t,e){t[e]=Number(t[e])-.2,this.updateAdditionalObjectGeometry()},increaseAdditionalObjectSize(t,e){t[e]=Number(t[e])+.2,this.updateAdditionalObjectGeometry()},resetAdditionalObjectSize(t,e){"width"==e?t[e]=16:"height"==e&&(t[e]=.3),"depth"==e&&(t[e]=6),"radius"==e&&(t[e]=1),this.updateAdditionalObjectGeometry()},updateAdditionalObjectGeometry(){for(let t=0;t<this.options.additionalObjects.length;t++){let e=this.options.additionalObjects[t],n=null;"box"==e.type?n=new Wr(Number(e.width),Number(e.height),Number(e.depth)):"sphere"==e.type&&(n=new sd(Number(e.radius),Number(e.widthSegments),Number(e.heightSegments))),e.mesh.geometry=n}this.renderScene()},updateAdditionalObjectShadow(t){t.mesh.receiveShadow=t.receiveShadow,t.mesh.castShadow=t.castShadow,this.renderScene()},decreaseAdditionalObjectPosition(t,e){t[e]=Number(t[e])-.2,t.mesh.position.set(t.x,t.y,t.z),this.renderScene()},increaseAdditionalObjectPosition(t,e){t[e]=Number(t[e])+.2,t.mesh.position.set(t.x,t.y,t.z),this.renderScene()},resetAdditionalObjectPosition(t,e){"x"==e?t[e]=0:"y"==e?t[e]=-2:"z"==e&&(t[e]=-3),t.mesh.position.set(t.x,t.y,t.z),this.renderScene()},updateAdditionalObjectPosition(){for(let t=0;t<this.options.additionalObjects.length;t++){let e=this.options.additionalObjects[t];e.mesh.position.set(e.x,e.y,e.z)}this.renderScene()},updateAdditionalObjectMaterial(){for(let t=0;t<this.options.additionalObjects.length;t++){let e=this.options.additionalObjects[t];const n=new od({color:new On(e.color),flatShading:!1});e.mesh.material=n}this.renderScene()},addBox(){let t={id:"additionalObject_"+Math.random(),type:"box",x:0,y:-2,z:-3,width:16,height:.3,depth:6,color:"#ffffff",receiveShadow:!0,castShadow:!0,mesh:null,radius:1,widthSegments:32,heightSegments:32};this.options.additionalObjects.push(t);const e=new Wr(t.width,t.height,t.depth),n=new od({color:new On(t.color),flatShading:!1}),i=new Gr(e,n);i.position.set(t.x,t.y,t.z),i.receiveShadow=t.receiveShadow,i.castShadow=t.castShadow,this.scene.add(i),t.mesh=i,this.renderScene()},addSphere(){let t={id:"additionalObject_"+Math.random(),type:"sphere",x:0,y:-2,z:-3,width:16,height:.3,depth:6,color:"#ffffff",receiveShadow:!0,castShadow:!0,mesh:null,radius:1,widthSegments:32,heightSegments:32};this.options.additionalObjects.push(t);const e=new sd(t.radius,t.widthSegments,t.heightSegments),n=new od({color:new On(t.color),flatShading:!1}),i=new Gr(e,n);i.position.set(t.x,t.y,t.z),i.receiveShadow=t.receiveShadow,i.castShadow=t.castShadow,this.scene.add(i),t.mesh=i,this.renderScene()},addAdditionalObject(){this.addBox()},updateAdditionalObjectType(){this.updateAdditionalObjectGeometry()},init(){this.renderer=new Hu({antialias:!0,preserveDrawingBuffer:!0,alpha:!0,canvas:document.getElementById("canvas_3d_text")}),this.renderer.setSize(this.width,this.height),this.renderer.setClearColor(0,0),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=H,this.loadFont()},updateCanvasSize(){if("custom"!=this.canvasSizeId){let t=this.canvasSizeOptions.find((t=>t.id==this.canvasSizeId));this.width=t.width,this.height=t.height}this.renderer.setSize(this.width,this.height),this.updateCameraType()},loadFont(){this.fontLoader.load("/fonts/"+this.options.fontFileName,this.onFontLoaded)},onFontLoaded(t){this.font=t,this.createScene()},loadSelectedFont(){this.fontLoader.load("/fonts/"+this.options.fontFileName,this.onSelectedFontLoaded)},onSelectedFontLoaded(t){this.font=t,this.updateTextGeometry()},updateScene(){},updateBackground(){0==this.options.transparentBackground?this.scene.background=new On(this.options.backgroundColor):this.scene.background=null,this.renderScene()},createScene(){this.scene=new ju,0==this.options.transparentBackground&&(this.scene.background=new On(this.options.backgroundColor));const t=[new od({color:this.options.textColor,flatShading:!1}),new od({color:this.options.textColor})],e=new sp(this.options.text,{font:this.font,size:this.options.size,height:Number(this.options.height),curveSegments:this.options.curveSegments,bevelEnabled:!0,bevelThickness:this.options.bevelThickness,bevelSize:this.options.bevelSize,bevelOffset:Number(this.options.bevelOffset),bevelSegments:this.options.bevelSegments});e.center();const n=new Gr(e,t);n.castShadow=this.options.castShadow,n.receiveShadow=this.options.receiveShadow,this.scene.add(n),this.textMesh=n,"PerspectiveCamera"==this.options.cameraType?(this.camera=new ta(this.options.camera.fov,this.width/this.height,this.options.camera.near,this.options.camera.far),this.camera.position.x=this.options.cameraPosition.x,this.camera.position.y=this.options.cameraPosition.y,this.camera.position.z=this.options.cameraPosition.z):"OrthographicCamera"==this.options.cameraType&&(this.camera=new al(this.width/-100,this.width/100,this.height/100,this.height/-100,this.options.camera.near,this.options.camera.far),this.camera.position.x=this.options.cameraPosition.x,this.camera.position.y=this.options.cameraPosition.y,this.camera.position.z=this.options.cameraPosition.z),this.camera.rotation.x=this.options.cameraRotation.x,this.camera.rotation.y=this.options.cameraRotation.y,this.camera.rotation.z=this.options.cameraRotation.z,this.addLight(),this.renderScene()},renderScene(){this.renderer.render(this.scene,this.camera)},animate(){requestAnimationFrame(this.animate),this.renderer.render(this.scene,this.camera)},canvasMouseWheel(t){let e=-.002*t.deltaY;this.moveCameraForward(e),this.renderScene()},canvasMouseMove(t){if(this.drawStart){let e=t.clientX-this.drawStart.x,n=t.clientY-this.drawStart.y;0==this.mouseDownButton?(this.options.cameraRotation.x=Number(this.options.cameraRotation.x)+.005*n,this.options.cameraRotation.y=Number(this.options.cameraRotation.y)+.005*e,this.triggerUpdateCameraRotation()):2==this.mouseDownButton&&(this.options.cameraPosition.x=Number(this.options.cameraPosition.x)-.005*e,this.options.cameraPosition.y=Number(this.options.cameraPosition.y)+.005*n,this.updateCameraPosition()),this.drawStart={x:t.clientX,y:t.clientY}}},canvasMouseUp(){this.drawStart=null},canvasMouseDown(t){this.mouseDownButton=t.button,this.drawStart={x:t.clientX,y:t.clientY}},roundNumber(t){let e=6,n=10**e;return Math.round(t*n)/n},openColorPicker(t,e){this.colorPickerTarget=t,this.currentElement=e,window.$("#modalColorPicker").modal("show"),this.$refs.modalColorPicker.colorPickCallback=this.onColorPicked},onColorPicked(t){if("textColor"==this.colorPickerTarget)this.options.textColor=t,this.updateTextMaterial();else if("backgroundColor"==this.colorPickerTarget)this.options.backgroundColor=t,this.updateBackground();else if("lightColor"==this.colorPickerTarget){let e=k.Z.hexToRgb(t);this.currentElement.color=t,this.currentElement.lightObject.color.setRGB(e.r/256,e.g/256,e.b/256),this.renderScene()}else if("additionalObjectColor"==this.colorPickerTarget){let e=k.Z.hexToRgb(t);this.currentElement.color=t,this.currentElement.mesh.material.color.setRGB(e.r/256,e.g/256,e.b/256),this.renderScene()}},downloadImage(){let t=this.renderer.domElement;t.toBlob((function(t){(0,O.saveAs)(t,"3D-text.png")}))}}},cp=lp,up=(0,f.Z)(cp,i,r,!1,null,null,null),hp=up.exports},6739:function(){},2271:function(t,e,n){"use strict";t.exports=n.p+"img/3D-text-isometric-with-rotation.bffe895c.png"},6292:function(t,e,n){"use strict";t.exports=n.p+"img/3D-text-with-point-light.c8f8c89c.png"},1002:function(t,e,n){"use strict";t.exports=n.p+"img/3D-text.a07109c2.png"}}]);